{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins,\n  data,\n  yValueField\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    display: 'none'\n  });\n  const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n  const colorScale = d3.scaleLinear().domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]).range(['yellow', 'orange', 'red']);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const binData = data.filter(d => d.x >= bin.x - 15 && d.x <= bin.x + 15 && d.y >= bin.y - 15 && d.y <= bin.y + 15);\n\n      // Filter out only valid data points (non-null and non-zero)\n      const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n      // Calculate mean from valid data points\n      const meanValue = validDataPoints.length > 0 ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length : 0;\n\n      // Skip rendering this bin if the meanValue is 0 or no valid data points\n      if (meanValue === 0 || validDataPoints.length === 0) {\n        return null; // Skip this bin\n      }\n      const fillColor = colorScale(meanValue);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          // Show the tooltip with mean value\n          setTooltip({\n            display: 'block',\n            x: 770,\n            y: 520,\n            content: [`Numbers of Data points: ${validDataPoints.length}`, `Mean Value: ${meanValue.toFixed(2)}`]\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3Hexbin().hexagon(5),\n          transform: `translate(${bin.x}, ${bin.y})`,\n          fill: fillColor,\n          stroke: \"black\",\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${tooltip.x}, ${tooltip.y})`,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"200\",\n        height: \"60\",\n        fill: \"white\",\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        fontSize: \"13\",\n        fontWeight: \"bold\",\n        textAnchor: \"middle\",\n        children: tooltip.content.map((line, index) => /*#__PURE__*/_jsxDEV(\"tspan\", {\n          x: \"0\",\n          dy: index === 0 ? 0 : 15,\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"cFcvUXz/VuJYq8f1l2ttuLcSJIo=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","d3","hexbin","d3Hexbin","jsxDEV","_jsxDEV","Marks","bins","data","yValueField","_s","tooltip","setTooltip","display","hrvValues","map","d","filter","h","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","x","y","validDataPoints","meanValue","length","reduce","sum","fillColor","onMouseEnter","e","content","toFixed","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","width","height","fontSize","fontWeight","textAnchor","line","index","dy","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3'; \nimport { hexbin as d3Hexbin } from 'd3-hexbin'; \n\nexport const Marks = ({ bins, data, yValueField }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none' });\n\n    const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - 15 && d.x <= bin.x + 15 &&\n                    d.y >= bin.y - 15 && d.y <= bin.y + 15\n                );\n\n                // Filter out only valid data points (non-null and non-zero)\n                const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n                // Calculate mean from valid data points\n                const meanValue = validDataPoints.length > 0 \n                    ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length \n                    : 0;\n\n                // Skip rendering this bin if the meanValue is 0 or no valid data points\n                if (meanValue === 0 || validDataPoints.length === 0) {\n                    return null; // Skip this bin\n                }\n\n                const fillColor = colorScale(meanValue);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           // Show the tooltip with mean value\n                           setTooltip({\n                               display: 'block',\n                               x: 770,\n                               y: 520,\n                               content: [\n                                   `Numbers of Data points: ${validDataPoints.length}`,\n                                   `Mean Value: ${meanValue.toFixed(2)}`\n                               ], \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                        <path \n                            d={d3Hexbin().hexagon(5)} \n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                        />\n                    </g>\n                );\n            })}\n            {/* Tooltip Rendering */}\n            <g transform={`translate(${tooltip.x}, ${tooltip.y})`} style={{ display: tooltip.display, pointerEvents: 'none' }}>\n                <rect width=\"200\" height=\"60\" fill=\"white\" stroke=\"black\" />\n                <text fill=\"black\" fontSize=\"13\" fontWeight='bold' textAnchor=\"middle\">\n                    {tooltip.content.map((line, index) => (\n                        <tspan x=\"0\" dy={index === 0 ? 0 : 15} key={index}>{line}</tspan>\n                    ))}\n                </text>\n            </g>\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,SAASC,MAAM,IAAIC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,OAAO,EAAE;EAAO,CAAC,CAAC;EAE3D,MAAMC,SAAS,GAAGN,IAAI,CAACO,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACP,WAAW,CAAC,CAAC,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,IAAI,IAAI,IAAIA,CAAC,KAAK,CAAC,CAAC;EACjF,MAAMC,UAAU,GAAGlB,EAAE,CAACmB,WAAW,CAAC,CAAC,CAC9BC,MAAM,CAAC,CAACpB,EAAE,CAACqB,GAAG,CAACR,SAAS,CAAC,EAAEb,EAAE,CAACsB,IAAI,CAACT,SAAS,CAAC,EAAEb,EAAE,CAACuB,GAAG,CAACV,SAAS,CAAC,CAAC,CAAC,CAClEW,KAAK,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;EAEvC,oBACIpB,OAAA;IAAGqB,SAAS,EAAC,OAAO;IAAAC,QAAA,GACfpB,IAAI,CAACQ,GAAG,CAAC,CAACa,GAAG,EAAEC,CAAC,KAAK;MAClB,MAAMC,OAAO,GAAGtB,IAAI,CAACS,MAAM,CAACD,CAAC,IACzBA,CAAC,CAACe,CAAC,IAAIH,GAAG,CAACG,CAAC,GAAG,EAAE,IAAIf,CAAC,CAACe,CAAC,IAAIH,GAAG,CAACG,CAAC,GAAG,EAAE,IACtCf,CAAC,CAACgB,CAAC,IAAIJ,GAAG,CAACI,CAAC,GAAG,EAAE,IAAIhB,CAAC,CAACgB,CAAC,IAAIJ,GAAG,CAACI,CAAC,GAAG,EACxC,CAAC;;MAED;MACA,MAAMC,eAAe,GAAGH,OAAO,CAACb,MAAM,CAACD,CAAC,IAAIA,CAAC,CAACP,WAAW,CAAC,IAAI,IAAI,IAAIO,CAAC,CAACP,WAAW,CAAC,KAAK,CAAC,CAAC;;MAE3F;MACA,MAAMyB,SAAS,GAAGD,eAAe,CAACE,MAAM,GAAG,CAAC,GACtCF,eAAe,CAACG,MAAM,CAAC,CAACC,GAAG,EAAErB,CAAC,KAAKqB,GAAG,GAAGrB,CAAC,CAACP,WAAW,CAAC,EAAE,CAAC,CAAC,GAAGwB,eAAe,CAACE,MAAM,GACpF,CAAC;;MAEP;MACA,IAAID,SAAS,KAAK,CAAC,IAAID,eAAe,CAACE,MAAM,KAAK,CAAC,EAAE;QACjD,OAAO,IAAI,CAAC,CAAC;MACjB;MAEA,MAAMG,SAAS,GAAGnB,UAAU,CAACe,SAAS,CAAC;MAEvC,oBACI7B,OAAA;QACGkC,YAAY,EAAGC,CAAC,IAAK;UACjB;UACA5B,UAAU,CAAC;YACPC,OAAO,EAAE,OAAO;YAChBkB,CAAC,EAAE,GAAG;YACNC,CAAC,EAAE,GAAG;YACNS,OAAO,EAAE,CACL,2BAA2BR,eAAe,CAACE,MAAM,EAAE,EACnD,eAAeD,SAAS,CAACQ,OAAO,CAAC,CAAC,CAAC,EAAE;UAE7C,CAAC,CAAC;QACN,CAAE;QACFC,YAAY,EAAEA,CAAA,KAAM;UAChB/B,UAAU,CAAC;YAAEC,OAAO,EAAE;UAAO,CAAC,CAAC;QACnC,CAAE;QAAAc,QAAA,eACDtB,OAAA;UACIW,CAAC,EAAEb,QAAQ,CAAC,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAE;UACzBC,SAAS,EAAE,aAAajB,GAAG,CAACG,CAAC,KAAKH,GAAG,CAACI,CAAC,GAAI;UAC3Cc,IAAI,EAAER,SAAU;UAChBS,MAAM,EAAC,OAAO;UACdC,WAAW,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC,GAtBEvB,CAAC;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBN,CAAC;IAEZ,CAAC,CAAC,eAEF/C,OAAA;MAAGwC,SAAS,EAAE,aAAalC,OAAO,CAACoB,CAAC,KAAKpB,OAAO,CAACqB,CAAC,GAAI;MAACqB,KAAK,EAAE;QAAExC,OAAO,EAAEF,OAAO,CAACE,OAAO;QAAEyC,aAAa,EAAE;MAAO,CAAE;MAAA3B,QAAA,gBAC9GtB,OAAA;QAAMkD,KAAK,EAAC,KAAK;QAACC,MAAM,EAAC,IAAI;QAACV,IAAI,EAAC,OAAO;QAACC,MAAM,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5D/C,OAAA;QAAMyC,IAAI,EAAC,OAAO;QAACW,QAAQ,EAAC,IAAI;QAACC,UAAU,EAAC,MAAM;QAACC,UAAU,EAAC,QAAQ;QAAAhC,QAAA,EACjEhB,OAAO,CAAC8B,OAAO,CAAC1B,GAAG,CAAC,CAAC6C,IAAI,EAAEC,KAAK,kBAC7BxD,OAAA;UAAO0B,CAAC,EAAC,GAAG;UAAC+B,EAAE,EAAED,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,EAAG;UAAAlC,QAAA,EAAciC;QAAI,GAAZC,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAAC1C,EAAA,CArEWJ,KAAK;AAAAyD,EAAA,GAALzD,KAAK;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}