{"ast":null,"code":"import React,{useState}from'react';import{useWorldAtlas}from'./useWorldAtlas';import'./App.css';import{useData}from'./useData';import{Hexbinmap}from'./HexbinMap/index.js';import{DateHistogram}from'./DateHistogram/index.js';import{scaleLinear}from'd3';import ColorLegend from'./HexbinMap/ColorLegend.js';import*as d3 from'd3';import Filters from'./Filters';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const width=1000;const height=900;const dateHistogramSize=0.24;const orderedDays=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];const App=()=>{const worldAtlas=useWorldAtlas();const data=useData();const[brushExtent,setBrushExtent]=useState(null);const[participant,setParticipant]=useState(\"All\");const[gender,setGender]=useState(\"Both\");const[modeButton,setModeButton]=useState(\"Both\");const[yValueField,setYValueField]=useState(\"HRV\");// Initialize with HRV\nif(!worldAtlas||!data||data.length===0){return/*#__PURE__*/_jsx(\"svg\",{width:width,height:height,children:/*#__PURE__*/_jsx(\"text\",{x:width/2,y:height/2,textAnchor:\"middle\",fontSize:\"14\",fill:\"black\",children:\"Loading...\"})});}// Get unique participants dynamically and sort them\nconst uniqueParticipants=Array.from(new Set(data.map(d=>d.Participant))).sort((a,b)=>a-b);// Sort values from smallest to largest\n// Filter Data based on selected criteria\nconst filteredData=data.filter(d=>{const participantFilter=participant===\"All\"||d.Participant.toString()===participant;const genderFilter=gender===\"Both\"||d.Gender===gender;const modeButtonFilter=modeButton===\"Both\"||d.ModeButton_xs===modeButton;return participantFilter&&genderFilter&&modeButtonFilter;});const hrvValues=filteredData.map(d=>d[yValueField]).filter(h=>h!=null);const colorScale=scaleLinear().domain([d3.min(hrvValues)||0,d3.mean(hrvValues)||0,d3.max(hrvValues)||0]).range(['yellow','orange','red']);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsx(Filters,{participant:participant,setParticipant:setParticipant,gender:gender,setGender:setGender,modeButton:modeButton,setModeButton:setModeButton,yValueField:yValueField,setYValueField:setYValueField,uniqueParticipants:uniqueParticipants}),/*#__PURE__*/_jsx(\"img\",{src:\"bus.png\",alt:\"bus Logo\",style:{width:'100px',height:'auto',marginTop:'500px',marginLeft:'35px',alignSelf:'center'}})]}),/*#__PURE__*/_jsxs(\"svg\",{width:width,height:height,children:[/*#__PURE__*/_jsx(\"text\",{x:width/2,y:45,textAnchor:\"middle\",className:\"title\",children:\"Travel Experience with Different Transportation Mode\"}),/*#__PURE__*/_jsx(\"image\",{id:\"map-image\",href:\"datamap.png\",x:21,y:72,height:\"auto\",width:width}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(0,30)`,children:/*#__PURE__*/_jsx(Hexbinmap,{data:brushExtent?filteredData.filter(d=>brushExtent.includes(orderedDays[d.DayOrder])):[],worldAtlas:worldAtlas,yValueField:yValueField// Pass yValueField dynamically\n})}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(0, 700)`,children:/*#__PURE__*/_jsx(DateHistogram,{data:filteredData,width:width,height:dateHistogramSize*height,setBrushExtent:setBrushExtent,xValue:d=>d.DayOrder,yValueField:yValueField// Pass the selected Y-value field\n})}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(820, 550)`,children:/*#__PURE__*/_jsx(ColorLegend,{colorScale:colorScale,yValueField:yValueField,data:filteredData// Pass the filtered data\n})})]})]});};export default App;","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","jsx","_jsx","jsxs","_jsxs","width","height","dateHistogramSize","orderedDays","App","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","length","children","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","className","src","alt","marginTop","marginLeft","alignSelf","id","href","transform","includes","DayOrder","xValue"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \n\n\nconst width = 1000;\nconst height =900;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n\n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");  // Initialize with HRV\n\n    if (!worldAtlas || !data || data.length === 0) {\n        return (\n          <svg width={width} height={height}>\n            <text\n              x={width / 2} \n              y={height / 2} \n              textAnchor=\"middle\" \n              fontSize=\"14\" \n              fill=\"black\" \n            >\n              Loading...\n            </text>\n          </svg>\n        ); \n    }\n\n    // Get unique participants dynamically and sort them\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n        .sort((a, b) => a - b); // Sort values from smallest to largest\n\n    // Filter Data based on selected criteria\n    const filteredData = data.filter(d => {\n        const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n        const genderFilter = gender === \"Both\" || d.Gender === gender; \n        const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n        \n        return participantFilter && genderFilter && modeButtonFilter;\n    });\n\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n    const colorScale = scaleLinear()\n        .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div className=\"filters\">\n                <Filters \n                    participant={participant} \n                    setParticipant={setParticipant} \n                    gender={gender} \n                    setGender={setGender} \n                    modeButton={modeButton} \n                    setModeButton={setModeButton}\n                    yValueField={yValueField}\n                    setYValueField={setYValueField}\n                    uniqueParticipants={uniqueParticipants} \n                />\n                <img \n                    src=\"bus.png\" \n                    alt=\"bus Logo\" \n                    style={{ width: '100px', height: 'auto', marginTop: '500px', marginLeft: '35px', alignSelf: 'center' }} \n                />\n            </div>\n            \n            <svg width={width} height={height}>\n                <text\n                    x={width / 2} \n                    y={45} \n                    textAnchor=\"middle\" \n                    className=\"title\" \n                >\n                    Travel Experience with Different Transportation Mode\n                </text>\n\n                <image \n                    id='map-image'\n                    href=\"datamap.png\" \n                    x={21}\n                    y={72} \n                    height=\"auto\" \n                    width={width} \n                    \n                />\n                \n                <g transform={`translate(0,30)`}>\n                    <Hexbinmap \n                        data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                        worldAtlas={worldAtlas} \n                        yValueField={yValueField} // Pass yValueField dynamically\n                    />\n                </g>\n                <g transform={`translate(0, 700)`}>\n                    <DateHistogram\n                        data={filteredData} \n                        width={width}\n                        height={dateHistogramSize * height}\n                        setBrushExtent={setBrushExtent}\n                        xValue={d => d.DayOrder} \n                        yValueField={yValueField} // Pass the selected Y-value field\n                    />\n                </g>\n\n                <g transform={`translate(820, 550)`}>\n                    <ColorLegend \n                        colorScale={colorScale} \n                        yValueField={yValueField} \n                        data={filteredData}  // Pass the filtered data\n                    /> \n                </g>\n            </svg>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}