{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Welcome=_ref=>{let{onQGIS}=_ref;const[isChecked,setIsChecked]=useState(false);// State to track checkbox\nconst[errorMessage,setErrorMessage]=useState('');// State for error message\nconst handleCheckboxChange=()=>{setIsChecked(!isChecked);// Toggle checkbox state\nsetErrorMessage('');// Clear error message when checkbox changes\n};const handleClick=()=>{if(!isChecked){setErrorMessage('You must confirm that you understand before proceeding.');// Set error message\n}else{onQGIS();// Proceed to QGIS if checkbox is checked\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"welcome-title\",children:\"Instruction\"}),/*#__PURE__*/_jsx(\"p\",{className:\"welcome-description\",children:\"The data visualization is about travel experience with different transportation modes. The static and interactive map were created and developed by Quantum Geographic Information System (QGIS) software and D3.js with React respectively.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"welcome-description\",children:\"First, you will explore QGIS map and then D3-React map. You need to gain as much information as you can. There is no limited time on this experiment, and you can make your own notes. Once you finish with the map, click the questionnaire button, fill in the form, and submit it. After completing the two questionnaires, then you can click the \\\"Finish\\\" button.\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"welcome-description\",children:[\"Here is the step of this experiment:\",/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Explore QGIS map\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Fill in the first questionnaire\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Explore D3.js React Map\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Fill in the second questionnaire\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isChecked,onChange:handleCheckboxChange}),/*#__PURE__*/_jsx(\"label\",{children:\"I declare that I have read and understand the instructions\"})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:errorMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,className:\"welcome-button\",children:\"Go to QGIS Map\"})]});};export default Welcome;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Welcome","_ref","onQGIS","isChecked","setIsChecked","errorMessage","setErrorMessage","handleCheckboxChange","handleClick","className","children","type","checked","onChange","style","color","onClick"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/Welcome.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Welcome = ({ onQGIS }) => {\n    const [isChecked, setIsChecked] = useState(false); // State to track checkbox\n    const [errorMessage, setErrorMessage] = useState(''); // State for error message\n\n    const handleCheckboxChange = () => {\n        setIsChecked(!isChecked); // Toggle checkbox state\n        setErrorMessage(''); // Clear error message when checkbox changes\n    };\n\n    const handleClick = () => {\n        if (!isChecked) {\n            setErrorMessage('You must confirm that you understand before proceeding.'); // Set error message\n        } else {\n            onQGIS(); // Proceed to QGIS if checkbox is checked\n        }\n    };\n\n    return (\n        <div className=\"welcome-container\">\n            <h1 className=\"welcome-title\">Instruction</h1>\n            <p className=\"welcome-description\">\n                The data visualization is about travel experience with different transportation modes. \n                The static and interactive map were created and developed by Quantum Geographic Information System (QGIS) software and D3.js with React respectively.\n            </p>\n            <p className=\"welcome-description\">\n                First, you will explore QGIS map and then D3-React map. You need to gain as much information as you can. There is no limited time on this experiment, and you can make your own notes.\n                Once you finish with the map, click the questionnaire button, fill in the form, and submit it. \n         \n                After completing the two questionnaires, then you can click the \"Finish\" button.\n            </p>\n            <p className=\"welcome-description\">\n                Here is the step of this experiment:\n                <ul>\n                    <li>Explore QGIS map</li>\n                    <li>Fill in the first questionnaire</li>\n                    <li>Explore D3.js React Map</li>\n                    <li>Fill in the second questionnaire</li>\n                </ul>\n            </p>\n            <div>\n                <input \n                    type=\"checkbox\" \n                    checked={isChecked} \n                    onChange={handleCheckboxChange} \n                />\n                <label>I declare that I have read and understand the instructions</label>\n            </div>\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n            <button onClick={handleClick} className=\"welcome-button\">\n                Go to QGIS Map           \n            </button>\n        </div>\n    );\n};\n\nexport default Welcome;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAgB,IAAf,CAAEC,MAAO,CAAC,CAAAD,IAAA,CACvB,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAAE;AACnD,KAAM,CAACU,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtD,KAAM,CAAAY,oBAAoB,CAAGA,CAAA,GAAM,CAC/BH,YAAY,CAAC,CAACD,SAAS,CAAC,CAAE;AAC1BG,eAAe,CAAC,EAAE,CAAC,CAAE;AACzB,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAAA,GAAM,CACtB,GAAI,CAACL,SAAS,CAAE,CACZG,eAAe,CAAC,yDAAyD,CAAC,CAAE;AAChF,CAAC,IAAM,CACHJ,MAAM,CAAC,CAAC,CAAE;AACd,CACJ,CAAC,CAED,mBACIH,KAAA,QAAKU,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9Bb,IAAA,OAAIY,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,cAC9Cb,IAAA,MAAGY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,8OAGnC,CAAG,CAAC,cACJb,IAAA,MAAGY,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAAC,0WAKnC,CAAG,CAAC,cACJX,KAAA,MAAGU,SAAS,CAAC,qBAAqB,CAAAC,QAAA,EAAC,sCAE/B,cAAAX,KAAA,OAAAW,QAAA,eACIb,IAAA,OAAAa,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzBb,IAAA,OAAAa,QAAA,CAAI,iCAA+B,CAAI,CAAC,cACxCb,IAAA,OAAAa,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChCb,IAAA,OAAAa,QAAA,CAAI,kCAAgC,CAAI,CAAC,EACzC,CAAC,EACN,CAAC,cACJX,KAAA,QAAAW,QAAA,eACIb,IAAA,UACIc,IAAI,CAAC,UAAU,CACfC,OAAO,CAAET,SAAU,CACnBU,QAAQ,CAAEN,oBAAqB,CAClC,CAAC,cACFV,IAAA,UAAAa,QAAA,CAAO,4DAA0D,CAAO,CAAC,EACxE,CAAC,CACLL,YAAY,eAAIR,IAAA,MAAGiB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAL,QAAA,CAAEL,YAAY,CAAI,CAAC,cAC/DR,IAAA,WAAQmB,OAAO,CAAER,WAAY,CAACC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,gBAEzD,CAAQ,CAAC,EACR,CAAC,CAEd,CAAC,CAED,cAAe,CAAAV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}