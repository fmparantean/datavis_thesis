{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js\";\nimport { geoNaturalEarth1 } from 'd3';\nimport { hexbin as d3Hexbin } from 'd3-hexbin'; // Ensure correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoNaturalEarth1().center([10.537004, 52.210297]).scale(160000).translate([450, 300]);\nexport const Marks = ({\n  bins,\n  sizeValue\n}) => {\n  const hexbin = d3Hexbin(); // Initialize hexbin here\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: bins.map((bin, i) => {\n      const [x, y] = d3Hexbin.prototype.centroid(bin); // Use this to get the centroid\n\n      return /*#__PURE__*/_jsxDEV(\"path\", {\n        d: hexbin.hexagon(10) // Define hexagon shape\n        ,\n        transform: `translate(${x}, ${y})` // Position hexagon by centroid\n        ,\n        fill: \"orange\" // Adjust color as needed\n        ,\n        stroke: \"black\",\n        strokeWidth: 1\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["geoNaturalEarth1","hexbin","d3Hexbin","jsxDEV","_jsxDEV","projection","center","scale","translate","Marks","bins","sizeValue","className","children","map","bin","i","x","y","prototype","centroid","d","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js"],"sourcesContent":["import { geoNaturalEarth1 } from 'd3';\nimport { hexbin as d3Hexbin } from 'd3-hexbin'; // Ensure correct import\n\nconst projection = geoNaturalEarth1()\n    .center([10.537004, 52.210297])\n    .scale(160000)\n    .translate([450, 300]);\n\nexport const Marks = ({ bins, sizeValue }) => {\n    const hexbin = d3Hexbin(); // Initialize hexbin here\n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const [x, y] = d3Hexbin.prototype.centroid(bin); // Use this to get the centroid\n\n                return (\n                    <path\n                        key={i}\n                        d={hexbin.hexagon(10)} // Define hexagon shape\n                        transform={`translate(${x}, ${y})`} // Position hexagon by centroid\n                        fill=\"orange\" // Adjust color as needed\n                        stroke=\"black\"\n                        strokeWidth={1}\n                    />\n                );\n            })}\n        </g>\n    );\n};"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,IAAI;AACrC,SAASC,MAAM,IAAIC,QAAQ,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,CAAC,CAChCM,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAC9BC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAE1B,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAC1C,MAAMV,MAAM,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE3B,oBACIE,OAAA;IAAGQ,SAAS,EAAC,OAAO;IAAAC,QAAA,EACfH,IAAI,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAClB,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGhB,QAAQ,CAACiB,SAAS,CAACC,QAAQ,CAACL,GAAG,CAAC,CAAC,CAAC;;MAEjD,oBACIX,OAAA;QAEIiB,CAAC,EAAEpB,MAAM,CAACqB,OAAO,CAAC,EAAE,CAAE,CAAC;QAAA;QACvBC,SAAS,EAAE,aAAaN,CAAC,KAAKC,CAAC,GAAI,CAAC;QAAA;QACpCM,IAAI,EAAC,QAAQ,CAAC;QAAA;QACdC,MAAM,EAAC,OAAO;QACdC,WAAW,EAAE;MAAE,GALVV,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACC,EAAA,GArBWtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}