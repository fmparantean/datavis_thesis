{"ast":null,"code":"import React,{useState}from'react';import Welcome from'./Welcome';import QGIS from'./QGIS';import Declaration from'./Declaration';// Import the Declaration component\nimport{useWorldAtlas}from'./useWorldAtlas';import'./App.css';import{useData}from'./useData';import{Hexbinmap}from'./HexbinMap/index.js';import{DateHistogram}from'./DateHistogram/index.js';import{scaleLinear}from'd3';import ColorLegend from'./HexbinMap/ColorLegend.js';import*as d3 from'd3';import Filters from'./Filters';import Instructions from'./Instructions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const width=900;const height=1000;const dateHistogramSize=0.24;const orderedDays=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];const App=()=>{const[currentPage,setCurrentPage]=useState('declaration');// Start with Declaration\nconst[isChecked,setIsChecked]=useState(false);// Checkbox state for finishing\nconst worldAtlas=useWorldAtlas();const data=useData();const[brushExtent,setBrushExtent]=useState(null);const[participant,setParticipant]=useState(\"All\");const[gender,setGender]=useState(\"Both\");const[modeButton,setModeButton]=useState(\"Both\");const[yValueField,setYValueField]=useState(\"HRV\");const[hexbinSize,setHexbinSize]=useState(5);const[errorMessage,setErrorMessage]=useState('');// Track error message\nconst handleStartDeclaration=()=>setCurrentPage('welcome');// Go to Welcome screen\nconst handleGoToQGIS=()=>setCurrentPage('qgis');// Go to QGIS page\nconst handleBackToD3React=()=>setCurrentPage('mainapp');// Go back to D3 React App\nconst handleFinish=()=>{if(!isChecked){setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finish this experiment.');// Set error message if not checked\n}else{setErrorMessage('');// Clear error message if checked\nsetCurrentPage('final');// Go to final page\n}};const renderPage=()=>{switch(currentPage){case'declaration':return/*#__PURE__*/_jsx(Declaration,{onStart:handleStartDeclaration});case'welcome':return/*#__PURE__*/_jsx(Welcome,{onQGIS:handleGoToQGIS});// Pass handler to Welcome\ncase'qgis':return/*#__PURE__*/_jsx(QGIS,{onBack:handleBackToD3React});// QGIS page\ncase'mainapp':return renderMainApp();// Render D3 React App\ncase'final':return/*#__PURE__*/_jsxs(\"div\",{className:\"final-message\",children:[\"Thank you for completing the experiment process!\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"Best Regards,\",/*#__PURE__*/_jsx(\"div\",{children:\"Febryeric M. Parantean\"})]});default:return/*#__PURE__*/_jsx(Declaration,{onStart:handleStartDeclaration});}};const renderMainApp=()=>{if(!worldAtlas||!data||data.length===0){return/*#__PURE__*/_jsx(\"svg\",{width:width,height:height,children:/*#__PURE__*/_jsx(\"text\",{x:width/2,y:height/2,textAnchor:\"middle\",fontSize:\"14\",fill:\"black\",children:\"Loading...\"})});}// Get unique participants dynamically and sort them\nconst uniqueParticipants=Array.from(new Set(data.map(d=>d.Participant))).sort((a,b)=>a-b);// Filter Data based on selected criteria\nconst filteredData=data.filter(d=>{const participantFilter=participant===\"All\"||d.Participant.toString()===participant;const genderFilter=gender===\"Both\"||d.Gender===gender;const modeButtonFilter=modeButton===\"Both\"||d.ModeButton_xs===modeButton;return participantFilter&&genderFilter&&modeButtonFilter;});const hrvValues=filteredData.map(d=>d[yValueField]).filter(h=>h!=null);const colorScale=scaleLinear().domain([d3.min(hrvValues)||0,d3.mean(hrvValues)||0,d3.max(hrvValues)||0]).range(['yellow','orange','red']);return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsx(Filters,{participant:participant,setParticipant:setParticipant,gender:gender,setGender:setGender,modeButton:modeButton,setModeButton:setModeButton,yValueField:yValueField,setYValueField:setYValueField,uniqueParticipants:uniqueParticipants,hexbinSize:hexbinSize,setHexbinSize:setHexbinSize}),/*#__PURE__*/_jsx(\"img\",{src:\"bus.png\",alt:\"bus Logo\",style:{width:'100px',height:'auto',marginTop:'210px',marginLeft:'35px',alignSelf:'center'}})]}),/*#__PURE__*/_jsxs(\"svg\",{width:width,height:height,children:[/*#__PURE__*/_jsx(\"text\",{x:width/2,y:45,textAnchor:\"middle\",className:\"title\",children:\"Travel Experience with Different Transportation Mode\"}),/*#__PURE__*/_jsx(\"image\",{id:\"map-image\",href:\"datamap.png\",x:21,y:72,height:height,width:width}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(0,30)`,children:/*#__PURE__*/_jsx(Hexbinmap,{data:brushExtent?filteredData.filter(d=>brushExtent.includes(orderedDays[d.DayOrder])):[],worldAtlas:worldAtlas,yValueField:yValueField,hexbinSize:hexbinSize})}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(0, 700)`,children:/*#__PURE__*/_jsx(DateHistogram,{data:filteredData,width:width,height:dateHistogramSize*height,setBrushExtent:setBrushExtent,xValue:d=>d.DayOrder,yValueField:yValueField})}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(820, 550)`,children:/*#__PURE__*/_jsx(ColorLegend,{colorScale:colorScale,yValueField:yValueField,data:filteredData})})]}),/*#__PURE__*/_jsx(Instructions,{}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'90px',marginTop:'750px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isChecked,onChange:()=>{setIsChecked(!isChecked);setErrorMessage('');// Clear error message on change\n}}),/*#__PURE__*/_jsx(\"label\",{style:{marginLeft:'5px'},children:\"I have finished and submitted the D3-React questionnaire in the Google Form\"}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',marginTop:'10px'},children:errorMessage}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"a\",{href:\"https://forms.gle/cBYJTJ2r9qEpcU8W8\",target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(\"button\",{className:\"d3-que\",style:{marginLeft:'70px',padding:'10px 20px'},children:\"Go to D3-React Questionnaire\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFinish,className:\"backd3\",style:{marginLeft:'30px',padding:'10px 20px'}// Same styling as above\n,children:\"Finish\"})]})]})]});};return/*#__PURE__*/_jsx(\"div\",{children:renderPage()});};export default App;","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","Instructions","jsx","_jsx","jsxs","_jsxs","width","height","dateHistogramSize","orderedDays","App","currentPage","setCurrentPage","isChecked","setIsChecked","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","errorMessage","setErrorMessage","handleStartDeclaration","handleGoToQGIS","handleBackToD3React","handleFinish","renderPage","onStart","onQGIS","onBack","renderMainApp","className","children","length","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","src","alt","marginTop","marginLeft","alignSelf","id","href","transform","includes","DayOrder","xValue","margin","type","checked","onChange","color","target","rel","padding","onClick"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \nimport Instructions from './Instructions'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n    const [isChecked, setIsChecked] = useState(false); // Checkbox state for finishing\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n    const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n    const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n    const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n    const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n    const handleFinish = () => {\n        if (!isChecked) {\n            setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finish this experiment.'); // Set error message if not checked\n        } else {\n            setErrorMessage(''); // Clear error message if checked\n            setCurrentPage('final'); // Go to final page\n        }\n    };\n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'welcome':\n                return <Welcome onQGIS={handleGoToQGIS} />; // Pass handler to Welcome\n            case 'qgis':\n                return <QGIS onBack={handleBackToD3React} />; // QGIS page\n            case 'mainapp':\n                return renderMainApp(); // Render D3 React App\n                case 'final':\n                    return (\n                        <div className=\"final-message\">\n                            Thank you for completing the experiment process!\n                            <br />\n                            <br />\n                            Best Regards,\n                            <div>Febryeric M. Parantean</div>\n                        </div>\n                    );\n            default:\n                return <Declaration onStart={handleStartDeclaration} />;\n        }\n    };\n\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        // Get unique participants dynamically and sort them\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        // Filter Data based on selected criteria\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex' }}>\n                <div className=\"filters\">\n                    <Filters \n                        participant={participant} \n                        setParticipant={setParticipant} \n                        gender={gender} \n                        setGender={setGender} \n                        modeButton={modeButton} \n                        setModeButton={setModeButton}\n                        yValueField={yValueField}\n                        setYValueField={setYValueField}\n                        uniqueParticipants={uniqueParticipants} \n                        hexbinSize={hexbinSize}\n                        setHexbinSize={setHexbinSize}\n                    />\n                    <img \n                        src=\"bus.png\" \n                        alt=\"bus Logo\" \n                        style={{ width: '100px', height: 'auto', marginTop: '210px', marginLeft: '35px', alignSelf: 'center' }} \n                    />\n                </div>\n\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={45} textAnchor=\"middle\" className=\"title\">\n                        Travel Experience with Different Transportation Mode\n                    </text>\n                    <image \n                        id='map-image'\n                        href=\"datamap.png\" \n                        x={21}\n                        y={72} \n                        height={height} \n                        width={width} \n                    />\n                    <g transform={`translate(0,30)`}>\n                        <Hexbinmap \n                            data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                            worldAtlas={worldAtlas} \n                            yValueField={yValueField} \n                            hexbinSize={hexbinSize} \n                        />\n                    </g>\n                    <g transform={`translate(0, 700)`}>\n                        <DateHistogram\n                            data={filteredData} \n                            width={width}\n                            height={dateHistogramSize * height}\n                            setBrushExtent={setBrushExtent}\n                            xValue={d => d.DayOrder} \n                            yValueField={yValueField} \n                        />\n                    </g>\n                    <g transform={`translate(820, 550)`}>\n                        <ColorLegend \n                            colorScale={colorScale} \n                            yValueField={yValueField} \n                            data={filteredData}  \n                        /> \n                    </g>\n                </svg>\n              \n\n                <Instructions />\n              \n                \n                {/* Confirmation Checkbox and Buttons */}\n                <div style={{ margin: '90px', marginTop:'750px' }}>\n                    <input\n                        type=\"checkbox\"\n                        checked={isChecked}\n                        onChange={() => {\n                            setIsChecked(!isChecked);\n                            setErrorMessage(''); // Clear error message on change\n                        }}\n                    />\n                    <label style={{ marginLeft: '5px' }}>\n                    I have finished and submitted the D3-React questionnaire in the Google Form\n                    </label>\n                    {/* Display Error Message */}\n                    {errorMessage && (\n                        <div style={{ color: 'red', marginTop: '10px' }}>\n                            {errorMessage}\n                        </div>\n                    )}\n\n                    <div style={{ marginTop: '10px' }}>\n                        <a href=\"https://forms.gle/cBYJTJ2r9qEpcU8W8\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <button className=\"d3-que\" style={{ marginLeft: '70px', padding: '10px 20px' }}>\n                                Go to D3-React Questionnaire\n                            </button>\n                        </a>\n                        <button\n                            onClick={handleFinish}\n                            className=\"backd3\"\n                            style={{ marginLeft: '30px', padding: '10px 20px' }} // Same styling as above\n                            \n                        >\n                            Finish\n                        </button>\n                    </div>\n                    \n                    \n                </div>\n            </div>\n        );\n    };\n\n    return <div>{renderPage()}</div>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}