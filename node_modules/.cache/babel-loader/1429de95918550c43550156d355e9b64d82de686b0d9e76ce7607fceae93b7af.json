{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\";\nimport React from 'react';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\nimport { Marks } from './Marks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BubbleMap = ({\n  data,\n  worldAtlas\n}) => {\n  const svgWidth = 900;\n  const svgHeight = 750;\n  const projection = geoNaturalEarth1().center([10.537, 52.210]) // Adjust this based on your data focus\n  .scale(150000) // Adjust based on your data spread\n  .translate([svgWidth / 2, svgHeight / 2]);\n  const hexbinGenerator = hexbin().extent([[0, 0], [svgWidth, svgHeight]]).radius(30); // Adjust radius for visibility\n\n  // Project and prepare the data for hexbin\n  const projectedData = data.map(d => {\n    const coords = projection(d.coords); // Project coordinates\n    return {\n      ...d,\n      x: coords[0],\n      y: coords[1]\n    };\n  });\n\n  // Generate hex bins using projected coordinates\n  const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n  console.log(\"Hex Bin Data:\", bins); // Debugging\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: svgWidth,\n    height: svgHeight,\n    children: /*#__PURE__*/_jsxDEV(Marks, {\n      bins: bins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","hexbin","geoNaturalEarth1","Marks","jsxDEV","_jsxDEV","BubbleMap","data","worldAtlas","svgWidth","svgHeight","projection","center","scale","translate","hexbinGenerator","extent","radius","projectedData","map","d","coords","x","y","bins","console","log","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import React from 'react';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\nimport { Marks } from './Marks';\n\nexport const BubbleMap = ({ data, worldAtlas }) => {\n    const svgWidth = 900;\n    const svgHeight = 750;\n\n    const projection = geoNaturalEarth1()\n        .center([10.537, 52.210]) // Adjust this based on your data focus\n        .scale(150000) // Adjust based on your data spread\n        .translate([svgWidth / 2, svgHeight / 2]);\n\n    const hexbinGenerator = hexbin()\n        .extent([[0, 0], [svgWidth, svgHeight]])\n        .radius(30); // Adjust radius for visibility\n\n    // Project and prepare the data for hexbin\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords); // Project coordinates\n        return { ...d, x: coords[0], y: coords[1] };\n    });\n\n    // Generate hex bins using projected coordinates\n    const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n    console.log(\"Hex Bin Data:\", bins); // Debugging\n\n    return (\n        <svg width={svgWidth} height={svgHeight}>\n            <Marks bins={bins} />\n            {/* Any additional layers you want to add (e.g., worldAtlas) can go here */}\n        </svg>\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,gBAAgB,QAAQ,IAAI;AACrC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAC/C,MAAMC,QAAQ,GAAG,GAAG;EACpB,MAAMC,SAAS,GAAG,GAAG;EAErB,MAAMC,UAAU,GAAGT,gBAAgB,CAAC,CAAC,CAChCU,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;EAAA,CACzBC,KAAK,CAAC,MAAM,CAAC,CAAC;EAAA,CACdC,SAAS,CAAC,CAACL,QAAQ,GAAG,CAAC,EAAEC,SAAS,GAAG,CAAC,CAAC,CAAC;EAE7C,MAAMK,eAAe,GAAGd,MAAM,CAAC,CAAC,CAC3Be,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAACP,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAAC,CACvCO,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEjB;EACA,MAAMC,aAAa,GAAGX,IAAI,CAACY,GAAG,CAACC,CAAC,IAAI;IAChC,MAAMC,MAAM,GAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;IACrC,OAAO;MAAE,GAAGD,CAAC;MAAEE,CAAC,EAAED,MAAM,CAAC,CAAC,CAAC;MAAEE,CAAC,EAAEF,MAAM,CAAC,CAAC;IAAE,CAAC;EAC/C,CAAC,CAAC;;EAEF;EACA,MAAMG,IAAI,GAAGT,eAAe,CAACG,aAAa,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;EAChEE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;;EAEpC,oBACInB,OAAA;IAAKsB,KAAK,EAAElB,QAAS;IAACmB,MAAM,EAAElB,SAAU;IAAAmB,QAAA,eACpCxB,OAAA,CAACF,KAAK;MAACqB,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEd,CAAC;AAACC,EAAA,GA7BW5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}