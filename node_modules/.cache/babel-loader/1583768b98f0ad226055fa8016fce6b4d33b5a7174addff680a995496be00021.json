{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/index.js\";\nimport React from 'react';\nimport { scaleSqrt, max } from 'd3';\nimport { geoNaturalEarth1 } from 'd3-geo';\nimport { hexbin } from 'd3-hexbin'; // Import hexbin\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sizeValue = d => d.HRV; // Function to get HRV\n\nexport const BubbleMap = ({\n  data,\n  worldAtlas\n}) => {\n  const maxRadius = 10;\n\n  // Set up the size scale based on HRV\n  const sizeScale = scaleSqrt().domain([0, max(data, sizeValue)]).range([0, maxRadius]);\n\n  // Set up the hexbin layout\n  const hexbinGenerator = hexbin().radius(10) // Radius for hexagons\n  .x(d => d.coords[0]) // Longitude\n  .y(d => d.coords[1]); // Latitude\n\n  // Generate hexagonal bins and any additional logic you want here...\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Marks, {\n      worldAtlas: worldAtlas,\n      data: data,\n      sizeScale: sizeScale,\n      sizeValue: sizeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Markscity, {\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","scaleSqrt","max","geoNaturalEarth1","hexbin","Marks","Markscity","jsxDEV","_jsxDEV","Fragment","_Fragment","sizeValue","d","HRV","BubbleMap","data","worldAtlas","maxRadius","sizeScale","domain","range","hexbinGenerator","radius","x","coords","y","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/index.js"],"sourcesContent":["import React from 'react';\nimport { scaleSqrt, max } from 'd3';\nimport { geoNaturalEarth1 } from 'd3-geo';\nimport { hexbin } from 'd3-hexbin'; // Import hexbin\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\n\nconst sizeValue = d => d.HRV; // Function to get HRV\n\nexport const BubbleMap = ({ data, worldAtlas }) => {\n  const maxRadius = 10;\n\n  // Set up the size scale based on HRV\n  const sizeScale = scaleSqrt()\n    .domain([0, max(data, sizeValue)])\n    .range([0, maxRadius]);\n\n  // Set up the hexbin layout\n  const hexbinGenerator = hexbin()\n    .radius(10) // Radius for hexagons\n    .x(d => d.coords[0]) // Longitude\n    .y(d => d.coords[1]); // Latitude\n\n  // Generate hexagonal bins and any additional logic you want here...\n\n  return (\n    <>\n      <Marks\n        worldAtlas={worldAtlas}\n        data={data}\n        sizeScale={sizeScale}\n        sizeValue={sizeValue}\n      />\n      <Markscity \n        worldAtlas={worldAtlas} \n      />\n    </>\n  );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,QAAQ,IAAI;AACnC,SAASC,gBAAgB,QAAQ,QAAQ;AACzC,SAASC,MAAM,QAAQ,WAAW,CAAC,CAAC;AACpC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAAC,CAAC;;AAE9B,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EACjD,MAAMC,SAAS,GAAG,EAAE;;EAEpB;EACA,MAAMC,SAAS,GAAGjB,SAAS,CAAC,CAAC,CAC1BkB,MAAM,CAAC,CAAC,CAAC,EAAEjB,GAAG,CAACa,IAAI,EAAEJ,SAAS,CAAC,CAAC,CAAC,CACjCS,KAAK,CAAC,CAAC,CAAC,EAAEH,SAAS,CAAC,CAAC;;EAExB;EACA,MAAMI,eAAe,GAAGjB,MAAM,CAAC,CAAC,CAC7BkB,MAAM,CAAC,EAAE,CAAC,CAAC;EAAA,CACXC,CAAC,CAACX,CAAC,IAAIA,CAAC,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAAA,CACpBC,CAAC,CAACb,CAAC,IAAIA,CAAC,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExB;;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACH,KAAK;MACJW,UAAU,EAAEA,UAAW;MACvBD,IAAI,EAAEA,IAAK;MACXG,SAAS,EAAEA,SAAU;MACrBP,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACFtB,OAAA,CAACF,SAAS;MACRU,UAAU,EAAEA;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACC,EAAA,GA7BWjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}