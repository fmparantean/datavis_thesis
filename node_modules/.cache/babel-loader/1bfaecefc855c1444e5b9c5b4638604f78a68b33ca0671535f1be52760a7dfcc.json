{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 750;\nconst dateHistogramSize = 0.25;\nconst xValue = d => d.Timestamp; // Correct x-value function\n\nconst App = () => {\n  _s();\n  const worldAtlas = useWorldAtlas();\n  const data = useData(); // Use the JSON data\n\n  const [brushExtent, setBrushExtent] = useState(null);\n  if (!worldAtlas || !data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: width / 2,\n        y: height / 2,\n        textAnchor: \"middle\",\n        fontSize: \"14\",\n        fill: \"black\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this);\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n\n  // Prepare the color scale for HRV values\n  const hrvValues = filteredData.map(d => d.HRV).filter(h => h != null);\n  const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 1]).range(['blue', 'lightblue', 'darkblue']); // Set your color range\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: width / 2,\n      y: 40,\n      textAnchor: \"middle\",\n      className: \"title\",\n      children: \"THE HRV DISTRIBUTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, 10)`,\n      children: /*#__PURE__*/_jsxDEV(BubbleMap, {\n        data: filteredData,\n        worldAtlas: worldAtlas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: \"translate(650, 20)\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(ColorLegend, {\n        colorScale: colorScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qNrp+cqz1K4ohBQ5elzPglsfMNY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","scaleLinear","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","Timestamp","App","_s","worldAtlas","data","brushExtent","setBrushExtent","length","children","x","y","textAnchor","fontSize","fill","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","hrvValues","map","HRV","h","colorScale","domain","d3","min","mean","max","range","className","transform","ColorLegend","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\n\nconst width = 900;\nconst height = 750;\nconst dateHistogramSize = 0.25;\nconst xValue = d => d.Timestamp; // Correct x-value function\n\nconst App = () => {\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); // Use the JSON data\n\n    const [brushExtent, setBrushExtent] = useState(null);\n\n    if (!worldAtlas || !data || data.length === 0) {\n        return (\n          <svg width={width} height={height}>\n            <text\n              x={width / 2} \n              y={height / 2} \n              textAnchor=\"middle\" \n              fontSize=\"14\" \n              fill=\"black\" \n            >\n              Loading...\n            </text>\n          </svg>\n        ); \n    }\n\n    const filteredData = brushExtent\n        ? data.filter(d => {\n            const date = xValue(d);\n            return date >= brushExtent[0] && date <= brushExtent[1];\n        })\n        : data;\n\n    // Prepare the color scale for HRV values\n    const hrvValues = filteredData.map(d => d.HRV).filter(h => h != null); \n    const colorScale = scaleLinear()\n        .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 1])\n        .range(['blue', 'lightblue', 'darkblue']); // Set your color range\n\n    return (\n        <svg width={width} height={height}>\n            <text\n                x={width / 2} \n                y={40} \n                textAnchor=\"middle\" \n                className=\"title\" \n            >\n                THE HRV DISTRIBUTION\n            </text>\n            \n            <g transform={`translate(0, 10)`}>\n                <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\n            </g>\n            <g transform={`translate(0, ${height - dateHistogramSize * height})`}>\n                <DateHistogram\n                    data={data} \n                    width={width}\n                    height={dateHistogramSize * height}\n                    setBrushExtent={setBrushExtent}\n                    xValue={xValue} \n                />\n            </g>\n\n            {/* Position the color legend in the top right corner */}\n            <g transform=\"translate(650, 20)\"> {/* Adjust X and Y as needed */}\n                <ColorLegend colorScale={colorScale} /> {/* Pass the color scale */}\n            </g>\n        </svg>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}