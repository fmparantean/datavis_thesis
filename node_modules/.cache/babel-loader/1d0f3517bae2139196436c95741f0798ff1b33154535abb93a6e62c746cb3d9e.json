{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/Instructions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Import useState for state management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Instructions = ({\n  setCurrentPage\n}) => {\n  _s();\n  // Accept setCurrentPage as a prop\n  const [isQGISChecked, setIsQGISChecked] = useState(false); // State for QGIS checkbox\n  const [isD3Checked, setIsD3Checked] = useState(false); // State for D3 checkbox\n  const [errorMessage, setErrorMessage] = useState(''); // State for error message\n\n  const handleFinish = () => {\n    // Finish logic that checks if both checkboxes are checked\n    if (!isQGISChecked || !isD3Checked) {\n      setErrorMessage('You must confirm that you have finished the QGIS map and submitted the D3-React questionnaire before finishing this experiment.'); // Set error message if not checked\n    } else {\n      setErrorMessage(''); // Clear error message if checked\n      setCurrentPage('final'); // Go to final page\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"instructions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How to Operate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"The data on the hexbin map is based on the highlighted area that is marked on the histogram.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Move the brush extension (blue square) on the histogram to display and change the data in the hexbin map. You can slide it left or right, resize the brush by clicking and dragging on the edge, in or out.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"On the filters, you can choose your preferred data to display on the histogram and hexbin map. You can also choose the bin size of hexagonal shapes on the hexbin map.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Point your mouse at a specific hexagonal shape on the map to find out its mean value and how many data points are contained within.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"You do not have limited time to explore this map. Enjoy before you go to the D3-React questionnaire and finish this experiment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '20px',\n        marginTop: '50px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isQGISChecked,\n          onChange: () => {\n            setIsQGISChecked(!isQGISChecked);\n            setErrorMessage(''); // Clear error message on change\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: '5px'\n          },\n          children: \"I have finished with the QGIS map and I'm ready to fill in the questionnaire.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isD3Checked,\n          onChange: () => {\n            setIsD3Checked(!isD3Checked);\n            setErrorMessage(''); // Clear error message on change\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginLeft: '5px'\n          },\n          children: \"I have finished and submitted the D3-React questionnaire in the Google Form.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          marginTop: '10px'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://forms.gle/8BJUm4goDgqYuvCw7\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d3-que\",\n            style: {\n              marginLeft: '0px',\n              padding: '10px 20px'\n            },\n            children: \"Go to D3-React Questionnaire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFinish // Calls the updated handleFinish function\n          ,\n          className: \"backd3\",\n          style: {\n            marginLeft: '20px',\n            padding: '10px 20px'\n          } // Same styling as above\n          ,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Instructions, \"1nKdZWjzT8ySoOMJBcW8m6EE2cw=\");\n_c = Instructions;\nexport default Instructions;\nvar _c;\n$RefreshReg$(_c, \"Instructions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Instructions","setCurrentPage","_s","isQGISChecked","setIsQGISChecked","isD3Checked","setIsD3Checked","errorMessage","setErrorMessage","handleFinish","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","marginTop","type","checked","onChange","marginLeft","color","href","target","rel","padding","onClick","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/Instructions.js"],"sourcesContent":["import React, { useState } from 'react'; // Import useState for state management\n\nconst Instructions = ({ setCurrentPage }) => { // Accept setCurrentPage as a prop\n    const [isQGISChecked, setIsQGISChecked] = useState(false); // State for QGIS checkbox\n    const [isD3Checked, setIsD3Checked] = useState(false); // State for D3 checkbox\n    const [errorMessage, setErrorMessage] = useState(''); // State for error message\n\n    const handleFinish = () => {\n        // Finish logic that checks if both checkboxes are checked\n        if (!isQGISChecked || !isD3Checked) {\n            setErrorMessage('You must confirm that you have finished the QGIS map and submitted the D3-React questionnaire before finishing this experiment.'); // Set error message if not checked\n        } else {\n            setErrorMessage(''); // Clear error message if checked\n            setCurrentPage('final'); // Go to final page\n        }\n    };\n\n    return (\n        <div className=\"instructions\">\n            <h3>How to Operate</h3>\n            <ul>\n                <li>The data on the hexbin map is based on the highlighted area that is marked on the histogram.</li>\n                <li>Move the brush extension (blue square) on the histogram to display and change the data in the hexbin map. You can slide it left or right, resize the brush by clicking and dragging on the edge, in or out.</li>\n                <li>On the filters, you can choose your preferred data to display on the histogram and hexbin map. You can also choose the bin size of hexagonal shapes on the hexbin map.</li>\n                <li>Point your mouse at a specific hexagonal shape on the map to find out its mean value and how many data points are contained within.</li>\n                <li>You do not have limited time to explore this map. Enjoy before you go to the D3-React questionnaire and finish this experiment.</li>\n            </ul>\n\n            {/* Confirmation Checkboxes and Buttons */}\n            <div style={{ margin: '20px', marginTop: '50px' }}>\n                {/* Checkbox for QGIS map completion */}\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        checked={isQGISChecked}\n                        onChange={() => {\n                            setIsQGISChecked(!isQGISChecked);\n                            setErrorMessage(''); // Clear error message on change\n                        }}\n                    />\n                    <label style={{ marginLeft: '5px' }}>\n                        I have finished with the QGIS map and I'm ready to fill in the questionnaire.\n                    </label>\n                </div>\n\n                {/* Checkbox for D3 questionnaire submission */}\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        checked={isD3Checked}\n                        onChange={() => {\n                            setIsD3Checked(!isD3Checked);\n                            setErrorMessage(''); // Clear error message on change\n                        }}\n                    />\n                    <label style={{ marginLeft: '5px' }}>\n                        I have finished and submitted the D3-React questionnaire in the Google Form.\n                    </label>\n                </div>\n\n                {/* Display Error Message */}\n                {errorMessage && (\n                    <div style={{ color: 'red', marginTop: '10px' }}>\n                        {errorMessage}\n                    </div>\n                )}\n\n                <div style={{ marginTop: '10px' }}>\n                    <a href=\"https://forms.gle/8BJUm4goDgqYuvCw7\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <button className=\"d3-que\" style={{ marginLeft: '0px', padding: '10px 20px' }}>\n                            Go to D3-React Questionnaire\n                        </button>\n                    </a>\n                    <button\n                        onClick={handleFinish} // Calls the updated handleFinish function\n                        className=\"backd3\"\n                        style={{ marginLeft: '20px', padding: '10px 20px' }} // Same styling as above\n                    >\n                        Finish\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Instructions;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAAE;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAI,CAACN,aAAa,IAAI,CAACE,WAAW,EAAE;MAChCG,eAAe,CAAC,iIAAiI,CAAC,CAAC,CAAC;IACxJ,CAAC,MAAM;MACHA,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACrBP,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIF,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAI;MAA4F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrGhB,OAAA;QAAAY,QAAA,EAAI;MAA2M;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpNhB,OAAA;QAAAY,QAAA,EAAI;MAAsK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/KhB,OAAA;QAAAY,QAAA,EAAI;MAAmI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5IhB,OAAA;QAAAY,QAAA,EAAI;MAA+H;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxI,CAAC,eAGLhB,OAAA;MAAKiB,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAE9CZ,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UACIoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEjB,aAAc;UACvBkB,QAAQ,EAAEA,CAAA,KAAM;YACZjB,gBAAgB,CAAC,CAACD,aAAa,CAAC;YAChCK,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;UACzB;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFhB,OAAA;UAAOiB,KAAK,EAAE;YAAEM,UAAU,EAAE;UAAM,CAAE;UAAAX,QAAA,EAAC;QAErC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAGNhB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UACIoB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEf,WAAY;UACrBgB,QAAQ,EAAEA,CAAA,KAAM;YACZf,cAAc,CAAC,CAACD,WAAW,CAAC;YAC5BG,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;UACzB;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFhB,OAAA;UAAOiB,KAAK,EAAE;YAAEM,UAAU,EAAE;UAAM,CAAE;UAAAX,QAAA,EAAC;QAErC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,EAGLR,YAAY,iBACTR,OAAA;QAAKiB,KAAK,EAAE;UAAEO,KAAK,EAAE,KAAK;UAAEL,SAAS,EAAE;QAAO,CAAE;QAAAP,QAAA,EAC3CJ;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACR,eAEDhB,OAAA;QAAKiB,KAAK,EAAE;UAAEE,SAAS,EAAE;QAAO,CAAE;QAAAP,QAAA,gBAC9BZ,OAAA;UAAGyB,IAAI,EAAC,qCAAqC;UAACC,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAf,QAAA,eACnFZ,OAAA;YAAQW,SAAS,EAAC,QAAQ;YAACM,KAAK,EAAE;cAAEM,UAAU,EAAE,KAAK;cAAEK,OAAO,EAAE;YAAY,CAAE;YAAAhB,QAAA,EAAC;UAE/E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACJhB,OAAA;UACI6B,OAAO,EAAEnB,YAAa,CAAC;UAAA;UACvBC,SAAS,EAAC,QAAQ;UAClBM,KAAK,EAAE;YAAEM,UAAU,EAAE,MAAM;YAAEK,OAAO,EAAE;UAAY,CAAE,CAAC;UAAA;UAAAhB,QAAA,EACxD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACb,EAAA,CAlFIF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAoFlB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}