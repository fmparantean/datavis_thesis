{"ast":null,"code":"import React,{useState}from'react';import*as d3 from'd3';import{hexbin as d3Hexbin}from'd3-hexbin';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Marks=_ref=>{let{bins,data,yValueField,hexbinSize}=_ref;const[tooltip,setTooltip]=useState({display:'none',x:0,y:0,content:[]});const hrvValues=data.map(d=>d[yValueField]).filter(h=>h!=null&&h!==0);const colorScale=d3.scaleLinear().domain([d3.min(hrvValues),d3.mean(hrvValues),d3.max(hrvValues)]).range(['yellow','orange','red']);return/*#__PURE__*/_jsxs(\"g\",{className:\"marks\",children:[bins.map((bin,i)=>{const binData=data.filter(d=>d.x>=bin.x-15&&d.x<=bin.x+15&&d.y>=bin.y-15&&d.y<=bin.y+15);// Filter out only valid data points (non-null and non-zero)\nconst validDataPoints=binData.filter(d=>d[yValueField]!=null&&d[yValueField]!==0);// Calculate mean from valid data points\nconst meanValue=validDataPoints.length>0?validDataPoints.reduce((sum,d)=>sum+d[yValueField],0)/validDataPoints.length:0;// Skip rendering this bin if the meanValue is 0 or no valid data points\nif(meanValue===0||validDataPoints.length===0){return null;// Skip this bin\n}const fillColor=colorScale(meanValue);return/*#__PURE__*/_jsx(\"g\",{onMouseEnter:e=>{// Show the tooltip with mean value\nsetTooltip({display:'block',x:700,y:505,content:[`Numbers of Data Points: ${validDataPoints.length}`,`Mean Value: ${meanValue.toFixed(2)}`]});},onMouseLeave:()=>{setTooltip({display:'none',x:0,y:0,content:[]});},children:/*#__PURE__*/_jsx(\"path\",{d:d3Hexbin().hexagon(hexbinSize),transform:`translate(${bin.x}, ${bin.y})`,fill:fillColor,stroke:\"black\",strokeWidth:1})},i);}),/*#__PURE__*/_jsx(\"g\",{transform:`translate(${tooltip.x}, ${tooltip.y})`,style:{display:tooltip.display,pointerEvents:'none'},children:/*#__PURE__*/_jsx(\"text\",{fill:\"black\",fontSize:\"12\",fontWeight:\"bold\",textAnchor:\"left\",stroke:\"white\",strokeWidth:0.2,children:tooltip.content.map((line,index)=>/*#__PURE__*/_jsx(\"tspan\",{x:\"0\",dy:index===0?0:15,children:line},index))})})]});};","map":{"version":3,"names":["React","useState","d3","hexbin","d3Hexbin","jsx","_jsx","jsxs","_jsxs","Marks","_ref","bins","data","yValueField","hexbinSize","tooltip","setTooltip","display","x","y","content","hrvValues","map","d","filter","h","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","validDataPoints","meanValue","length","reduce","sum","fillColor","onMouseEnter","e","toFixed","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","style","pointerEvents","fontSize","fontWeight","textAnchor","line","index","dy"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3'; \nimport { hexbin as d3Hexbin } from 'd3-hexbin'; \n\nexport const Marks = ({ bins, data, yValueField, hexbinSize }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none', x: 0, y: 0, content: [] });\n\n    const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - 15 && d.x <= bin.x + 15 &&\n                    d.y >= bin.y - 15 && d.y <= bin.y + 15\n                );\n\n                // Filter out only valid data points (non-null and non-zero)\n                const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n                // Calculate mean from valid data points\n                const meanValue = validDataPoints.length > 0 \n                    ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length \n                    : 0;\n\n                // Skip rendering this bin if the meanValue is 0 or no valid data points\n                if (meanValue === 0 || validDataPoints.length === 0) {\n                    return null; // Skip this bin\n                }\n\n                const fillColor = colorScale(meanValue);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           // Show the tooltip with mean value\n                           setTooltip({\n                               display: 'block',\n                               x: 700,\n                               y: 505,\n                               content: [\n                                   `Numbers of Data Points: ${validDataPoints.length}`,\n                                   `Mean Value: ${meanValue.toFixed(2)}`\n                               ], \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none', x: 0, y: 0, content: [] });\n                       }}>\n                        <path \n                            d={d3Hexbin().hexagon(hexbinSize)} \n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                        />\n                    </g>\n                );\n            })}\n            \n            {/* Tooltip Rendering */}\n            <g transform={`translate(${tooltip.x}, ${tooltip.y})`} style={{ display: tooltip.display, pointerEvents: 'none' }}>\n                <text fill=\"black\" fontSize=\"12\" fontWeight='bold' textAnchor=\"left\" stroke='white' strokeWidth={0.2}>\n                    {tooltip.content.map((line, index) => (\n                        <tspan x=\"0\" dy={index === 0 ? 0 : 15} key={index}>\n                            {line}\n                        </tspan>\n                    ))}\n                </text>\n            </g>\n        </g>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}