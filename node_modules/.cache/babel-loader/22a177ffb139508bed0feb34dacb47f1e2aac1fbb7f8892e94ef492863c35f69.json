{"ast":null,"code":"var _s = $RefreshSig$();\n// useData.js\nimport { useEffect, useState } from 'react';\nimport { csv } from 'd3';\nexport const useData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv('/dataku.csv') // Load from public directory\n    .then(rawData => {\n      console.log(\"Raw Data:\", rawData); // Debug the raw data\n\n      const processedData = rawData.map(d => ({\n        Timestamp: new Date(d.Timestamp),\n        // Convert to Date\n        HRV: Math.max(5, +d.HRV) || 0,\n        // Ensure HRV is at least 5 and a number\n        coords: d['Location Coordinates'].split(',').map(coord => +coord.trim()) // Convert to numbers\n      }));\n      console.log(\"Processed Data:\", processedData); // Debug processed data\n      setData(processedData); // Store the processed data\n    }).catch(error => {\n      console.error(\"Error loading data:\", error);\n    });\n  }, []);\n  return data; // Return processed data\n};\n_s(useData, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"names":["useEffect","useState","csv","useData","_s","data","setData","then","rawData","console","log","processedData","map","d","Timestamp","Date","HRV","Math","max","coords","split","coord","trim","catch","error"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/useData.js"],"sourcesContent":["// useData.js\nimport { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useData = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        csv('/dataku.csv') // Load from public directory\n            .then(rawData => {\n                console.log(\"Raw Data:\", rawData); // Debug the raw data\n\n                const processedData = rawData.map(d => ({\n                    Timestamp: new Date(d.Timestamp), // Convert to Date\n                    HRV: Math.max(5, +d.HRV) || 0, // Ensure HRV is at least 5 and a number\n                    coords: d['Location Coordinates'].split(',')\n                              .map(coord => +coord.trim()), // Convert to numbers\n                }));\n\n                console.log(\"Processed Data:\", processedData); // Debug processed data\n                setData(processedData); // Store the processed data\n            })\n            .catch(error => {\n                console.error(\"Error loading data:\", error);\n            });\n    }, []);\n\n    return data; // Return processed data\n};"],"mappings":";AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,IAAI;AAExB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZE,GAAG,CAAC,aAAa,CAAC,CAAC;IAAA,CACdK,IAAI,CAACC,OAAO,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC,CAAC,CAAC;;MAEnC,MAAMG,aAAa,GAAGH,OAAO,CAACI,GAAG,CAACC,CAAC,KAAK;QACpCC,SAAS,EAAE,IAAIC,IAAI,CAACF,CAAC,CAACC,SAAS,CAAC;QAAE;QAClCE,GAAG,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACL,CAAC,CAACG,GAAG,CAAC,IAAI,CAAC;QAAE;QAC/BG,MAAM,EAAEN,CAAC,CAAC,sBAAsB,CAAC,CAACO,KAAK,CAAC,GAAG,CAAC,CACjCR,GAAG,CAACS,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;MAC5C,CAAC,CAAC,CAAC;MAEHb,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,aAAa,CAAC,CAAC,CAAC;MAC/CL,OAAO,CAACK,aAAa,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;MACZf,OAAO,CAACe,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOnB,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CAxBWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}