{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d['Reported Date']; // Use Reported Date for x values\n\nconst App = () => {\n  _s();\n  const worldAtlas = useWorldAtlas();\n  const data = useData(); // Load your CSV data\n  const [brushExtent, setBrushExtent] = useState(null);\n\n  // Debugging: Log the data being loaded\n  console.log(\"Data being loaded:\", data);\n  if (!worldAtlas || !data) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this); // Show loading if data isn't ready\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(BubbleMap, {\n      data: filteredData,\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data // Pass the data to DateHistogram\n        ,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue // Pass xValue function\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qNrp+cqz1K4ohBQ5elzPglsfMNY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","App","_s","worldAtlas","data","brushExtent","setBrushExtent","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","transform","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\n\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d['Reported Date']; // Use Reported Date for x values\n\nconst App = () => {\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); // Load your CSV data\n    const [brushExtent, setBrushExtent] = useState(null);\n\n    // Debugging: Log the data being loaded\n    console.log(\"Data being loaded:\", data);\n\n    if (!worldAtlas || !data) {\n        return <pre>Loading...</pre>; // Show loading if data isn't ready\n    }\n\n    const filteredData = brushExtent\n        ? data.filter(d => {\n            const date = xValue(d);\n            return date >= brushExtent[0] && date <= brushExtent[1];\n        })\n        : data;\n\n    return (\n        <svg width={width} height={height}>\n            <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\n            <g transform={`translate(0, ${height - dateHistogramSize * height})`}>\n                <DateHistogram\n                    data={data} // Pass the data to DateHistogram\n                    width={width}\n                    height={dateHistogramSize * height}\n                    setBrushExtent={setBrushExtent}\n                    xValue={xValue} // Pass xValue function\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAMC,UAAU,GAAGb,aAAa,CAAC,CAAC;EAClC,MAAMc,IAAI,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;EACxB,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAkB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,IAAI,CAAC;EAEvC,IAAI,CAACD,UAAU,IAAI,CAACC,IAAI,EAAE;IACtB,oBAAOT,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,MAAMC,YAAY,GAAGT,WAAW,GAC1BD,IAAI,CAACW,MAAM,CAACf,CAAC,IAAI;IACf,MAAMgB,IAAI,GAAGjB,MAAM,CAACC,CAAC,CAAC;IACtB,OAAOgB,IAAI,IAAIX,WAAW,CAAC,CAAC,CAAC,IAAIW,IAAI,IAAIX,WAAW,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,GACAD,IAAI;EAEV,oBACIT,OAAA;IAAKC,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAY,QAAA,gBAC9Bd,OAAA,CAACH,SAAS;MAACY,IAAI,EAAEU,YAAa;MAACX,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDlB,OAAA;MAAGsB,SAAS,EAAE,gBAAgBpB,MAAM,GAAGC,iBAAiB,GAAGD,MAAM,GAAI;MAAAY,QAAA,eACjEd,OAAA,CAACF,aAAa;QACVW,IAAI,EAAEA,IAAK,CAAC;QAAA;QACZR,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEC,iBAAiB,GAAGD,MAAO;QACnCS,cAAc,EAAEA,cAAe;QAC/BP,MAAM,EAAEA,MAAO,CAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACX,EAAA,CAjCID,GAAG;EAAA,QACcX,aAAa,EACnBC,OAAO;AAAA;AAAA2B,EAAA,GAFlBjB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}