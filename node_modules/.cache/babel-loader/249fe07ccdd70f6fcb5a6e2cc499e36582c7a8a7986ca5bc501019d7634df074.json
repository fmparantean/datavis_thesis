{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual/src/DateHistogram/Marks.js\";\nimport { line } from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  binnedData,\n  xScale,\n  yScale,\n  tooltipFormat,\n  innerHeight\n}) => {\n  // Log to inspect the binned data\n  console.log(\"Binned Data in Marks: \", binnedData);\n\n  // Check if binnedData has any data\n  if (binnedData.length === 0) {\n    return null; // No data to render\n  }\n\n  // Create a line generator\n  const lineGenerator = line().x(d => xScale(d.x0 + (d.x1 - d.x0) / 2)) // Midpoint x\n  .y(d => yScale(d.y)); // y value\n\n  // Generate the path string\n  const pathData = lineGenerator(binnedData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"line\",\n      d: pathData // Set the path data\n      ,\n      fill: \"none\",\n      stroke: \"steelblue\" // Line color\n      ,\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), binnedData.map(d => /*#__PURE__*/_jsxDEV(\"circle\", {\n      // Keying with x0 for simple example, replace with unique ID if available\n      cx: xScale(d.x0 + (d.x1 - d.x0) / 2),\n      cy: yScale(d.y),\n      r: 3,\n      fill: \"red\" // Optional: Add points to make it easier to see where data is\n    }, d.x0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["line","jsxDEV","_jsxDEV","Fragment","_Fragment","Marks","binnedData","xScale","yScale","tooltipFormat","innerHeight","console","log","length","lineGenerator","x","d","x0","x1","y","pathData","children","className","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual/src/DateHistogram/Marks.js"],"sourcesContent":["import { line } from 'd3';\n\nexport const Marks = ({\n  binnedData,\n  xScale,\n  yScale,\n  tooltipFormat,\n  innerHeight\n}) => {\n  \n  // Log to inspect the binned data\n  console.log(\"Binned Data in Marks: \", binnedData);\n\n  // Check if binnedData has any data\n  if (binnedData.length === 0) {\n    return null; // No data to render\n  }\n\n  // Create a line generator\n  const lineGenerator = line()\n    .x(d => xScale(d.x0 + (d.x1 - d.x0) / 2)) // Midpoint x\n    .y(d => yScale(d.y)); // y value\n\n  // Generate the path string\n  const pathData = lineGenerator(binnedData);\n\n  return (\n    <>\n      <path\n        className=\"line\"\n        d={pathData} // Set the path data\n        fill=\"none\"\n        stroke=\"steelblue\" // Line color\n        strokeWidth=\"2\"\n      />\n      {binnedData.map(d => (\n        <circle\n          key={d.x0} // Keying with x0 for simple example, replace with unique ID if available\n          cx={xScale(d.x0 + (d.x1 - d.x0) / 2)}\n          cy={yScale(d.y)}\n          r={3}\n          fill=\"red\" // Optional: Add points to make it easier to see where data is\n        />\n      ))}\n    </>\n  );\n};"],"mappings":";AAAA,SAASA,IAAI,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,KAAK,GAAGA,CAAC;EACpBC,UAAU;EACVC,MAAM;EACNC,MAAM;EACNC,aAAa;EACbC;AACF,CAAC,KAAK;EAEJ;EACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEN,UAAU,CAAC;;EAEjD;EACA,IAAIA,UAAU,CAACO,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO,IAAI,CAAC,CAAC;EACf;;EAEA;EACA,MAAMC,aAAa,GAAGd,IAAI,CAAC,CAAC,CACzBe,CAAC,CAACC,CAAC,IAAIT,MAAM,CAACS,CAAC,CAACC,EAAE,GAAG,CAACD,CAAC,CAACE,EAAE,GAAGF,CAAC,CAACC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAAA,CACzCE,CAAC,CAACH,CAAC,IAAIR,MAAM,CAACQ,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMC,QAAQ,GAAGN,aAAa,CAACR,UAAU,CAAC;EAE1C,oBACEJ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MACEoB,SAAS,EAAC,MAAM;MAChBN,CAAC,EAAEI,QAAS,CAAC;MAAA;MACbG,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,WAAW,CAAC;MAAA;MACnBC,WAAW,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EACDvB,UAAU,CAACwB,GAAG,CAACd,CAAC,iBACfd,OAAA;MACa;MACX6B,EAAE,EAAExB,MAAM,CAACS,CAAC,CAACC,EAAE,GAAG,CAACD,CAAC,CAACE,EAAE,GAAGF,CAAC,CAACC,EAAE,IAAI,CAAC,CAAE;MACrCe,EAAE,EAAExB,MAAM,CAACQ,CAAC,CAACG,CAAC,CAAE;MAChBc,CAAC,EAAE,CAAE;MACLV,IAAI,EAAC,KAAK,CAAC;IAAA,GAJNP,CAAC,CAACC,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACF,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACK,EAAA,GA5CW7B,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}