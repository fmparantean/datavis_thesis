{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Declaration=_ref=>{let{onStart}=_ref;const[checkedState,setCheckedState]=useState(new Array(5).fill(false));// 4 checkboxes\nconst[errorMessage,setErrorMessage]=useState('');const handleCheckboxChange=position=>{const updatedCheckedState=checkedState.map((item,index)=>index===position?!item:item);setCheckedState(updatedCheckedState);setErrorMessage('');// Clear error message when checkbox changes\n};const handleStart=()=>{if(checkedState.some(item=>!item)){setErrorMessage('You must tick all the declarations to be eligible for this experiment.');}else{setErrorMessage('');// Clear previous messages\nonStart();// Proceed to the Welcome page\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"declaration-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to the Data Visualization Experiment\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"My name is Febryeric M. Parantean, and I am a master's student in the Cognitive Science program at Osnabr\\xFCck University.\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"This experiment is part of my master's thesis under the supervision of: \"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Prof. Dr. phil. Kai-Uwe K\\xFChnberger (Osnabr\\xFCck University) \"}),/*#__PURE__*/_jsx(\"h5\",{children:\"Dr. Esther Bosch (German Aerospace Center/ DLR)\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"You are going to evaluate the \\\"hexagonal bin (hexbin)\\\" data visualization between the static and the interactive map.\"}),/*#__PURE__*/_jsx(\"h4\",{children:\"You need to use a mouse and a recommended screen monitor minimum of 19 inches. \"}),/*#__PURE__*/_jsx(\"p\",{className:\"checkboxes\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"As a participant, I declare that ...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkboxes\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedState[0],onChange:()=>handleCheckboxChange(0)}),\"I am 18 years old and older\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedState[1],onChange:()=>handleCheckboxChange(1)}),\"I have no color blindness\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedState[2],onChange:()=>handleCheckboxChange(2)}),\"I am not suffering from Trypophobia or fear of hexagonal shapes\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedState[3],onChange:()=>handleCheckboxChange(3)}),\"I agree to do this experiment\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checkedState[4],onChange:()=>handleCheckboxChange(4)}),\"I am allowed to stop this experiment for a specific reason\"]})]}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:errorMessage}),\" \",/*#__PURE__*/_jsx(\"button\",{onClick:handleStart,className:\"welcome-button\",children:\"START\"})]});};export default Declaration;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Declaration","_ref","onStart","checkedState","setCheckedState","Array","fill","errorMessage","setErrorMessage","handleCheckboxChange","position","updatedCheckedState","map","item","index","handleStart","some","className","children","type","checked","onChange","style","color","onClick"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/Declaration.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Declaration = ({ onStart }) => {\n    const [checkedState, setCheckedState] = useState(new Array(5).fill(false)); // 4 checkboxes\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleCheckboxChange = (position) => {\n        const updatedCheckedState = checkedState.map((item, index) =>\n            index === position ? !item : item\n        );\n\n        setCheckedState(updatedCheckedState);\n        setErrorMessage(''); // Clear error message when checkbox changes\n    };\n\n    const handleStart = () => {\n        if (checkedState.some(item => !item)) {\n            setErrorMessage('You must tick all the declarations to be eligible for this experiment.');\n        } else {\n            setErrorMessage(''); // Clear previous messages\n            onStart(); // Proceed to the Welcome page\n        }\n    };\n\n    return (\n        <div className=\"declaration-container\">\n            <h1>Welcome to the Data Visualization Experiment</h1>\n            <h3>My name is Febryeric M. Parantean, and I am a master's student in the Cognitive Science program at Osnabrück University.</h3>\n            <h3>This experiment is part of my master's thesis under the supervision of: </h3>\n                <h5>Prof. Dr. phil. Kai-Uwe Kühnberger (Osnabrück University) </h5>\n                <h5>Dr. Esther Bosch (German Aerospace Center/ DLR)</h5>\n            <h4>You are going to evaluate the \"hexagonal bin (hexbin)\" data visualization between the static and the interactive map.</h4>\n            <h4>You need to use a mouse and a recommended screen monitor minimum of 19 inches. </h4>\n    \n            <p className=\"checkboxes\">\n                <h2>As a participant, I declare that ...</h2>\n            </p>\n            <div className=\"checkboxes\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={checkedState[0]}\n                        onChange={() => handleCheckboxChange(0)}\n                    />\n                    I am 18 years old and older\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={checkedState[1]}\n                        onChange={() => handleCheckboxChange(1)}\n                    />\n                    I have no color blindness\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={checkedState[2]}\n                        onChange={() => handleCheckboxChange(2)}\n                    />\n                    I am not suffering from Trypophobia or fear of hexagonal shapes\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={checkedState[3]}\n                        onChange={() => handleCheckboxChange(3)}\n                    />\n                    I agree to do this experiment\n                </label>\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={checkedState[4]}\n                        onChange={() => handleCheckboxChange(4)}\n                    />\n                    I am allowed to stop this experiment for a specific reason\n                </label>\n            </div>\n\n            {/* Display error message if validation fails */}\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>} {/* Display error message */}\n\n            <button onClick={handleStart} className=\"welcome-button\">\n                START\n            </button>\n        </div>\n    );\n};\n\nexport default Declaration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}