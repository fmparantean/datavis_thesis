{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport { hexbin } from 'd3-hexbin'; // Import D3 hexbin\n\nexport const BubbleMap = ({\n  data\n}) => {\n  _s();\n  const map = useMap(); // Access the Leaflet map instance\n\n  useEffect(() => {\n    // Create hexbin layer\n    const hexbinLayer = L.hexbinLayer({\n      radius: 20,\n      // Set hexagon radius\n      opacity: 0.6,\n      // Opacity of the hexagons\n      colorRange: ['#f7fbff', '#08306b'] // Color scale\n    }).addTo(map); // Add it to the Leaflet map\n\n    // Extract valid points, switching to [lng, lat]\n    const points = data.map(feat => feat.coords); // Assumes coords are in [lat, lng] format\n\n    // Log the data to ensure it's being processed\n    console.log(\"Hexbin Points:\", points);\n\n    // Set data to hexbin layer\n    if (points.length > 0) {\n      hexbinLayer.data(points);\n    }\n\n    // Cleanup: remove layer on unmount\n    return () => {\n      if (map.hasLayer(hexbinLayer)) {\n        map.removeLayer(hexbinLayer);\n      }\n    };\n  }, [data, map]); // Dependencies\n\n  return null; // No direct rendering\n};\n_s(BubbleMap, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = BubbleMap;\nexport default BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","useEffect","useMap","L","hexbin","BubbleMap","data","_s","map","hexbinLayer","radius","opacity","colorRange","addTo","points","feat","coords","console","log","length","hasLayer","removeLayer","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/DateHistogram/index.js"],"sourcesContent":["import React, { useEffect } from 'react'; \nimport { useMap } from 'react-leaflet'; \nimport L from 'leaflet'; \nimport { hexbin } from 'd3-hexbin'; // Import D3 hexbin\n\nexport const BubbleMap = ({ data }) => {\n    const map = useMap(); // Access the Leaflet map instance\n\n    useEffect(() => {\n        // Create hexbin layer\n        const hexbinLayer = L.hexbinLayer({\n            radius: 20, // Set hexagon radius\n            opacity: 0.6, // Opacity of the hexagons\n            colorRange: ['#f7fbff', '#08306b'], // Color scale\n        }).addTo(map); // Add it to the Leaflet map\n\n        // Extract valid points, switching to [lng, lat]\n        const points = data.map(feat => feat.coords); // Assumes coords are in [lat, lng] format\n\n        // Log the data to ensure it's being processed\n        console.log(\"Hexbin Points:\", points);\n\n        // Set data to hexbin layer\n        if (points.length > 0) {\n            hexbinLayer.data(points);\n        }\n\n        // Cleanup: remove layer on unmount\n        return () => {\n            if (map.hasLayer(hexbinLayer)) {\n                map.removeLayer(hexbinLayer);\n            }\n        };\n    }, [data, map]); // Dependencies\n\n    return null; // No direct rendering\n};\n\nexport default BubbleMap;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,SAAS;AACvB,SAASC,MAAM,QAAQ,WAAW,CAAC,CAAC;;AAEpC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAMC,GAAG,GAAGN,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEtBD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,WAAW,GAAGN,CAAC,CAACM,WAAW,CAAC;MAC9BC,MAAM,EAAE,EAAE;MAAE;MACZC,OAAO,EAAE,GAAG;MAAE;MACdC,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAE;IACxC,CAAC,CAAC,CAACC,KAAK,CAACL,GAAG,CAAC,CAAC,CAAC;;IAEf;IACA,MAAMM,MAAM,GAAGR,IAAI,CAACE,GAAG,CAACO,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;;IAE9C;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;;IAErC;IACA,IAAIA,MAAM,CAACK,MAAM,GAAG,CAAC,EAAE;MACnBV,WAAW,CAACH,IAAI,CAACQ,MAAM,CAAC;IAC5B;;IAEA;IACA,OAAO,MAAM;MACT,IAAIN,GAAG,CAACY,QAAQ,CAACX,WAAW,CAAC,EAAE;QAC3BD,GAAG,CAACa,WAAW,CAACZ,WAAW,CAAC;MAChC;IACJ,CAAC;EACL,CAAC,EAAE,CAACH,IAAI,EAAEE,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEjB,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CA/BWF,SAAS;EAAA,QACNH,MAAM;AAAA;AAAAoB,EAAA,GADTjB,SAAS;AAiCtB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}