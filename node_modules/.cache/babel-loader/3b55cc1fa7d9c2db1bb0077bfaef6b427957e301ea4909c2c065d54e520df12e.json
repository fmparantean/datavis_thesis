{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas'; // If needed for geographic data\nimport './App.css';\nimport { useData } from './useData';\nimport BubbleMap from './BubbleMap/index.js'; // Ensure this imports correctly\nimport { DateHistogram } from './DateHistogram/index.js'; // Ensure correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // x-axis using Timestamp\n\nconst App = () => {\n  _s();\n  const data = useData(); // Load your CSV data\n\n  const [brushExtent, setBrushExtent] = useState(null);\n\n  // Debugging output\n  console.log(\"Data being loaded:\", data);\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this); // Loading state\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(BubbleMap, {\n      data: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue // Pass xValue function\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"KbjHygebxu2KAJG0RyuWHFaH+nw=\", false, function () {\n  return [useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","Timestamp","App","_s","data","brushExtent","setBrushExtent","console","log","length","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","transform","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas'; // If needed for geographic data\nimport './App.css';\nimport { useData } from './useData';\nimport BubbleMap from './BubbleMap/index.js'; // Ensure this imports correctly\nimport { DateHistogram } from './DateHistogram/index.js'; // Ensure correct import\n\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // x-axis using Timestamp\n\nconst App = () => {\n    const data = useData(); // Load your CSV data\n\n    const [brushExtent, setBrushExtent] = useState(null);\n\n    // Debugging output\n    console.log(\"Data being loaded:\", data);\n\n    if (!data || data.length === 0) {\n        return <pre>Loading...</pre>; // Loading state\n    }\n\n    const filteredData = brushExtent\n        ? data.filter(d => {\n            const date = xValue(d);\n            return date >= brushExtent[0] && date <= brushExtent[1];\n        })\n        : data;\n\n    return (\n        <svg width={width} height={height}>\n            <BubbleMap data={filteredData} /> {/* Render the bubble map */}\n            <g transform={`translate(0, ${height - dateHistogramSize * height})`}>\n                <DateHistogram\n                    data={data}\n                    width={width}\n                    height={dateHistogramSize * height}\n                    setBrushExtent={setBrushExtent}\n                    xValue={xValue} // Pass xValue function\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AACjD,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,SAAS,MAAM,sBAAsB,CAAC,CAAC;AAC9C,SAASC,aAAa,QAAQ,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAMC,IAAI,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;;EAExB,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAkB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,IAAI,CAAC;EAEvC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOd,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,MAAMC,YAAY,GAAGV,WAAW,GAC1BD,IAAI,CAACY,MAAM,CAAChB,CAAC,IAAI;IACf,MAAMiB,IAAI,GAAGlB,MAAM,CAACC,CAAC,CAAC;IACtB,OAAOiB,IAAI,IAAIZ,WAAW,CAAC,CAAC,CAAC,IAAIY,IAAI,IAAIZ,WAAW,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,GACAD,IAAI;EAEV,oBACIT,OAAA;IAAKC,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAa,QAAA,gBAC9Bf,OAAA,CAACH,SAAS;MAACY,IAAI,EAAEW;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAClCnB,OAAA;MAAGuB,SAAS,EAAE,gBAAgBrB,MAAM,GAAGC,iBAAiB,GAAGD,MAAM,GAAI;MAAAa,QAAA,eACjEf,OAAA,CAACF,aAAa;QACVW,IAAI,EAAEA,IAAK;QACXR,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEC,iBAAiB,GAAGD,MAAO;QACnCS,cAAc,EAAEA,cAAe;QAC/BP,MAAM,EAAEA,MAAO,CAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACX,EAAA,CAjCID,GAAG;EAAA,QACQX,OAAO;AAAA;AAAA4B,EAAA,GADlBjB,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}