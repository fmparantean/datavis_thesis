{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins,\n  data,\n  yValueField\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    display: 'none'\n  });\n  const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n  const colorScale = d3.scaleLinear().domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]).range(['yellow', 'orange', 'red']);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const binData = data.filter(d => d.x >= bin.x - 15 && d.x <= bin.x + 15 && d.y >= bin.y - 15 && d.y <= bin.y + 15);\n\n      // Filter out only valid data points (non-null and non-zero)\n      const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n      // Calculate mean from valid data points\n      const meanValue = validDataPoints.length > 0 ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length : 0;\n\n      // Skip rendering this bin if the meanValue is 0 or no valid data points\n      if (meanValue === 0 || validDataPoints.length === 0) {\n        return null; // Skip this bin\n      }\n      const fillColor = colorScale(meanValue);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          // Show the tooltip with mean value\n          setTooltip({\n            display: 'block',\n            x: 700,\n            y: 580,\n            content: `Count: ${validDataPoints.length}, Mean ${yValueField}: ${meanValue.toFixed(2)}`\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3Hexbin().hexagon(5),\n          transform: `translate(${bin.x}, ${bin.y})`,\n          fill: fillColor,\n          stroke: \"black\",\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"15\",\n      fontWeight: bold,\n      textAnchor: \"middle\",\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n      padding: \"10px\",\n      borderRadius: \"5px\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"cFcvUXz/VuJYq8f1l2ttuLcSJIo=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","d3","hexbin","d3Hexbin","jsxDEV","_jsxDEV","Marks","bins","data","yValueField","_s","tooltip","setTooltip","display","hrvValues","map","d","filter","h","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","x","y","validDataPoints","meanValue","length","reduce","sum","fillColor","onMouseEnter","e","content","toFixed","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","fontWeight","bold","textAnchor","backgroundColor","padding","borderRadius","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3'; \nimport { hexbin as d3Hexbin } from 'd3-hexbin'; \n\nexport const Marks = ({ bins, data, yValueField }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none' });\n\n    const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - 15 && d.x <= bin.x + 15 &&\n                    d.y >= bin.y - 15 && d.y <= bin.y + 15\n                );\n\n                // Filter out only valid data points (non-null and non-zero)\n                const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n                // Calculate mean from valid data points\n                const meanValue = validDataPoints.length > 0 \n                    ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length \n                    : 0;\n\n                // Skip rendering this bin if the meanValue is 0 or no valid data points\n                if (meanValue === 0 || validDataPoints.length === 0) {\n                    return null; // Skip this bin\n                }\n\n                const fillColor = colorScale(meanValue);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           // Show the tooltip with mean value\n                           setTooltip({\n                               display: 'block',\n                               x: 700,\n                               y: 580,\n                               content: `Count: ${validDataPoints.length}, Mean ${yValueField}: ${meanValue.toFixed(2)}`, \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                        <path \n                            d={d3Hexbin().hexagon(5)} \n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                        />\n                    </g>\n                );\n            })}\n            <text \n                x={tooltip.x} \n                y={tooltip.y} \n                style={{ display: tooltip.display, pointerEvents: 'none' }} \n                fill=\"black\" \n                fontSize=\"15\" \n                fontWeight={bold}\n                textAnchor=\"middle\"\n                backgroundColor= 'rgba(0, 0, 0, 0.7)'\n                padding= '10px'\n                borderRadius= '5px'>\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}