{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/bubblemap/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 500;\nconst dateHistogramSize = 0.2;\nconst xValue = d => d['Reported Date'];\nconst App = () => {\n  _s();\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  if (!worldAtlas || !data) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(BubbleMap, {\n      data: filteredData,\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height + 10})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qNrp+cqz1K4ohBQ5elzPglsfMNY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","App","_s","worldAtlas","data","brushExtent","setBrushExtent","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","transform","_c","$RefreshReg$"],"sources":["/Users/fmparantean/bubblemap/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\n\nconst width = 960;\nconst height = 500;\nconst dateHistogramSize = 0.2;\n\nconst xValue = d => d['Reported Date'];\n\nconst App = () => {\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n\n  if (!worldAtlas || !data) {\n    return <pre>Loading...</pre>;\n  }\n\n  const filteredData = brushExtent\n    ? data.filter(d => {\n        const date = xValue(d);\n        return date >= brushExtent[0] && date <= brushExtent[1];\n      })\n    : data;\n\n  return (\n    <svg width={width} height={height}>\n      <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\n      <br>\n      </br>\n      <g transform={`translate(0, ${height - (dateHistogramSize * height) + 10})`}>\n        <DateHistogram\n          data={data}\n          width={width}\n          height={dateHistogramSize * height}\n          setBrushExtent={setBrushExtent}\n          xValue={xValue}\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,iBAAiB,GAAG,GAAG;AAE7B,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAAC,eAAe,CAAC;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,UAAU,GAAGb,aAAa,CAAC,CAAC;EAClC,MAAMc,IAAI,GAAGb,OAAO,CAAC,CAAC;EACtB,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAI,CAACc,UAAU,IAAI,CAACC,IAAI,EAAE;IACxB,oBAAOT,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,MAAMC,YAAY,GAAGP,WAAW,GAC5BD,IAAI,CAACS,MAAM,CAACb,CAAC,IAAI;IACf,MAAMc,IAAI,GAAGf,MAAM,CAACC,CAAC,CAAC;IACtB,OAAOc,IAAI,IAAIT,WAAW,CAAC,CAAC,CAAC,IAAIS,IAAI,IAAIT,WAAW,CAAC,CAAC,CAAC;EACzD,CAAC,CAAC,GACFD,IAAI;EAER,oBACET,OAAA;IAAKC,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAU,QAAA,gBAChCZ,OAAA,CAACH,SAAS;MAACY,IAAI,EAAEQ,YAAa;MAACT,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACLhB,OAAA;MAAGoB,SAAS,EAAE,gBAAgBlB,MAAM,GAAIC,iBAAiB,GAAGD,MAAO,GAAG,EAAE,GAAI;MAAAU,QAAA,eAC1EZ,OAAA,CAACF,aAAa;QACZW,IAAI,EAAEA,IAAK;QACXR,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEC,iBAAiB,GAAGD,MAAO;QACnCS,cAAc,EAAEA,cAAe;QAC/BP,MAAM,EAAEA;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACT,EAAA,CAhCID,GAAG;EAAA,QACYX,aAAa,EACnBC,OAAO;AAAA;AAAAyB,EAAA,GAFhBf,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}