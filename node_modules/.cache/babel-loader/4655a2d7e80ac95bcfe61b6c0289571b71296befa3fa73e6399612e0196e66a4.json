{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Welcome from './Welcome';\nimport QGIS from './QGIS';\nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js';\nimport * as d3 from 'd3';\nimport Filters from './Filters';\nimport Instructions from './Instructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n  const [isChecked, setIsChecked] = useState(false); // Checkbox state for finishing\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  const [participant, setParticipant] = useState(\"All\");\n  const [gender, setGender] = useState(\"Both\");\n  const [modeButton, setModeButton] = useState(\"Both\");\n  const [yValueField, setYValueField] = useState(\"HRV\");\n  const [hexbinSize, setHexbinSize] = useState(5);\n  const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n  const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n  const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n  const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n  const handleFinish = () => {\n    if (!isChecked) {\n      setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finish this experiment.'); // Set error message if not checked\n    } else {\n      setErrorMessage(''); // Clear error message if checked\n      setCurrentPage('final'); // Go to final page\n    }\n  };\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'declaration':\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(Welcome, {\n          onQGIS: handleGoToQGIS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this);\n      // Pass handler to Welcome\n      case 'qgis':\n        return /*#__PURE__*/_jsxDEV(QGIS, {\n          onBack: handleBackToD3React\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this);\n      // QGIS page\n      case 'mainapp':\n        return renderMainApp();\n      // Render D3 React App\n      case 'final':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-message\",\n          children: [\"Thank you for completing the experiment process!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), \"Best Regards,\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Febryeric M. Parantean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const renderMainApp = () => {\n    if (!worldAtlas || !data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: height / 2,\n          textAnchor: \"middle\",\n          fontSize: \"14\",\n          fill: \"black\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Get unique participants dynamically and sort them\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant))).sort((a, b) => a - b);\n\n    // Filter Data based on selected criteria\n    const filteredData = data.filter(d => {\n      const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n      const genderFilter = gender === \"Both\" || d.Gender === gender;\n      const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n      return participantFilter && genderFilter && modeButtonFilter;\n    });\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0]).range(['yellow', 'orange', 'red']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        style: {\n          flex: '0 0 250px',\n          padding: '20px',\n          backgroundColor: '#f0f0f0',\n          boxSizing: 'border-box'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          participant: participant,\n          setParticipant: setParticipant,\n          gender: gender,\n          setGender: setGender,\n          modeButton: modeButton,\n          setModeButton: setModeButton,\n          yValueField: yValueField,\n          setYValueField: setYValueField,\n          uniqueParticipants: uniqueParticipants,\n          hexbinSize: hexbinSize,\n          setHexbinSize: setHexbinSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bus.png\",\n          alt: \"bus Logo\",\n          style: {\n            width: '100%',\n            height: 'auto',\n            marginTop: '20px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          position: 'relative',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"50%\",\n            y: \"45\",\n            textAnchor: \"middle\",\n            className: \"title\",\n            children: \"Travel Experience with Different Transportation Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n            id: \"map-image\",\n            href: \"datamap.png\",\n            height: \"100%\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: '0 0 200px',\n            marginTop: '20px',\n            padding: '10px',\n            backgroundColor: '#fff',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '20px',\n            left: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"GLgf+v+UmUSjAsu8Gwo30hU/kQE=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","Instructions","jsxDEV","_jsxDEV","width","height","dateHistogramSize","orderedDays","App","_s","currentPage","setCurrentPage","isChecked","setIsChecked","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","errorMessage","setErrorMessage","handleStartDeclaration","handleGoToQGIS","handleBackToD3React","handleFinish","renderPage","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onQGIS","onBack","renderMainApp","className","children","length","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","flex","padding","backgroundColor","boxSizing","src","alt","marginTop","flexGrow","position","flexDirection","id","href","boxShadow","bottom","left","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \nimport Instructions from './Instructions'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n    const [isChecked, setIsChecked] = useState(false); // Checkbox state for finishing\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n    const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n    const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n    const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n    const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n    const handleFinish = () => {\n        if (!isChecked) {\n            setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finish this experiment.'); // Set error message if not checked\n        } else {\n            setErrorMessage(''); // Clear error message if checked\n            setCurrentPage('final'); // Go to final page\n        }\n    };\n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'welcome':\n                return <Welcome onQGIS={handleGoToQGIS} />; // Pass handler to Welcome\n            case 'qgis':\n                return <QGIS onBack={handleBackToD3React} />; // QGIS page\n            case 'mainapp':\n                return renderMainApp(); // Render D3 React App\n                case 'final':\n                    return (\n                        <div className=\"final-message\">\n                            Thank you for completing the experiment process!\n                            <br />\n                            <br />\n                            Best Regards,\n                            <div>Febryeric M. Parantean</div>\n                        </div>\n                    );\n            default:\n                return <Declaration onStart={handleStartDeclaration} />;\n        }\n    };\n\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        // Get unique participants dynamically and sort them\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        // Filter Data based on selected criteria\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex', width: '100%', height: '100vh' }}>\n                {/* Filters Section */}\n                <div className=\"filters\" style={{ flex: '0 0 250px', padding: '20px', backgroundColor: '#f0f0f0', boxSizing: 'border-box' }}>\n                    {/* Your Filters Component */}\n                    <Filters \n                        participant={participant} \n                        setParticipant={setParticipant} \n                        gender={gender} \n                        setGender={setGender} \n                        modeButton={modeButton} \n                        setModeButton={setModeButton}\n                        yValueField={yValueField}\n                        setYValueField={setYValueField}\n                        uniqueParticipants={uniqueParticipants} \n                        hexbinSize={hexbinSize}\n                        setHexbinSize={setHexbinSize}\n                    />\n                    <img \n                        src=\"bus.png\" \n                        alt=\"bus Logo\"\n                        style={{ width: '100%', height: 'auto', marginTop: '20px' }} \n                    />\n                </div>\n\n                {/* Main Content Area */}\n                <div style={{ flexGrow: 1, position: 'relative', display: 'flex', flexDirection: 'column' }}>\n                    <svg width=\"100%\" height=\"100%\">\n                        <text x=\"50%\" y=\"45\" textAnchor=\"middle\" className=\"title\">\n                            Travel Experience with Different Transportation Mode\n                        </text>\n                        <image \n                            id='map-image'\n                            href=\"datamap.png\" \n                            height=\"100%\" \n                            width=\"100%\" \n                        />\n                        {/* Other SVG content */}\n                    </svg>\n\n                    {/* Instructions Container */}\n                    <div style={{ flex: '0 0 200px', marginTop: '20px', padding: '10px', backgroundColor: '#fff', boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)' }}>\n                        <Instructions />\n                    </div>\n\n                    {/* Confirmation Checkbox and Buttons positioned at the bottom */}\n                    <div style={{ position: 'absolute', bottom: '20px', left: '50px' }}>\n                        {/* Checkbox and buttons */}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            {renderPage()}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}