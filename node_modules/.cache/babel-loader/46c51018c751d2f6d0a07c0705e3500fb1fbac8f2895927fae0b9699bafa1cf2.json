{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // Use Timestamp for x values\n\nconst App = () => {\n  _s();\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  if (!worldAtlas || !data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this); // Prevents early returns affecting hooks\n  }\n\n  // Ensure filteredData definitions don't lead to issues\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(BubbleMap, {\n      data: filteredData,\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"qNrp+cqz1K4ohBQ5elzPglsfMNY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","Timestamp","App","_s","worldAtlas","data","brushExtent","setBrushExtent","length","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","transform","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\n\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // Use Timestamp for x values\n\nconst App = () => {\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n\n  const [brushExtent, setBrushExtent] = useState(null);\n\n  if (!worldAtlas || !data || data.length === 0) {\n      return <pre>Loading...</pre>; // Prevents early returns affecting hooks\n  }\n\n  // Ensure filteredData definitions don't lead to issues\n  const filteredData = brushExtent\n      ? data.filter(d => {\n          const date = xValue(d);\n          return date >= brushExtent[0] && date <= brushExtent[1];\n      })\n      : data;\n\n  return (\n      <svg width={width} height={height}>\n          <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\n          <g transform={`translate(0, ${height - (dateHistogramSize * height)})`}>\n              <DateHistogram\n                  data={data}\n                  width={width}\n                  height={dateHistogramSize * height}\n                  setBrushExtent={setBrushExtent}\n                  xValue={xValue}\n              />\n          </g>\n      </svg>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,UAAU,GAAGd,aAAa,CAAC,CAAC;EAClC,MAAMe,IAAI,GAAGd,OAAO,CAAC,CAAC;EAEtB,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAI,CAACe,UAAU,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAC3C,oBAAOb,OAAA;MAAAc,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;;EAEA;EACA,MAAMC,YAAY,GAAGR,WAAW,GAC1BD,IAAI,CAACU,MAAM,CAACf,CAAC,IAAI;IACf,MAAMgB,IAAI,GAAGjB,MAAM,CAACC,CAAC,CAAC;IACtB,OAAOgB,IAAI,IAAIV,WAAW,CAAC,CAAC,CAAC,IAAIU,IAAI,IAAIV,WAAW,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,GACAD,IAAI;EAEV,oBACIV,OAAA;IAAKC,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAAAY,QAAA,gBAC9Bd,OAAA,CAACH,SAAS;MAACa,IAAI,EAAES,YAAa;MAACV,UAAU,EAAEA;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDlB,OAAA;MAAGsB,SAAS,EAAE,gBAAgBpB,MAAM,GAAIC,iBAAiB,GAAGD,MAAO,GAAI;MAAAY,QAAA,eACnEd,OAAA,CAACF,aAAa;QACVY,IAAI,EAAEA,IAAK;QACXT,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEC,iBAAiB,GAAGD,MAAO;QACnCU,cAAc,EAAEA,cAAe;QAC/BR,MAAM,EAAEA;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACV,EAAA,CAhCID,GAAG;EAAA,QACYZ,aAAa,EACnBC,OAAO;AAAA;AAAA2B,EAAA,GAFhBhB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}