{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins,\n  data,\n  yValueField,\n  hexbinSize\n}) => {\n  _s();\n  // Accept hexbinSize\n  const [tooltip, setTooltip] = useState({\n    display: 'none',\n    x: 0,\n    y: 0,\n    content: []\n  });\n  const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n  const colorScale = d3.scaleLinear().domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]).range(['yellow', 'orange', 'red']);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const binData = data.filter(d => d.x >= bin.x - hexbinSize && d.x <= bin.x + hexbinSize && d.y >= bin.y - hexbinSize && d.y <= bin.y + hexbinSize);\n\n      // Filter out only valid data points (non-null and non-zero)\n      const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n      // Calculate mean from valid data points\n      const meanValue = validDataPoints.length > 0 ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length : 0;\n\n      // Skip rendering this bin if the meanValue is 0 or no valid data points\n      if (meanValue === 0 || validDataPoints.length === 0) {\n        return null; // Skip this bin\n      }\n      const fillColor = colorScale(meanValue);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          setTooltip({\n            display: 'block',\n            x: 700,\n            y: 505,\n            content: [`Numbers of Data Points: ${validDataPoints.length}`, `Mean Value: ${meanValue.toFixed(2)}`]\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none',\n            x: 0,\n            y: 0,\n            content: []\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3.hexbin().hexagon(hexbinSize) // Use hexbinSize from props\n          ,\n          transform: `translate(${bin.x}, ${bin.y})`,\n          fill: fillColor,\n          stroke: \"black\",\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${tooltip.x}, ${tooltip.y})`,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        fontSize: \"12\",\n        fontWeight: \"bold\",\n        textAnchor: \"left\",\n        stroke: \"white\",\n        strokeWidth: 0.2,\n        children: tooltip.content.map((line, index) => /*#__PURE__*/_jsxDEV(\"tspan\", {\n          x: \"0\",\n          dy: index === 0 ? 0 : 15,\n          children: line\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"FqF2PyDtzRoIsW3JUZVa9Epk3zQ=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","d3","hexbin","d3Hexbin","jsxDEV","_jsxDEV","Marks","bins","data","yValueField","hexbinSize","_s","tooltip","setTooltip","display","x","y","content","hrvValues","map","d","filter","h","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","validDataPoints","meanValue","length","reduce","sum","fillColor","onMouseEnter","e","toFixed","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","fontWeight","textAnchor","line","index","dy","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3'; \nimport { hexbin as d3Hexbin } from 'd3-hexbin'; \n\nexport const Marks = ({ bins, data, yValueField, hexbinSize }) => { // Accept hexbinSize\n    const [tooltip, setTooltip] = useState({ display: 'none', x: 0, y: 0, content: [] });\n\n    const hrvValues = data.map(d => d[yValueField]).filter(h => h != null && h !== 0);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - hexbinSize && d.x <= bin.x + hexbinSize &&\n                    d.y >= bin.y - hexbinSize && d.y <= bin.y + hexbinSize\n                );\n\n                // Filter out only valid data points (non-null and non-zero)\n                const validDataPoints = binData.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n                // Calculate mean from valid data points\n                const meanValue = validDataPoints.length > 0 \n                    ? validDataPoints.reduce((sum, d) => sum + d[yValueField], 0) / validDataPoints.length \n                    : 0;\n\n                // Skip rendering this bin if the meanValue is 0 or no valid data points\n                if (meanValue === 0 || validDataPoints.length === 0) {\n                    return null; // Skip this bin\n                }\n\n                const fillColor = colorScale(meanValue);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           setTooltip({\n                               display: 'block',\n                               x: 700,\n                               y: 505,\n                               content: [\n                                   `Numbers of Data Points: ${validDataPoints.length}`,\n                                   `Mean Value: ${meanValue.toFixed(2)}`\n                               ], \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none', x: 0, y: 0, content: [] });\n                       }}>\n                        <path \n                            d={d3.hexbin().hexagon(hexbinSize)} // Use hexbinSize from props\n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                        />\n                    </g>\n                );\n            })}\n            \n            {/* Tooltip Rendering */}\n            <g transform={`translate(${tooltip.x}, ${tooltip.y})`} style={{ display: tooltip.display, pointerEvents: 'none' }}>\n                <text fill=\"black\" fontSize=\"12\" fontWeight='bold' textAnchor=\"left\" stroke='white' strokeWidth={0.2}>\n                    {tooltip.content.map((line, index) => (\n                        <tspan x=\"0\" dy={index === 0 ? 0 : 15} key={index}>\n                            {line}\n                        </tspan>\n                    ))}\n                </text>\n            </g>\n        </g>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}