{"ast":null,"code":"import React from'react';import{hexbin}from'd3-hexbin';import{geoNaturalEarth1}from'd3';import{Marks}from'./Marks';import{Markscity}from'./Markscity';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Hexbinmap=_ref=>{let{data,worldAtlas,yValueField}=_ref;const svgWidth=900;const svgHeight=750;const projection=geoNaturalEarth1().center([10.537,52.210]).scale(160000).translate([svgWidth/2,svgHeight/2]);const hexbinGenerator=hexbin().extent([[0,0],[svgWidth,svgHeight]]).radius(5);// Adjust hexagon size as needed\nconst projectedData=data.map(d=>{const coords=projection(d.coords);return{...d,x:coords[0],y:coords[1],HRV:d[yValueField]};// Use the selected Y field\n});const bins=hexbinGenerator(projectedData.map(d=>[d.x,d.y]));return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"svg\",{width:svgWidth,height:svgHeight,children:[/*#__PURE__*/_jsx(Marks,{bins:bins,data:projectedData,yValueField:yValueField}),/*#__PURE__*/_jsx(Markscity,{data:projectedData,projection:projection})]})});};","map":{"version":3,"names":["React","hexbin","geoNaturalEarth1","Marks","Markscity","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Hexbinmap","_ref","data","worldAtlas","yValueField","svgWidth","svgHeight","projection","center","scale","translate","hexbinGenerator","extent","radius","projectedData","map","d","coords","x","y","HRV","bins","children","width","height"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/index.js"],"sourcesContent":["import React from 'react';\nimport { hexbin } from 'd3-hexbin'; \nimport { geoNaturalEarth1 } from 'd3'; \nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\n\nexport const Hexbinmap = ({ data, worldAtlas, yValueField }) => {\n    const svgWidth = 900;\n    const svgHeight = 750;\n\n    const projection = geoNaturalEarth1()\n        .center([10.537, 52.210])\n        .scale(160000)\n        .translate([svgWidth / 2, svgHeight / 2]);\n\n    const hexbinGenerator = hexbin()\n        .extent([[0, 0], [svgWidth, svgHeight]])\n        .radius(5); // Adjust hexagon size as needed\n\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords); \n        return { ...d, x: coords[0], y: coords[1], HRV: d[yValueField] }; // Use the selected Y field\n    });\n\n    const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n\n    return (\n        <>\n            <svg width={svgWidth} height={svgHeight}>\n                <Marks bins={bins} data={projectedData} yValueField={yValueField} /> \n                <Markscity data={projectedData} projection={projection} /> \n            </svg>\n        </>\n    );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,WAAW,CAClC,OAASC,gBAAgB,KAAQ,IAAI,CACrC,OAASC,KAAK,KAAQ,SAAS,CAC/B,OAASC,SAAS,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAExC,MAAO,MAAM,CAAAC,SAAS,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,IAAI,CAAEC,UAAU,CAAEC,WAAY,CAAC,CAAAH,IAAA,CACvD,KAAM,CAAAI,QAAQ,CAAG,GAAG,CACpB,KAAM,CAAAC,SAAS,CAAG,GAAG,CAErB,KAAM,CAAAC,UAAU,CAAGhB,gBAAgB,CAAC,CAAC,CAChCiB,MAAM,CAAC,CAAC,MAAM,CAAE,MAAM,CAAC,CAAC,CACxBC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAACL,QAAQ,CAAG,CAAC,CAAEC,SAAS,CAAG,CAAC,CAAC,CAAC,CAE7C,KAAM,CAAAK,eAAe,CAAGrB,MAAM,CAAC,CAAC,CAC3BsB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAACP,QAAQ,CAAEC,SAAS,CAAC,CAAC,CAAC,CACvCO,MAAM,CAAC,CAAC,CAAC,CAAE;AAEhB,KAAM,CAAAC,aAAa,CAAGZ,IAAI,CAACa,GAAG,CAACC,CAAC,EAAI,CAChC,KAAM,CAAAC,MAAM,CAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC,CACnC,MAAO,CAAE,GAAGD,CAAC,CAAEE,CAAC,CAAED,MAAM,CAAC,CAAC,CAAC,CAAEE,CAAC,CAAEF,MAAM,CAAC,CAAC,CAAC,CAAEG,GAAG,CAAEJ,CAAC,CAACZ,WAAW,CAAE,CAAC,CAAE;AACtE,CAAC,CAAC,CAEF,KAAM,CAAAiB,IAAI,CAAGV,eAAe,CAACG,aAAa,CAACC,GAAG,CAACC,CAAC,EAAI,CAACA,CAAC,CAACE,CAAC,CAAEF,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC,CAEhE,mBACIxB,IAAA,CAAAI,SAAA,EAAAuB,QAAA,cACIzB,KAAA,QAAK0B,KAAK,CAAElB,QAAS,CAACmB,MAAM,CAAElB,SAAU,CAAAgB,QAAA,eACpC3B,IAAA,CAACH,KAAK,EAAC6B,IAAI,CAAEA,IAAK,CAACnB,IAAI,CAAEY,aAAc,CAACV,WAAW,CAAEA,WAAY,CAAE,CAAC,cACpET,IAAA,CAACF,SAAS,EAACS,IAAI,CAAEY,aAAc,CAACP,UAAU,CAAEA,UAAW,CAAE,CAAC,EACzD,CAAC,CACR,CAAC,CAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}