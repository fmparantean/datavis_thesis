{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { csv } from 'd3';\nexport const useData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv('/datakuu.csv') // Load from public directory\n    .then(rawData => {\n      const processedData = rawData.map(row => {\n        const date = new Date(row.Timestamp);\n        const dayOrder = date.getUTCDay(); // Gets day as number (0 = Sunday)\n\n        return {\n          Timestamp: date,\n          HRV: +row.HRV || 0,\n          coords: row['Location Coordinates'].split(',').map(coord => +coord.trim()).reverse(),\n          // Ensure coords are [longitude, latitude]\n          DayOrder: dayOrder // Add day order to each entry\n        };\n      });\n      setData(processedData);\n    }).catch(error => {\n      console.error(\"Error loading data:\", error);\n    });\n  }, []);\n  return data; // Return processed data\n};\n_s(useData, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"names":["useEffect","useState","csv","useData","_s","data","setData","then","rawData","processedData","map","row","date","Date","Timestamp","dayOrder","getUTCDay","HRV","coords","split","coord","trim","reverse","DayOrder","catch","error","console"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/useData.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useData = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        csv('/datakuu.csv') // Load from public directory\n            .then(rawData => {\n                const processedData = rawData.map(row => {\n                    const date = new Date(row.Timestamp);\n                    const dayOrder = date.getUTCDay(); // Gets day as number (0 = Sunday)\n\n                    return {\n                        Timestamp: date,\n                        HRV: +row.HRV || 0,\n                        coords: row['Location Coordinates']\n                            .split(',')\n                            .map(coord => +coord.trim())\n                            .reverse(), // Ensure coords are [longitude, latitude]\n                        DayOrder: dayOrder // Add day order to each entry\n                    };\n                });\n\n                setData(processedData);\n            })\n            .catch(error => {\n                console.error(\"Error loading data:\", error);\n            });\n    }, []);\n\n    return data; // Return processed data\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,IAAI;AAExB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZE,GAAG,CAAC,cAAc,CAAC,CAAC;IAAA,CACfK,IAAI,CAACC,OAAO,IAAI;MACb,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAG,CAACC,GAAG,IAAI;QACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACG,SAAS,CAAC;QACpC,MAAMC,QAAQ,GAAGH,IAAI,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC;;QAEnC,OAAO;UACHF,SAAS,EAAEF,IAAI;UACfK,GAAG,EAAE,CAACN,GAAG,CAACM,GAAG,IAAI,CAAC;UAClBC,MAAM,EAAEP,GAAG,CAAC,sBAAsB,CAAC,CAC9BQ,KAAK,CAAC,GAAG,CAAC,CACVT,GAAG,CAACU,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BC,OAAO,CAAC,CAAC;UAAE;UAChBC,QAAQ,EAAER,QAAQ,CAAC;QACvB,CAAC;MACL,CAAC,CAAC;MAEFT,OAAO,CAACG,aAAa,CAAC;IAC1B,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOpB,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CA7BWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}