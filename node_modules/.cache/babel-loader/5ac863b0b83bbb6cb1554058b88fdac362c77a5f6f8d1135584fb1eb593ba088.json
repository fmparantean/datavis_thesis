{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\";\nimport React from 'react';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BubbleMap = ({\n  data,\n  worldAtlas\n}) => {\n  const projection = geoNaturalEarth1().center([10.537004, 52.210297]) // Center based on your data area\n  .scale(150000) // Adjust value to fit your data correctly\n  .translate([450, 375]); // Center SVG\n\n  const hexbinGenerator = hexbin().size([900, 750]) // Match the dimensions of the SVG\n  .radius(30); // Set a larger radius for better visibility\n\n  // Validate the data and prepare for processing\n  const projectedData = data.map(d => {\n    const coords = projection(d.coords);\n    console.log(\"Projected Coords:\", coords, \"HRV:\", d.HRV); // Ensure correct projection\n    return {\n      ...d,\n      coords\n    };\n  });\n\n  // Generate hex bins\n  const bins = hexbinGenerator(projectedData);\n  console.log(\"Hex Bin Data:\", bins); // Log the generated bins\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Marks, {\n      bins: bins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Markscity, {\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","Marks","Markscity","hexbin","geoNaturalEarth1","jsxDEV","_jsxDEV","Fragment","_Fragment","BubbleMap","data","worldAtlas","projection","center","scale","translate","hexbinGenerator","size","radius","projectedData","map","d","coords","console","log","HRV","bins","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import React from 'react';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\n\nexport const BubbleMap = ({ data, worldAtlas }) => {\n    const projection = geoNaturalEarth1()\n        .center([10.537004, 52.210297]) // Center based on your data area\n        .scale(150000) // Adjust value to fit your data correctly\n        .translate([450, 375]); // Center SVG\n\n    const hexbinGenerator = hexbin()\n        .size([900, 750]) // Match the dimensions of the SVG\n        .radius(30); // Set a larger radius for better visibility\n\n    // Validate the data and prepare for processing\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords);\n        console.log(\"Projected Coords:\", coords, \"HRV:\", d.HRV); // Ensure correct projection\n        return { ...d, coords };\n    });\n\n    // Generate hex bins\n    const bins = hexbinGenerator(projectedData);\n    console.log(\"Hex Bin Data:\", bins); // Log the generated bins\n\n    return (\n        <>\n            <Marks bins={bins} />\n            <Markscity worldAtlas={worldAtlas} />\n        </>\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,gBAAgB,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAC/C,MAAMC,UAAU,GAAGR,gBAAgB,CAAC,CAAC,CAChCS,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EAAA,CAC/BC,KAAK,CAAC,MAAM,CAAC,CAAC;EAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE5B,MAAMC,eAAe,GAAGb,MAAM,CAAC,CAAC,CAC3Bc,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAAA,CACjBC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEjB;EACA,MAAMC,aAAa,GAAGT,IAAI,CAACU,GAAG,CAACC,CAAC,IAAI;IAChC,MAAMC,MAAM,GAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC;IACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,MAAM,EAAE,MAAM,EAAED,CAAC,CAACI,GAAG,CAAC,CAAC,CAAC;IACzD,OAAO;MAAE,GAAGJ,CAAC;MAAEC;IAAO,CAAC;EAC3B,CAAC,CAAC;;EAEF;EACA,MAAMI,IAAI,GAAGV,eAAe,CAACG,aAAa,CAAC;EAC3CI,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,IAAI,CAAC,CAAC,CAAC;;EAEpC,oBACIpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA,CAACL,KAAK;MAACyB,IAAI,EAAEA;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBzB,OAAA,CAACJ,SAAS;MAACS,UAAU,EAAEA;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvC,CAAC;AAEX,CAAC;AAACC,EAAA,GA3BWvB,SAAS;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}