{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/index.js\",\n  _s = $RefreshSig$();\nimport { scaleLinear, scaleBand, max, brushX, select } from 'd3';\nimport { useRef, useEffect } from 'react';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 20,\n  right: 30,\n  bottom: 50,\n  left: 90\n};\nexport const DateHistogram = ({\n  data,\n  width,\n  height,\n  setBrushExtent,\n  xValue\n}) => {\n  _s();\n  const innerHeight = height - margin.top - margin.bottom;\n  const innerWidth = width - margin.left - margin.right;\n  const xScale = scaleBand().domain([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]).range([0, innerWidth]).padding(0.2); // Adjust padding as necessary\n\n  const yValue = d => d.HRV; // Use HRV for y values\n  const yScale = scaleLinear().domain([-10, max(data, yValue) || 100]) // Ensure max returns a number\n  .range([innerHeight, 0]).nice();\n  const brushRef = useRef();\n  useEffect(() => {\n    const brush = brushX().extent([[0, 0], [innerWidth, innerHeight]]);\n    brush(select(brushRef.current));\n    brush.on('brush end', event => {\n      const selection = event.selection;\n      if (!selection) return;\n\n      // Get the selected domains based on the brush selection\n      const selectedDays = xScale.domain().filter(day => {\n        const dayPosition = xScale(day);\n        return dayPosition >= selection[0] && dayPosition <= selection[1];\n      });\n\n      // Update the brush extent\n      setBrushExtent(selectedDays);\n    });\n  }, [innerWidth, innerHeight, setBrushExtent]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      width: width,\n      height: height,\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${margin.left},${margin.top})`,\n      children: [/*#__PURE__*/_jsxDEV(AxisBottom, {\n        xScale: xScale,\n        innerHeight: innerHeight + 5,\n        tickFormat: d => d\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AxisLeft, {\n        yScale: yScale,\n        innerWidth: innerWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Marks, {\n        data: data,\n        xScale: xScale,\n        yScale: yScale,\n        xValue: d => d.DayOrder // Use DayOrder to position circles\n        ,\n        yValue: yValue,\n        circleRadius: 2.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        ref: brushRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"axis-label\",\n        textAnchor: \"middle\",\n        transform: `translate(${innerWidth / 2}, ${innerHeight + 35})`,\n        children: \"Days of the Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"axis-label\",\n        textAnchor: \"middle\",\n        transform: `translate(-25, ${innerHeight / 2}) rotate(-90)`,\n        children: \"HRV Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(DateHistogram, \"ufAAn12OGFkKLLa0dZKcGlfi/hc=\");\n_c = DateHistogram;\nvar _c;\n$RefreshReg$(_c, \"DateHistogram\");","map":{"version":3,"names":["scaleLinear","scaleBand","max","brushX","select","useRef","useEffect","AxisBottom","AxisLeft","Marks","jsxDEV","_jsxDEV","Fragment","_Fragment","margin","top","right","bottom","left","DateHistogram","data","width","height","setBrushExtent","xValue","_s","innerHeight","innerWidth","xScale","domain","range","padding","yValue","d","HRV","yScale","nice","brushRef","brush","extent","current","on","event","selection","selectedDays","filter","day","dayPosition","children","fill","fileName","_jsxFileName","lineNumber","columnNumber","transform","tickFormat","DayOrder","circleRadius","ref","className","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/index.js"],"sourcesContent":["import {\n    scaleLinear,\n    scaleBand,\n    max,\n    brushX,\n    select,\n  } from 'd3';\n  import { useRef, useEffect } from 'react';\n  import { AxisBottom } from './AxisBottom';\n  import { AxisLeft } from './AxisLeft';\n  import { Marks } from './Marks';\n  \n  const margin = { top: 20, right: 30, bottom: 50, left: 90 };\n  \n  export const DateHistogram = ({\n    data,\n    width,\n    height,\n    setBrushExtent,\n    xValue\n  }) => {\n    const innerHeight = height - margin.top - margin.bottom;\n    const innerWidth = width - margin.left - margin.right;\n  \n    const xScale = scaleBand()\n        .domain([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"])\n        .range([0, innerWidth])\n        .padding(0.2); // Adjust padding as necessary\n  \n    const yValue = d => d.HRV; // Use HRV for y values\n    const yScale = scaleLinear()\n        .domain([-10, max(data, yValue) || 100]) // Ensure max returns a number\n        .range([innerHeight, 0])\n        .nice();\n  \n    const brushRef = useRef();\n  \n    useEffect(() => {\n        const brush = brushX().extent([[0, 0], [innerWidth, innerHeight]]);\n        brush(select(brushRef.current));\n  \n        brush.on('brush end', (event) => {\n            const selection = event.selection;\n            if (!selection) return;\n  \n            // Get the selected domains based on the brush selection\n            const selectedDays = xScale.domain().filter(day => {\n                const dayPosition = xScale(day);\n                return dayPosition >= selection[0] && dayPosition <= selection[1];\n            });\n  \n            // Update the brush extent\n            setBrushExtent(selectedDays); \n        });\n    }, [innerWidth, innerHeight, setBrushExtent]);\n  \n    return (\n        <>\n            <rect width={width} height={height} fill=\"white\" />\n            <g transform={`translate(${margin.left},${margin.top})`}>\n                <AxisBottom\n                    xScale={xScale}\n                    innerHeight={innerHeight + 5}\n                    tickFormat={d => d}\n                />\n                <AxisLeft\n                    yScale={yScale}\n                    innerWidth={innerWidth}\n                />\n                <Marks\n                    data={data}\n                    xScale={xScale}\n                    yScale={yScale}\n                    xValue={d => d.DayOrder} // Use DayOrder to position circles\n                    yValue={yValue}\n                    circleRadius={2.5}\n                />\n                <g ref={brushRef} />\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(${innerWidth / 2}, ${innerHeight + 35})`}\n                >\n                    Days of the Week\n                </text>\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(-25, ${innerHeight / 2}) rotate(-90)`}\n                >\n                    HRV Score\n                </text>\n            </g>\n        </>\n    );\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}