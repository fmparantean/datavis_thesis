{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/index.js\",\n  _s = $RefreshSig$();\n// MapWithCircles.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useData } from './useData'; // Your data hook\nimport { scaleSqrt } from 'd3';\n\n// Custom marker icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new Icon({\n  iconUrl: '/icons8-select-24.png',\n  // Adjust icon URL as needed\n  iconSize: [20, 20]\n});\nexport function MapWithCircles() {\n  _s();\n  const data = useData(); // Load your data\n\n  // Center over Braunschweig, Germany\n  const position = [52.2665, 10.5268];\n\n  // Scale for circle size based on HRV values\n  const sizeScale = scaleSqrt().domain([0, Math.max(...data.map(d => d.HRV))]).range([5, 20]); // Adjust min and max sizes\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"map-component\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: position,\n        zoom: 12,\n        scrollWheelZoom: true,\n        style: {\n          height: '600px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), data.map((d, index) => {\n          const [longitude, latitude] = d.coords; // Ensure coords are [longitude, latitude]\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [latitude, longitude],\n            icon: customIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"HRV: \", d.HRV]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this);\n        }), data.map((d, index) => {\n          const [longitude, latitude] = d.coords;\n          const radius = sizeScale(d.HRV); // Get radius based on HRV\n          return /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: longitude,\n            cy: latitude,\n            r: radius,\n            fill: \"steelblue\",\n            opacity: 0.6\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MapWithCircles, \"YnzXR8fPhsYQOtPUC4zYRXREqzc=\", false, function () {\n  return [useData];\n});\n_c = MapWithCircles;\nvar _c;\n$RefreshReg$(_c, \"MapWithCircles\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","Icon","useData","scaleSqrt","jsxDEV","_jsxDEV","customIcon","iconUrl","iconSize","MapWithCircles","_s","data","position","sizeScale","domain","Math","max","map","d","HRV","range","className","children","center","zoom","scrollWheelZoom","style","height","width","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","index","longitude","latitude","coords","icon","radius","cx","cy","r","fill","opacity","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/index.js"],"sourcesContent":["// MapWithCircles.js\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useData } from './useData'; // Your data hook\nimport { scaleSqrt } from 'd3';\n\n// Custom marker icon\nconst customIcon = new Icon({\n    iconUrl: '/icons8-select-24.png', // Adjust icon URL as needed\n    iconSize: [20, 20],\n});\n\nexport function MapWithCircles() {\n    const data = useData(); // Load your data\n\n    // Center over Braunschweig, Germany\n    const position = [52.2665, 10.5268];\n\n    // Scale for circle size based on HRV values\n    const sizeScale = scaleSqrt()\n        .domain([0, Math.max(...data.map(d => d.HRV))])\n        .range([5, 20]); // Adjust min and max sizes\n\n    return (\n        <section className='map-component'>\n            <div className='map'>\n                <MapContainer center={position} zoom={12} scrollWheelZoom={true} style={{ height: '600px', width: '100%' }}>\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n\n                    {/* Add data circles as markers */}\n                    {data.map((d, index) => {\n                        const [longitude, latitude] = d.coords; // Ensure coords are [longitude, latitude]\n                        return (\n                            <Marker key={index} position={[latitude, longitude]} icon={customIcon}>\n                                <Popup>\n                                    HRV: {d.HRV}\n                                </Popup>\n                            </Marker>\n                        );\n                    })}\n\n                    {/* Optionally, add any custom circles with size based on HRV */}\n                    {data.map((d, index) => {\n                        const [longitude, latitude] = d.coords;\n                        const radius = sizeScale(d.HRV); // Get radius based on HRV\n                        return (\n                            <circle\n                                key={index}\n                                cx={longitude}\n                                cy={latitude}\n                                r={radius}\n                                fill=\"steelblue\"\n                                opacity={0.6}\n                            />\n                        );\n                    })}\n\n                </MapContainer>\n            </div>\n        </section>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}