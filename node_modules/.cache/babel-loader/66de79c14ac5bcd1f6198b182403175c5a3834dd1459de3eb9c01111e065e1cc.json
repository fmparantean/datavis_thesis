{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 5/src/HexbinMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins,\n  data,\n  yValueField\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    display: 'none'\n  });\n  const hrvValues = data.map(d => d[yValueField]).filter(h => h != null);\n  const colorScale = d3.scaleLinear().domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]).range(['blue', 'lightblue', 'darkblue']);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const binData = data.filter(d => d.x >= bin.x - 15 && d.x <= bin.x + 15 && d.y >= bin.y - 15 && d.y <= bin.y + 15);\n      const averageHRV = binData.length > 0 ? binData.reduce((sum, d) => sum + d[yValueField], 0) / binData.length : 0;\n      const fillColor = colorScale(averageHRV);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          setTooltip({\n            display: 'block',\n            x: e.clientX,\n            y: e.clientY,\n            content: `Count: ${bin.length}, Avg ${yValueField}: ${averageHRV.toFixed(2)}`\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3.hexbin().hexagon(15) // Ensure consistent hexagon size\n          ,\n          transform: `translate(${bin.x}, ${bin.y})`,\n          fill: fillColor,\n          stroke: \"black\",\n          strokeWidth: 1,\n          opacity: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"cFcvUXz/VuJYq8f1l2ttuLcSJIo=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","d3","jsxDEV","_jsxDEV","Marks","bins","data","yValueField","_s","tooltip","setTooltip","display","hrvValues","map","d","filter","h","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","x","y","averageHRV","length","reduce","sum","fillColor","onMouseEnter","e","clientX","clientY","content","toFixed","onMouseLeave","hexbin","hexagon","transform","fill","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/HexbinMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport * as d3 from 'd3'; \n\nexport const Marks = ({ bins, data, yValueField }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none' });\n\n    const hrvValues = data.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['blue', 'lightblue', 'darkblue']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - 15 && d.x <= bin.x + 15 && \n                    d.y >= bin.y - 15 && d.y <= bin.y + 15    \n                );\n\n                const averageHRV = binData.length > 0 \n                    ? binData.reduce((sum, d) => sum + d[yValueField], 0) / binData.length \n                    : 0;\n\n                const fillColor = colorScale(averageHRV);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           setTooltip({\n                               display: 'block',\n                               x: e.clientX,\n                               y: e.clientY,\n                               content: `Count: ${bin.length}, Avg ${yValueField}: ${averageHRV.toFixed(2)}`, \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                        <path\n                            d={d3.hexbin().hexagon(15)} // Ensure consistent hexagon size\n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                            opacity={1} \n                        />\n                    </g>\n                );\n            })}\n            <text \n                x={tooltip.x} \n                y={tooltip.y} \n                style={{ display: tooltip.display, pointerEvents: 'none' }} \n                fill=\"black\" \n                fontSize=\"12\" \n                textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}