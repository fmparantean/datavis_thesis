{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/Marks.js\";\nimport React from 'react';\nimport * as d3 from 'd3'; // Import D3 for color scaling\nimport { hexbin as d3Hexbin } from 'd3-hexbin'; // Correctly import hexbin functionality\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins,\n  data,\n  yValueField\n}) => {\n  const hrvValues = data.map(d => d[yValueField]).filter(v => v != null);\n  const colorScale = d3.scaleLinear().domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]).range(['yellow', 'orange', 'red']);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const binData = data.filter(d => d.x >= bin.x - 15 && d.x <= bin.x + 15 && d.y >= bin.y - 15 && d.y <= bin.y + 15);\n      const averageValue = binData.length > 0 ? binData.reduce((sum, d) => sum + d[yValueField], 0) / binData.length : 0;\n      const fillColor = colorScale(averageValue);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          setTooltip({\n            display: 'block',\n            x: e.clientX,\n            y: e.clientY,\n            content: `Count: ${bin.length}, Avg ${yValueField}: ${averageValue.toFixed(2)}`\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3Hexbin().hexagon(15) // Hexagon size can be adjusted here\n          ,\n          transform: `translate(${bin.x}, ${bin.y})`,\n          fill: fillColor,\n          stroke: \"black\",\n          strokeWidth: 1,\n          opacity: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","d3","hexbin","d3Hexbin","jsxDEV","_jsxDEV","Marks","bins","data","yValueField","hrvValues","map","d","filter","v","colorScale","scaleLinear","domain","min","mean","max","range","className","children","bin","i","binData","x","y","averageValue","length","reduce","sum","fillColor","onMouseEnter","e","setTooltip","display","clientX","clientY","content","toFixed","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","tooltip","style","pointerEvents","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/Marks.js"],"sourcesContent":["import React from 'react';\nimport * as d3 from 'd3'; // Import D3 for color scaling\nimport { hexbin as d3Hexbin } from 'd3-hexbin'; // Correctly import hexbin functionality\n\nexport const Marks = ({ bins, data, yValueField }) => {\n    const hrvValues = data.map(d => d[yValueField]).filter(v => v != null);\n    const colorScale = d3.scaleLinear()\n        .domain([d3.min(hrvValues), d3.mean(hrvValues), d3.max(hrvValues)]) \n        .range(['yellow', 'orange', 'red']); \n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const binData = data.filter(d => \n                    d.x >= bin.x - 15 && d.x <= bin.x + 15 &&\n                    d.y >= bin.y - 15 && d.y <= bin.y + 15\n                );\n\n                const averageValue = binData.length > 0 \n                    ? binData.reduce((sum, d) => sum + d[yValueField], 0) / binData.length \n                    : 0;\n\n                const fillColor = colorScale(averageValue);\n\n                return (\n                    <g key={i}\n                       onMouseEnter={(e) => {\n                           setTooltip({\n                               display: 'block',\n                               x: e.clientX,\n                               y: e.clientY,\n                               content: `Count: ${bin.length}, Avg ${yValueField}: ${averageValue.toFixed(2)}`, \n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                        <path \n                            d={d3Hexbin().hexagon(15)} // Hexagon size can be adjusted here\n                            transform={`translate(${bin.x}, ${bin.y})`} \n                            fill={fillColor} \n                            stroke=\"black\" \n                            strokeWidth={1} \n                            opacity={1} \n                        />\n                    </g>\n                );\n            })}\n            <text \n                x={tooltip.x} \n                y={tooltip.y} \n                style={{ display: tooltip.display, pointerEvents: 'none' }} \n                fill=\"black\" \n                fontSize=\"12\" \n                textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}