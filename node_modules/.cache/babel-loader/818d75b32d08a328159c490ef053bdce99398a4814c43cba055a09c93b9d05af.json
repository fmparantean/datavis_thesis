{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    display: 'none'\n  });\n\n  // Calculate the maximum length for the color scale domain\n  const maxLength = d3.max(bins, d => d.length) || 1;\n\n  // Define the color scale\n  const colorScale = d3.scaleLinear().domain([0, maxLength]) // From 0 to max bin length\n  .range([\"lightblue\", \"darkblue\"]); // Color range based on bin count\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      onMouseEnter: e => {\n        setTooltip({\n          display: 'block',\n          x: e.clientX,\n          y: e.clientY,\n          content: `Count: ${bin.length}`\n        });\n      },\n      onMouseLeave: () => {\n        setTooltip({\n          display: 'none'\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        d: d3Hexbin().hexagon(30) // Create hexagon shape\n        ,\n        transform: `translate(${bin.x}, ${bin.y})` // Position using centroid\n        ,\n        fill: colorScale(bin.length) // Apply color from the scale\n        ,\n        stroke: \"red\" // Set stroke color\n        ,\n        strokeWidth: 1 // Stroke width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"cFcvUXz/VuJYq8f1l2ttuLcSJIo=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","hexbin","d3Hexbin","d3","jsxDEV","_jsxDEV","Marks","bins","_s","tooltip","setTooltip","display","maxLength","max","d","length","colorScale","scaleLinear","domain","range","className","children","map","bin","i","onMouseEnter","e","x","clientX","y","clientY","content","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\n\nexport const Marks = ({ bins }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none' });\n\n    // Calculate the maximum length for the color scale domain\n    const maxLength = d3.max(bins, d => d.length) || 1;\n\n    // Define the color scale\n    const colorScale = d3.scaleLinear()\n        .domain([0, maxLength]) // From 0 to max bin length\n        .range([\"lightblue\", \"darkblue\"]); // Color range based on bin count\n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => (\n                <g key={i} \n                   onMouseEnter={(e) => {\n                       setTooltip({\n                           display: 'block',\n                           x: e.clientX,\n                           y: e.clientY,\n                           content: `Count: ${bin.length}`,\n                       });\n                   }}\n                   onMouseLeave={() => {\n                       setTooltip({ display: 'none' });\n                   }}>\n                    <path\n                        d={d3Hexbin().hexagon(30)} // Create hexagon shape\n                        transform={`translate(${bin.x}, ${bin.y})`} // Position using centroid\n                        fill={colorScale(bin.length)} // Apply color from the scale\n                        stroke=\"red\" // Set stroke color\n                        strokeWidth={1} // Stroke width\n                    />\n                </g>\n            ))}\n            {/* Tooltip */}\n            <text \n                x={tooltip.x} \n                y={tooltip.y} \n                style={{ display: tooltip.display, pointerEvents: 'none' }} \n                fill=\"black\" \n                fontSize=\"12\" \n                textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,IAAIC,QAAQ,QAAQ,WAAW;AAC9C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE;EAAO,CAAC,CAAC;;EAE3D;EACA,MAAMC,SAAS,GAAGT,EAAE,CAACU,GAAG,CAACN,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMC,UAAU,GAAGb,EAAE,CAACc,WAAW,CAAC,CAAC,CAC9BC,MAAM,CAAC,CAAC,CAAC,EAAEN,SAAS,CAAC,CAAC,CAAC;EAAA,CACvBO,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;;EAEvC,oBACId,OAAA;IAAGe,SAAS,EAAC,OAAO;IAAAC,QAAA,GACfd,IAAI,CAACe,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACbnB,OAAA;MACGoB,YAAY,EAAGC,CAAC,IAAK;QACjBhB,UAAU,CAAC;UACPC,OAAO,EAAE,OAAO;UAChBgB,CAAC,EAAED,CAAC,CAACE,OAAO;UACZC,CAAC,EAAEH,CAAC,CAACI,OAAO;UACZC,OAAO,EAAE,UAAUR,GAAG,CAACR,MAAM;QACjC,CAAC,CAAC;MACN,CAAE;MACFiB,YAAY,EAAEA,CAAA,KAAM;QAChBtB,UAAU,CAAC;UAAEC,OAAO,EAAE;QAAO,CAAC,CAAC;MACnC,CAAE;MAAAU,QAAA,eACDhB,OAAA;QACIS,CAAC,EAAEZ,QAAQ,CAAC,CAAC,CAAC+B,OAAO,CAAC,EAAE,CAAE,CAAC;QAAA;QAC3BC,SAAS,EAAE,aAAaX,GAAG,CAACI,CAAC,KAAKJ,GAAG,CAACM,CAAC,GAAI,CAAC;QAAA;QAC5CM,IAAI,EAAEnB,UAAU,CAACO,GAAG,CAACR,MAAM,CAAE,CAAC;QAAA;QAC9BqB,MAAM,EAAC,KAAK,CAAC;QAAA;QACbC,WAAW,EAAE,CAAE,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC,GAlBEjB,CAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBN,CACN,CAAC,eAEFpC,OAAA;MACIsB,CAAC,EAAElB,OAAO,CAACkB,CAAE;MACbE,CAAC,EAAEpB,OAAO,CAACoB,CAAE;MACba,KAAK,EAAE;QAAE/B,OAAO,EAAEF,OAAO,CAACE,OAAO;QAAEgC,aAAa,EAAE;MAAO,CAAE;MAC3DR,IAAI,EAAC,OAAO;MACZS,QAAQ,EAAC,IAAI;MACbC,UAAU,EAAC,QAAQ;MAAAxB,QAAA,EAClBZ,OAAO,CAACsB;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEZ,CAAC;AAACjC,EAAA,CA/CWF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}