{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\",\n  _s = $RefreshSig$();\nimport { useMap } from 'react-leaflet';\nimport { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdatingHexBin = ({\n  data\n}) => {\n  _s();\n  const map = useMap();\n  const [tooltip, setTooltip] = useState({\n    display: 'none',\n    content: '',\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const svg = d3.select(map.getPanes().overlayPane).append(\"svg\");\n    const hexbinGenerator = hexbin().radius(30).extent([[0, 0], [800, 600]]); // Match to size of your displaying area\n\n    const drawHexagons = () => {\n      const bounds = map.getBounds();\n      const topLeft = map.latLngToContainerPoint(bounds.getNorthWest());\n      const bottomRight = map.latLngToContainerPoint(bounds.getSouthEast());\n      const width = bottomRight.x - topLeft.x;\n      const height = topLeft.y - bottomRight.y;\n      if (width <= 0 || height <= 0) return;\n      svg.attr(\"width\", width).attr(\"height\", height).style(\"left\", `${topLeft.x}px`).style(\"top\", `${topLeft.y}px`);\n      const points = data.features.map(feat => ({\n        lng: feat.geometry.coordinates[0],\n        lat: feat.geometry.coordinates[1],\n        HRV: feat.properties.HRV || 0\n      }));\n      const hexagons = hexbinGenerator(points.map(d => [d.lng, d.lat]));\n      const hexPath = svg.selectAll(\"path\").data(hexagons);\n      hexPath.enter().append(\"path\").attr(\"d\", hexbinGenerator.hexagon()).attr(\"transform\", d => `translate(${d.x},${d.y})`).style(\"fill\", d => {\n        const meanHRV = d3.mean(d.map(f => f.HRV));\n        return meanHRV && !isNaN(meanHRV) ? d3.interpolateRdYlBu(meanHRV / 100) : 'black'; // Normalize and map\n      }).on(\"mouseenter\", (e, d) => {\n        const meanHRV = d3.mean(d.map(f => f.HRV));\n        setTooltip({\n          display: 'block',\n          x: e.clientX,\n          y: e.clientY,\n          content: `Count: ${d.length}, Avg HRV: ${meanHRV ? meanHRV.toFixed(2) : 'N/A'}`\n        });\n      }).on(\"mouseleave\", () => setTooltip({\n        display: 'none',\n        content: '',\n        x: 0,\n        y: 0\n      }));\n      hexPath.attr(\"transform\", d => `translate(${d.x},${d.y})`).style(\"fill\", d => {\n        const meanHRV = d3.mean(d.map(f => f.HRV));\n        return meanHRV && !isNaN(meanHRV) ? d3.interpolateRdYlBu(meanHRV / 100) : 'black';\n      });\n      hexPath.exit().remove();\n    };\n    map.on('moveend', drawHexagons);\n    drawHexagons(); // Initial draw\n\n    return () => {\n      svg.remove();\n      map.off('moveend', drawHexagons);\n    };\n  }, [data, map]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(UpdatingHexBin, \"x27l9np2GAHeQfYVqQRNbkAow0s=\", false, function () {\n  return [useMap];\n});\n_c = UpdatingHexBin;\nexport default UpdatingHexBin;\nvar _c;\n$RefreshReg$(_c, \"UpdatingHexBin\");","map":{"version":3,"names":["useMap","useEffect","useState","d3","hexbin","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdatingHexBin","data","_s","map","tooltip","setTooltip","display","content","x","y","svg","select","getPanes","overlayPane","append","hexbinGenerator","radius","extent","drawHexagons","bounds","getBounds","topLeft","latLngToContainerPoint","getNorthWest","bottomRight","getSouthEast","width","height","attr","style","points","features","feat","lng","geometry","coordinates","lat","HRV","properties","hexagons","d","hexPath","selectAll","enter","hexagon","meanHRV","mean","f","isNaN","interpolateRdYlBu","on","e","clientX","clientY","length","toFixed","exit","remove","off","children","pointerEvents","fill","fontSize","textAnchor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import { useMap } from 'react-leaflet';\nimport { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\n\nconst UpdatingHexBin = ({ data }) => {\n    const map = useMap();\n    const [tooltip, setTooltip] = useState({ display: 'none', content: '', x: 0, y: 0 });\n\n    useEffect(() => {\n        const svg = d3.select(map.getPanes().overlayPane).append(\"svg\");\n\n        const hexbinGenerator = hexbin()\n            .radius(30)\n            .extent([[0, 0], [800, 600]]); // Match to size of your displaying area\n\n        const drawHexagons = () => {\n            const bounds = map.getBounds();\n            const topLeft = map.latLngToContainerPoint(bounds.getNorthWest());\n            const bottomRight = map.latLngToContainerPoint(bounds.getSouthEast());\n\n            const width = bottomRight.x - topLeft.x;\n            const height = topLeft.y - bottomRight.y;\n\n            if (width <= 0 || height <= 0) return;\n\n            svg.attr(\"width\", width)\n               .attr(\"height\", height)\n               .style(\"left\", `${topLeft.x}px`)\n               .style(\"top\", `${topLeft.y}px`);\n\n            const points = data.features.map(feat => ({\n                lng: feat.geometry.coordinates[0],\n                lat: feat.geometry.coordinates[1],\n                HRV: feat.properties.HRV || 0,\n            }));\n\n            const hexagons = hexbinGenerator(points.map(d => [d.lng, d.lat]));\n\n            const hexPath = svg.selectAll(\"path\").data(hexagons);\n\n            hexPath.enter().append(\"path\")\n                .attr(\"d\", hexbinGenerator.hexagon())\n                .attr(\"transform\", d => `translate(${d.x},${d.y})`)\n                .style(\"fill\", d => {\n                    const meanHRV = d3.mean(d.map(f => f.HRV));\n                    return (meanHRV && !isNaN(meanHRV)) ? d3.interpolateRdYlBu(meanHRV / 100) : 'black'; // Normalize and map\n                })\n                .on(\"mouseenter\", (e, d) => {\n                    const meanHRV = d3.mean(d.map(f => f.HRV));\n                    setTooltip({\n                        display: 'block',\n                        x: e.clientX,\n                        y: e.clientY,\n                        content: `Count: ${d.length}, Avg HRV: ${meanHRV ? meanHRV.toFixed(2) : 'N/A'}`,\n                    });\n                })\n                .on(\"mouseleave\", () => setTooltip({ display: 'none', content: '', x: 0, y: 0 }));\n\n            hexPath.attr(\"transform\", d => `translate(${d.x},${d.y})`)\n                .style(\"fill\", d => {\n                    const meanHRV = d3.mean(d.map(f => f.HRV));\n                    return (meanHRV && !isNaN(meanHRV)) ? d3.interpolateRdYlBu(meanHRV / 100) : 'black';\n                });\n\n            hexPath.exit().remove();\n        };\n\n        map.on('moveend', drawHexagons);\n        drawHexagons(); // Initial draw\n\n        return () => {\n            svg.remove();\n            map.off('moveend', drawHexagons);\n        };\n    }, [data, map]);\n\n    return (\n        <>\n            <text\n                x={tooltip.x}\n                y={tooltip.y}\n                style={{ display: tooltip.display, pointerEvents: 'none' }}\n                fill=\"black\"\n                fontSize=\"12\"\n                textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </>\n    );\n};\n\nexport default UpdatingHexBin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}