{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas'; // Not needed anymore\nimport './App.css';\nimport { useData } from './useData';\nimport BubbleMap from './BubbleMap/index.js'; // Use the new BubbleMap\nimport DateHistogram from './DateHistogram/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // Use Timestamp for x-axis\n\nconst App = () => {\n  _s();\n  const data = useData(); // Load CSV data\n\n  const [brushExtent, setBrushExtent] = useState(null);\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this); // Show loading if no data\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BubbleMap, {\n      data: filteredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data // Pass original data for the histogram\n        ,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue // Pass xValue function\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"KbjHygebxu2KAJG0RyuWHFaH+nw=\", false, function () {\n  return [useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","Timestamp","App","_s","data","brushExtent","setBrushExtent","length","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas'; // Not needed anymore\nimport './App.css';\nimport { useData } from './useData';\nimport BubbleMap from './BubbleMap/index.js'; // Use the new BubbleMap\nimport DateHistogram from './DateHistogram/index.js';\n\nconst width = 960;\nconst height = 700;\nconst dateHistogramSize = 0.3;\nconst xValue = d => d.Timestamp; // Use Timestamp for x-axis\n\nconst App = () => {\n    const data = useData(); // Load CSV data\n\n    const [brushExtent, setBrushExtent] = useState(null);\n\n    if (!data || data.length === 0) {\n        return <pre>Loading...</pre>; // Show loading if no data\n    }\n\n    const filteredData = brushExtent\n        ? data.filter(d => {\n            const date = xValue(d);\n            return date >= brushExtent[0] && date <= brushExtent[1];\n        })\n        : data;\n\n    return (\n        <div>\n            <BubbleMap data={filteredData} /> {/* Render the OpenStreetMap */}\n            <div style={{ marginTop: '20px' }}>\n                <DateHistogram\n                    data={data} // Pass original data for the histogram\n                    width={width}\n                    height={dateHistogramSize * height}\n                    setBrushExtent={setBrushExtent}\n                    xValue={xValue} // Pass xValue function\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AACjD,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,SAAS,MAAM,sBAAsB,CAAC,CAAC;AAC9C,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAClB,MAAMC,iBAAiB,GAAG,GAAG;AAC7B,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAMC,IAAI,GAAGb,OAAO,CAAC,CAAC,CAAC,CAAC;;EAExB,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpD,IAAI,CAACe,IAAI,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOZ,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;EAEA,MAAMC,YAAY,GAAGR,WAAW,GAC1BD,IAAI,CAACU,MAAM,CAACd,CAAC,IAAI;IACf,MAAMe,IAAI,GAAGhB,MAAM,CAACC,CAAC,CAAC;IACtB,OAAOe,IAAI,IAAIV,WAAW,CAAC,CAAC,CAAC,IAAIU,IAAI,IAAIV,WAAW,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,GACAD,IAAI;EAEV,oBACIT,OAAA;IAAAa,QAAA,gBACIb,OAAA,CAACH,SAAS;MAACY,IAAI,EAAES;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAClCjB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAT,QAAA,eAC9Bb,OAAA,CAACF,aAAa;QACVW,IAAI,EAAEA,IAAK,CAAC;QAAA;QACZR,KAAK,EAAEA,KAAM;QACbC,MAAM,EAAEC,iBAAiB,GAAGD,MAAO;QACnCS,cAAc,EAAEA,cAAe;QAC/BP,MAAM,EAAEA,MAAO,CAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACT,EAAA,CA9BID,GAAG;EAAA,QACQX,OAAO;AAAA;AAAA2B,EAAA,GADlBhB,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}