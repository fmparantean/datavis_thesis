{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js\";\nimport { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoNaturalEarth1().center([10.537004, 52.210297]) // Center over Braunschweig, Germany\n.scale(160000) // Adjust scale for zoom level; increase for more detail\n.translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\nexport const Marks = ({\n  data,\n  sizeScale,\n  sizeValue\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"marks\",\n  children: data.map(d => {\n    const [x, y] = projection(d.coords);\n    return /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: x,\n      cy: y,\n      r: sizeScale(sizeValue(d))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["geoNaturalEarth1","geoPath","geoGraticule","jsxDEV","_jsxDEV","projection","center","scale","translate","path","graticule","Marks","data","sizeScale","sizeValue","className","children","map","d","x","y","coords","cx","cy","r","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js"],"sourcesContent":["import { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\n\nconst projection = geoNaturalEarth1()\n  .center([10.537004, 52.210297]) // Center over Braunschweig, Germany\n  .scale(160000) // Adjust scale for zoom level; increase for more detail\n  .translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nexport const Marks = ({\n  \n  data,\n  sizeScale,\n  sizeValue,\n}) => (\n  <g className=\"marks\">\n    {/* <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n    <path className=\"graticules\" d={path(graticule())} /> \n      {land.features.map(feature => (\n      <path className=\"land\" d={path(feature)} />\n    ))}\n    <path className=\"interiors\" d={path(interiors)} />  */}\n\n    {data.map(d => {\n      const [x, y] = projection(d.coords);\n      return <circle             \n                cx={x} \n                cy={y} \n                r={sizeScale(sizeValue(d))}\n                />\n                ;\n    })}\n  </g>\n  \n);"],"mappings":";AAAA,SAASA,gBAAgB,EAAEC,OAAO,EAAEC,YAAY,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,CAAC,CAClCM,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAAA,CAC/BC,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAMC,IAAI,GAAGR,OAAO,CAACI,UAAU,CAAC;AAChC,MAAMK,SAAS,GAAGR,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMS,KAAK,GAAGA,CAAC;EAEpBC,IAAI;EACJC,SAAS;EACTC;AACF,CAAC,kBACCV,OAAA;EAAGW,SAAS,EAAC,OAAO;EAAAC,QAAA,EAQjBJ,IAAI,CAACK,GAAG,CAACC,CAAC,IAAI;IACb,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGf,UAAU,CAACa,CAAC,CAACG,MAAM,CAAC;IACnC,oBAAOjB,OAAA;MACGkB,EAAE,EAAEH,CAAE;MACNI,EAAE,EAAEH,CAAE;MACNI,CAAC,EAAEX,SAAS,CAACC,SAAS,CAACI,CAAC,CAAC;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEd,CAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CAEJ;AAACC,EAAA,GAzBWlB,KAAK;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}