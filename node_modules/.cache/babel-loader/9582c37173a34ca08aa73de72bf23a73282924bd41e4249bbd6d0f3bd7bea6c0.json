{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Welcome from './Welcome';\nimport QGIS from './QGIS';\nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js';\nimport * as d3 from 'd3';\nimport Filters from './Filters';\nimport Instructions from './Instructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  const [participant, setParticipant] = useState(\"All\");\n  const [gender, setGender] = useState(\"Both\");\n  const [modeButton, setModeButton] = useState(\"Both\");\n  const [yValueField, setYValueField] = useState(\"HRV\");\n  const [hexbinSize, setHexbinSize] = useState(5);\n  const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n  const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n  const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n  const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'declaration':\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this);\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(Welcome, {\n          onQGIS: handleGoToQGIS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this);\n      // Pass handler to Welcome\n      case 'qgis':\n        return /*#__PURE__*/_jsxDEV(QGIS, {\n          onBack: handleBackToD3React\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this);\n      // QGIS page\n      case 'mainapp':\n        return renderMainApp();\n      // Render D3 React App\n      case 'final':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-message\",\n          children: [\"Thank you for completing the experiment process!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), \"Best Regards,\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Febryeric M. Parantean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const renderMainApp = () => {\n    if (!worldAtlas || !data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: height / 2,\n          textAnchor: \"middle\",\n          fontSize: \"14\",\n          fill: \"black\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Get unique participants dynamically and sort them\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant))).sort((a, b) => a - b);\n\n    // Filter Data based on selected criteria\n    const filteredData = data.filter(d => {\n      const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n      const genderFilter = gender === \"Both\" || d.Gender === gender;\n      const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n      return participantFilter && genderFilter && modeButtonFilter;\n    });\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0]).range(['yellow', 'orange', 'red']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          participant: participant,\n          setParticipant: setParticipant,\n          gender: gender,\n          setGender: setGender,\n          modeButton: modeButton,\n          setModeButton: setModeButton,\n          yValueField: yValueField,\n          setYValueField: setYValueField,\n          uniqueParticipants: uniqueParticipants,\n          hexbinSize: hexbinSize,\n          setHexbinSize: setHexbinSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bus.png\",\n          alt: \"bus Logo\",\n          style: {\n            width: '100px',\n            height: 'auto',\n            marginTop: '210px',\n            marginLeft: '35px',\n            alignSelf: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: 45,\n          textAnchor: \"middle\",\n          className: \"title\",\n          children: \"Travel Experience with Different Transportation Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n          id: \"map-image\",\n          href: \"datamap.png\",\n          x: 21,\n          y: 72,\n          height: height,\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(0,30)`,\n          children: /*#__PURE__*/_jsxDEV(Hexbinmap, {\n            data: brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : [],\n            worldAtlas: worldAtlas,\n            yValueField: yValueField,\n            hexbinSize: hexbinSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(0, 700)`,\n          children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n            data: filteredData,\n            width: width,\n            height: dateHistogramSize * height,\n            setBrushExtent: setBrushExtent,\n            xValue: d => d.DayOrder,\n            yValueField: yValueField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(820, 550)`,\n          children: /*#__PURE__*/_jsxDEV(ColorLegend, {\n            colorScale: colorScale,\n            yValueField: yValueField,\n            data: filteredData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"8qJs94lX6ZuL3Aeir2xL8vv4a60=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","Instructions","jsxDEV","_jsxDEV","width","height","dateHistogramSize","orderedDays","App","_s","currentPage","setCurrentPage","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","errorMessage","setErrorMessage","handleStartDeclaration","handleGoToQGIS","handleBackToD3React","renderPage","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onQGIS","onBack","renderMainApp","className","children","length","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","src","alt","marginTop","marginLeft","alignSelf","id","href","transform","includes","DayOrder","xValue","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \nimport Instructions from './Instructions'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n    const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n    const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n    const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n    const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n   \n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'welcome':\n                return <Welcome onQGIS={handleGoToQGIS} />; // Pass handler to Welcome\n            case 'qgis':\n                return <QGIS onBack={handleBackToD3React} />; // QGIS page\n            case 'mainapp':\n                return renderMainApp(); // Render D3 React App\n                case 'final':\n                    return (\n                        <div className=\"final-message\">\n                            Thank you for completing the experiment process!\n                            <br />\n                            <br />\n                            Best Regards,\n                            <div>Febryeric M. Parantean</div>\n                        </div>\n                    );\n            default:\n                return <Declaration onStart={handleStartDeclaration} />;\n        }\n    };\n\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        // Get unique participants dynamically and sort them\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        // Filter Data based on selected criteria\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex' }}>\n                <div className=\"filters\">\n                    <Filters \n                        participant={participant} \n                        setParticipant={setParticipant} \n                        gender={gender} \n                        setGender={setGender} \n                        modeButton={modeButton} \n                        setModeButton={setModeButton}\n                        yValueField={yValueField}\n                        setYValueField={setYValueField}\n                        uniqueParticipants={uniqueParticipants} \n                        hexbinSize={hexbinSize}\n                        setHexbinSize={setHexbinSize}\n                    />\n                    <img \n                        src=\"bus.png\" \n                        alt=\"bus Logo\" \n                        style={{ width: '100px', height: 'auto', marginTop: '210px', marginLeft: '35px', alignSelf: 'center' }} \n                    />\n                </div>\n\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={45} textAnchor=\"middle\" className=\"title\">\n                        Travel Experience with Different Transportation Mode\n                    </text>\n                    <image \n                        id='map-image'\n                        href=\"datamap.png\" \n                        x={21}\n                        y={72} \n                        height={height} \n                        width={width} \n                    />\n                    <g transform={`translate(0,30)`}>\n                        <Hexbinmap \n                            data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                            worldAtlas={worldAtlas} \n                            yValueField={yValueField} \n                            hexbinSize={hexbinSize} \n                        />\n                    </g>\n                    <g transform={`translate(0, 700)`}>\n                        <DateHistogram\n                            data={filteredData} \n                            width={width}\n                            height={dateHistogramSize * height}\n                            setBrushExtent={setBrushExtent}\n                            xValue={d => d.DayOrder} \n                            yValueField={yValueField} \n                        />\n                    </g>\n                    <g transform={`translate(820, 550)`}>\n                        <ColorLegend \n                            colorScale={colorScale} \n                            yValueField={yValueField} \n                            data={filteredData}  \n                        /> \n                    </g>\n                </svg>\n\n                <Instructions />\n                \n                \n            </div>\n        );\n    };\n\n    return <div>{renderPage()}</div>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}