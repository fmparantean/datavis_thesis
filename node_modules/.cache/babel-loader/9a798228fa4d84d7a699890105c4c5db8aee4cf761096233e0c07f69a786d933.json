{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Welcome from './Welcome';\nimport QGIS from './QGIS';\nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js';\nimport * as d3 from 'd3';\nimport Filters from './Filters';\nimport Instructions from './Instructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n  const [isChecked, setIsChecked] = useState(false); // Checkbox state for finishing\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  const [participant, setParticipant] = useState(\"All\");\n  const [gender, setGender] = useState(\"Both\");\n  const [modeButton, setModeButton] = useState(\"Both\");\n  const [yValueField, setYValueField] = useState(\"HRV\");\n  const [hexbinSize, setHexbinSize] = useState(5);\n  const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n  const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n  const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n  const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n  const handleFinish = () => {\n    if (!isChecked) {\n      setErrorMessage('Please confirm that you have finished and submitted the QGIS questionnaire.'); // Set error message if not checked\n    } else {\n      setErrorMessage(''); // Clear error message if checked\n      setCurrentPage('final'); // Go to final page\n    }\n  };\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'declaration':\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 24\n        }, this);\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(Welcome, {\n          onQGIS: handleGoToQGIS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this);\n      // Pass handler to Welcome\n      case 'qgis':\n        return /*#__PURE__*/_jsxDEV(QGIS, {\n          onBack: handleBackToD3React\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this);\n      // QGIS page\n      case 'mainapp':\n        return renderMainApp();\n      // Render D3 React App\n      case 'final':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '50px',\n            fontSize: '24px',\n            fontWeight: 'bold',\n            color: '#4CAF50' // Green color\n          },\n          children: \"Thank you for completing the process!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const renderMainApp = () => {\n    if (!worldAtlas || !data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: height / 2,\n          textAnchor: \"middle\",\n          fontSize: \"14\",\n          fill: \"black\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Get unique participants dynamically and sort them\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant))).sort((a, b) => a - b);\n\n    // Filter Data based on selected criteria\n    const filteredData = data.filter(d => {\n      const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n      const genderFilter = gender === \"Both\" || d.Gender === gender;\n      const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n      return participantFilter && genderFilter && modeButtonFilter;\n    });\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0]).range(['yellow', 'orange', 'red']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          participant: participant,\n          setParticipant: setParticipant,\n          gender: gender,\n          setGender: setGender,\n          modeButton: modeButton,\n          setModeButton: setModeButton,\n          yValueField: yValueField,\n          setYValueField: setYValueField,\n          uniqueParticipants: uniqueParticipants,\n          hexbinSize: hexbinSize,\n          setHexbinSize: setHexbinSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bus.png\",\n          alt: \"bus Logo\",\n          style: {\n            width: '100px',\n            height: 'auto',\n            marginTop: '210px',\n            marginLeft: '35px',\n            alignSelf: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: 45,\n          textAnchor: \"middle\",\n          className: \"title\",\n          children: \"Travel Experience with Different Transportation Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n          id: \"map-image\",\n          href: \"datamap.png\",\n          x: 21,\n          y: 72,\n          height: height,\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(0,30)`,\n          children: /*#__PURE__*/_jsxDEV(Hexbinmap, {\n            data: brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : [],\n            worldAtlas: worldAtlas,\n            yValueField: yValueField,\n            hexbinSize: hexbinSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(0, 700)`,\n          children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n            data: filteredData,\n            width: width,\n            height: dateHistogramSize * height,\n            setBrushExtent: setBrushExtent,\n            xValue: d => d.DayOrder,\n            yValueField: yValueField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(820, 550)`,\n          children: /*#__PURE__*/_jsxDEV(ColorLegend, {\n            colorScale: colorScale,\n            yValueField: yValueField,\n            data: filteredData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '90px',\n          marginTop: '750px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isChecked,\n          onChange: () => {\n            setIsChecked(!isChecked);\n            setErrorMessage(''); // Clear error message on change\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"I have finished and submitted the D3.js and React questionnaire in the Google Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            marginTop: '10px'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://forms.gle/K8tYZET416VNmLfB8\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"qgis-que\",\n              children: \"Go to D3 and React Questionnaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFinish,\n            className: \"backd3\",\n            style: {\n              marginLeft: '20px'\n            },\n            children: \"Finish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"GLgf+v+UmUSjAsu8Gwo30hU/kQE=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","Instructions","jsxDEV","_jsxDEV","width","height","dateHistogramSize","orderedDays","App","_s","currentPage","setCurrentPage","isChecked","setIsChecked","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","errorMessage","setErrorMessage","handleStartDeclaration","handleGoToQGIS","handleBackToD3React","handleFinish","renderPage","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onQGIS","onBack","renderMainApp","style","textAlign","padding","fontSize","fontWeight","color","children","length","x","y","textAnchor","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","display","className","src","alt","marginTop","marginLeft","alignSelf","id","href","transform","includes","DayOrder","xValue","margin","type","checked","onChange","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \nimport Instructions from './Instructions'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration'); // Start with Declaration\n    const [isChecked, setIsChecked] = useState(false); // Checkbox state for finishing\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n    const [errorMessage, setErrorMessage] = useState(''); // Track error message\n\n    const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to Welcome screen\n    const handleGoToQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n    const handleBackToD3React = () => setCurrentPage('mainapp'); // Go back to D3 React App\n\n    const handleFinish = () => {\n        if (!isChecked) {\n            setErrorMessage('Please confirm that you have finished and submitted the QGIS questionnaire.'); // Set error message if not checked\n        } else {\n            setErrorMessage(''); // Clear error message if checked\n            setCurrentPage('final'); // Go to final page\n        }\n    };\n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'welcome':\n                return <Welcome onQGIS={handleGoToQGIS} />; // Pass handler to Welcome\n            case 'qgis':\n                return <QGIS onBack={handleBackToD3React} />; // QGIS page\n            case 'mainapp':\n                return renderMainApp(); // Render D3 React App\n            case 'final':\n                return (\n                    <div style={{ \n                        textAlign: 'center', \n                        padding: '50px', \n                        fontSize: '24px', \n                        fontWeight: 'bold', \n                        color: '#4CAF50' // Green color\n                    }}>\n                        Thank you for completing the process!\n                    </div>\n                );\n            default:\n                return <Declaration onStart={handleStartDeclaration} />;\n        }\n    };\n\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        // Get unique participants dynamically and sort them\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        // Filter Data based on selected criteria\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex' }}>\n                <div className=\"filters\">\n                    <Filters \n                        participant={participant} \n                        setParticipant={setParticipant} \n                        gender={gender} \n                        setGender={setGender} \n                        modeButton={modeButton} \n                        setModeButton={setModeButton}\n                        yValueField={yValueField}\n                        setYValueField={setYValueField}\n                        uniqueParticipants={uniqueParticipants} \n                        hexbinSize={hexbinSize}\n                        setHexbinSize={setHexbinSize}\n                    />\n                    <img \n                        src=\"bus.png\" \n                        alt=\"bus Logo\" \n                        style={{ width: '100px', height: 'auto', marginTop: '210px', marginLeft: '35px', alignSelf: 'center' }} \n                    />\n                </div>\n\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={45} textAnchor=\"middle\" className=\"title\">\n                        Travel Experience with Different Transportation Mode\n                    </text>\n                    <image \n                        id='map-image'\n                        href=\"datamap.png\" \n                        x={21}\n                        y={72} \n                        height={height} \n                        width={width} \n                    />\n                    <g transform={`translate(0,30)`}>\n                        <Hexbinmap \n                            data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                            worldAtlas={worldAtlas} \n                            yValueField={yValueField} \n                            hexbinSize={hexbinSize} \n                        />\n                    </g>\n                    <g transform={`translate(0, 700)`}>\n                        <DateHistogram\n                            data={filteredData} \n                            width={width}\n                            height={dateHistogramSize * height}\n                            setBrushExtent={setBrushExtent}\n                            xValue={d => d.DayOrder} \n                            yValueField={yValueField} \n                        />\n                    </g>\n                    <g transform={`translate(820, 550)`}>\n                        <ColorLegend \n                            colorScale={colorScale} \n                            yValueField={yValueField} \n                            data={filteredData}  \n                        /> \n                    </g>\n                </svg>\n\n                <Instructions />\n                \n                {/* Confirmation Checkbox and Buttons */}\n                <div style={{ margin: '90px', marginTop:'750px' }}>\n                    <input\n                        type=\"checkbox\"\n                        checked={isChecked}\n                        onChange={() => {\n                            setIsChecked(!isChecked);\n                            setErrorMessage(''); // Clear error message on change\n                        }}\n                    />\n                    <label >\n                    I have finished and submitted the D3.js and React questionnaire in the Google Form\n                    </label>\n                    {/* Display Error Message */}\n                    {errorMessage && (\n                        <div style={{ color: 'red', marginTop: '10px' }}>\n                            {errorMessage}\n                        </div>\n                    )}\n\n                    <div style={{ marginTop: '10px' }}>\n                        <a href=\"https://forms.gle/K8tYZET416VNmLfB8\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <button className=\"qgis-que\">\n                                Go to D3 and React Questionnaire\n                            </button>\n                        </a>\n                        <button\n                            onClick={handleFinish}\n                            className=\"backd3\"\n                            style={{ marginLeft: '20px' }} \n                        >\n                            Finish\n                        </button>\n                    </div>\n                    \n                    \n                </div>\n            </div>\n        );\n    };\n\n    return <div>{renderPage()}</div>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}