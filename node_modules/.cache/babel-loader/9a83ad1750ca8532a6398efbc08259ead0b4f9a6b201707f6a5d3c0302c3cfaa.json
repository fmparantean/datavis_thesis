{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\";\nimport React from 'react';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BubbleMap = ({\n  data,\n  worldAtlas\n}) => {\n  const Width = 900;\n  const Height = 750;\n  const projection = geoNaturalEarth1().center([10.537004, 52.210297]).scale(160000).translate([Width / 2, Height / 2]);\n  const hexbinGenerator = hexbin().extent([[0, 0], [Width, Height]]).radius(5); // Adjust the radius based on desired hex size\n\n  // Project data with HRV\n  const projectedData = data.map(d => {\n    const coords = projection(d.coords); // Ensure d.coords contains [longitude, latitude]\n    return {\n      ...d,\n      x: coords[0],\n      y: coords[1],\n      HRV: d.HRV\n    }; // Include HRV here\n  });\n\n  // Generate hex bins using projected coordinates\n  const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: Width,\n    height: Height,\n    children: [/*#__PURE__*/_jsxDEV(Marks, {\n      bins: bins,\n      data: projectedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Markscity, {\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","hexbin","geoNaturalEarth1","Marks","Markscity","jsxDEV","_jsxDEV","BubbleMap","data","worldAtlas","Width","Height","projection","center","scale","translate","hexbinGenerator","extent","radius","projectedData","map","d","coords","x","y","HRV","bins","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import React from 'react';\nimport { hexbin } from 'd3-hexbin';\nimport { geoNaturalEarth1 } from 'd3';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\n\nexport const BubbleMap = ({ data, worldAtlas }) => {\n    const Width = 900;\n    const Height = 750;\n\n    const projection = geoNaturalEarth1()\n        .center([10.537004, 52.210297])\n        .scale(160000)\n        .translate([Width / 2, Height / 2]);\n\n    const hexbinGenerator = hexbin()\n        .extent([[0, 0], [Width,Height]])\n        .radius(5); // Adjust the radius based on desired hex size\n\n    // Project data with HRV\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords); // Ensure d.coords contains [longitude, latitude]\n        return { ...d, x: coords[0], y: coords[1], HRV: d.HRV }; // Include HRV here\n    });\n\n    // Generate hex bins using projected coordinates\n    const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n\n    return (\n        <svg width={Width} height={Height}>\n            <Marks bins={bins} data={projectedData} /> {/* Pass bins and the original data */}\n            <Markscity\n              worldAtlas={worldAtlas}\n        />\n        </svg>\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,gBAAgB,QAAQ,IAAI;AACrC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAC/C,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAElB,MAAMC,UAAU,GAAGV,gBAAgB,CAAC,CAAC,CAChCW,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAC9BC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAACL,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC,CAAC;EAEvC,MAAMK,eAAe,GAAGf,MAAM,CAAC,CAAC,CAC3BgB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAACP,KAAK,EAACC,MAAM,CAAC,CAAC,CAAC,CAChCO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhB;EACA,MAAMC,aAAa,GAAGX,IAAI,CAACY,GAAG,CAACC,CAAC,IAAI;IAChC,MAAMC,MAAM,GAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;IACrC,OAAO;MAAE,GAAGD,CAAC;MAAEE,CAAC,EAAED,MAAM,CAAC,CAAC,CAAC;MAAEE,CAAC,EAAEF,MAAM,CAAC,CAAC,CAAC;MAAEG,GAAG,EAAEJ,CAAC,CAACI;IAAI,CAAC,CAAC,CAAC;EAC7D,CAAC,CAAC;;EAEF;EACA,MAAMC,IAAI,GAAGV,eAAe,CAACG,aAAa,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;EAEhE,oBACIlB,OAAA;IAAKqB,KAAK,EAAEjB,KAAM;IAACkB,MAAM,EAAEjB,MAAO;IAAAkB,QAAA,gBAC9BvB,OAAA,CAACH,KAAK;MAACuB,IAAI,EAAEA,IAAK;MAAClB,IAAI,EAAEW;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC,eAC3C3B,OAAA,CAACF,SAAS;MACRK,UAAU,EAAEA;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAACC,EAAA,GA9BW3B,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}