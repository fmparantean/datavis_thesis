{"ast":null,"code":"import React from'react';import{hexbin}from'd3-hexbin';import{Marks}from'./Marks';import{Markscity}from'./Markscity';import{geoMercator}from'd3-geo';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Hexbinmap=_ref=>{let{data,worldAtlas,yValueField,hexbinSize}=_ref;const svgHeight=900;const svgWidth=900;const projection=geoMercator().center([10.537,52.210]).scale(125000).translate([svgWidth/2,svgHeight/2]);const hexbinGenerator=hexbin().extent([[0,0],[svgWidth,svgHeight]]).radius(hexbinSize);const projectedData=data.map(d=>{const coords=projection(d.coords);return{...d,x:coords[0],y:coords[1]};});const bins=hexbinGenerator(projectedData.map(d=>[d.x,d.y]));return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"svg\",{width:svgWidth,height:svgHeight,children:[/*#__PURE__*/_jsx(Marks,{bins:bins,data:projectedData,yValueField:yValueField,hexbinSize:hexbinSize}),/*#__PURE__*/_jsx(Markscity,{data:projectedData,projection:projection})]})});};","map":{"version":3,"names":["React","hexbin","Marks","Markscity","geoMercator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Hexbinmap","_ref","data","worldAtlas","yValueField","hexbinSize","svgHeight","svgWidth","projection","center","scale","translate","hexbinGenerator","extent","radius","projectedData","map","d","coords","x","y","bins","children","width","height"],"sources":["/Users/fmparantean/Documents/datavis_thesis/src/HexbinMap/index.js"],"sourcesContent":["import React from 'react';\nimport { hexbin } from 'd3-hexbin'; \nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { geoMercator } from 'd3-geo';\n\nexport const Hexbinmap = ({ data, worldAtlas, yValueField, hexbinSize }) => {\n    const svgHeight = 900;\n    const svgWidth = 900;\n\n    const projection = geoMercator()\n        .center([10.537, 52.210])\n        .scale(125000)\n        .translate([svgWidth / 2, svgHeight / 2]);\n\n    const hexbinGenerator = hexbin()\n        .extent([[0, 0], [svgWidth, svgHeight]])\n        .radius(hexbinSize); \n\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords); \n        return { ...d, x: coords[0], y: coords[1] };\n    });\n\n    const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n\n    return (\n        <>\n            <svg width={svgWidth} height={svgHeight}>\n                <Marks bins={bins} data={projectedData} yValueField={yValueField} hexbinSize={hexbinSize} /> \n                <Markscity data={projectedData} projection={projection} /> \n            </svg>\n        </>\n    );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,WAAW,CAClC,OAASC,KAAK,KAAQ,SAAS,CAC/B,OAASC,SAAS,KAAQ,aAAa,CACvC,OAASC,WAAW,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAErC,MAAO,MAAM,CAAAC,SAAS,CAAGC,IAAA,EAAmD,IAAlD,CAAEC,IAAI,CAAEC,UAAU,CAAEC,WAAW,CAAEC,UAAW,CAAC,CAAAJ,IAAA,CACnE,KAAM,CAAAK,SAAS,CAAG,GAAG,CACrB,KAAM,CAAAC,QAAQ,CAAG,GAAG,CAEpB,KAAM,CAAAC,UAAU,CAAGf,WAAW,CAAC,CAAC,CAC3BgB,MAAM,CAAC,CAAC,MAAM,CAAE,MAAM,CAAC,CAAC,CACxBC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAACJ,QAAQ,CAAG,CAAC,CAAED,SAAS,CAAG,CAAC,CAAC,CAAC,CAE7C,KAAM,CAAAM,eAAe,CAAGtB,MAAM,CAAC,CAAC,CAC3BuB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAACN,QAAQ,CAAED,SAAS,CAAC,CAAC,CAAC,CACvCQ,MAAM,CAACT,UAAU,CAAC,CAEvB,KAAM,CAAAU,aAAa,CAAGb,IAAI,CAACc,GAAG,CAACC,CAAC,EAAI,CAChC,KAAM,CAAAC,MAAM,CAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC,CACnC,MAAO,CAAE,GAAGD,CAAC,CAAEE,CAAC,CAAED,MAAM,CAAC,CAAC,CAAC,CAAEE,CAAC,CAAEF,MAAM,CAAC,CAAC,CAAE,CAAC,CAC/C,CAAC,CAAC,CAEF,KAAM,CAAAG,IAAI,CAAGT,eAAe,CAACG,aAAa,CAACC,GAAG,CAACC,CAAC,EAAI,CAACA,CAAC,CAACE,CAAC,CAAEF,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC,CAEhE,mBACIzB,IAAA,CAAAI,SAAA,EAAAuB,QAAA,cACIzB,KAAA,QAAK0B,KAAK,CAAEhB,QAAS,CAACiB,MAAM,CAAElB,SAAU,CAAAgB,QAAA,eACpC3B,IAAA,CAACJ,KAAK,EAAC8B,IAAI,CAAEA,IAAK,CAACnB,IAAI,CAAEa,aAAc,CAACX,WAAW,CAAEA,WAAY,CAACC,UAAU,CAAEA,UAAW,CAAE,CAAC,cAC5FV,IAAA,CAACH,SAAS,EAACU,IAAI,CAAEa,aAAc,CAACP,UAAU,CAAEA,UAAW,CAAE,CAAC,EACzD,CAAC,CACR,CAAC,CAEX,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}