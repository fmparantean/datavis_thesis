{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/DateHistogram/Marks.js\";\n// Marks.js\nimport { line, curveNatural } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  circleRadius\n}) => {\n  // Check for valid data\n  if (!data || data.length === 0) {\n    console.warn(\"No data available for rendering!\");\n    return null; // Prevent rendering if data is empty\n  }\n\n  // Check the values being passed\n  console.log(\"Data in Marks:\", data);\n\n  // const linePath = line()\n  //     .x((d) => xScale(xValue(d))) // X position based on Timestamp\n  //     .y((d) => yScale(yValue(d))) // Y position based on HRV\n  //     .curve(curveNatural); // Smooth line\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marksline\",\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"none\",\n      stroke: \"black\",\n      d: linePath(data) // Draw the line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), data.map((d, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: xScale(xValue(d)),\n      cy: yScale(yValue(d)),\n      r: circleRadius,\n      fill: \"red\",\n      stroke: \"black\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["line","curveNatural","jsxDEV","_jsxDEV","Marks","data","xScale","yScale","xValue","yValue","circleRadius","length","console","warn","log","className","children","fill","stroke","d","linePath","fileName","_jsxFileName","lineNumber","columnNumber","map","index","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/DateHistogram/Marks.js"],"sourcesContent":["// Marks.js\nimport { line, curveNatural } from 'd3';\n\nexport const Marks = ({\n    data,\n    xScale,\n    yScale,\n    xValue,\n    yValue,\n    circleRadius\n}) => {\n    // Check for valid data\n    if (!data || data.length === 0) {\n        console.warn(\"No data available for rendering!\");\n        return null; // Prevent rendering if data is empty\n    }\n\n    // Check the values being passed\n    console.log(\"Data in Marks:\", data);\n\n    // const linePath = line()\n    //     .x((d) => xScale(xValue(d))) // X position based on Timestamp\n    //     .y((d) => yScale(yValue(d))) // Y position based on HRV\n    //     .curve(curveNatural); // Smooth line\n\n    return (\n        <g className=\"marksline\">\n            <path\n                fill=\"none\"\n                stroke=\"black\"\n                d={linePath(data)} // Draw the line\n            />\n            {data.map((d, index) => (\n                <circle\n                    key={index}\n                    cx={xScale(xValue(d))}\n                    cy={yScale(yValue(d))}\n                    r={circleRadius}\n                    fill=\"red\"\n                    stroke=\"black\"\n                />\n            ))}\n        </g>\n    );\n};"],"mappings":";AAAA;AACA,SAASA,IAAI,EAAEC,YAAY,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAClBC,IAAI;EACJC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC;AACJ,CAAC,KAAK;EACF;EACA,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IAC5BC,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;IAChD,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;EACAD,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAET,IAAI,CAAC;;EAEnC;EACA;EACA;EACA;;EAEA,oBACIF,OAAA;IAAGY,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACpBb,OAAA;MACIc,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,OAAO;MACdC,CAAC,EAAEC,QAAQ,CAACf,IAAI,CAAE,CAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EACDnB,IAAI,CAACoB,GAAG,CAAC,CAACN,CAAC,EAAEO,KAAK,kBACfvB,OAAA;MAEIwB,EAAE,EAAErB,MAAM,CAACE,MAAM,CAACW,CAAC,CAAC,CAAE;MACtBS,EAAE,EAAErB,MAAM,CAACE,MAAM,CAACU,CAAC,CAAC,CAAE;MACtBU,CAAC,EAAEnB,YAAa;MAChBO,IAAI,EAAC,KAAK;MACVC,MAAM,EAAC;IAAO,GALTQ,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACM,EAAA,GAzCW1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}