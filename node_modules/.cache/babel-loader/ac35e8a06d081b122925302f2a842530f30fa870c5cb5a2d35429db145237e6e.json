{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { csv } from 'd3';\nexport const useData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv('/dataku.csv') // Load from public directory\n    .then(rawData => {\n      const processedData = rawData.map(row => {\n        const coords = row['Location Coordinates'].split(',').map(coord => +coord.trim()).reverse(); // Reverse the order\n\n        if (coords[0] < 47.2701 || coords[0] > 55.0581 || coords[1] < 5.8663 || coords[1] > 15.0419) {\n          return null; // Ignore points outside Germany\n        }\n        return {\n          Timestamp: new Date(row.Timestamp),\n          HRV: +row.HRV || 0,\n          // Ensure HRV is a number\n          coords\n        };\n      }).filter(d => d !== null); // Filter out null values\n\n      setData(processedData);\n    }).catch(error => {\n      console.error(\"Error loading data:\", error);\n    });\n  }, []);\n  return data; // Return processed data\n};\n_s(useData, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");","map":{"version":3,"names":["useEffect","useState","csv","useData","_s","data","setData","then","rawData","processedData","map","row","coords","split","coord","trim","reverse","Timestamp","Date","HRV","filter","d","catch","error","console"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/useData.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useData = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        csv('/dataku.csv') // Load from public directory\n            .then(rawData => {\n                const processedData = rawData.map(row => {\n                    const coords = row['Location Coordinates']\n                        .split(',')\n                        .map(coord => +coord.trim())\n                        .reverse(); // Reverse the order\n\n                    if (coords[0] < 47.2701 || coords[0] > 55.0581 || coords[1] < 5.8663 || coords[1] > 15.0419) {\n                        return null; // Ignore points outside Germany\n                    }\n\n                    return {\n                        Timestamp: new Date(row.Timestamp),\n                        HRV: +row.HRV || 0, // Ensure HRV is a number\n                        coords\n                    };\n                }).filter(d => d !== null); // Filter out null values\n\n                setData(processedData);\n            })\n            .catch(error => {\n                console.error(\"Error loading data:\", error);\n            });\n    }, []);\n\n    return data; // Return processed data\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,IAAI;AAExB,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZE,GAAG,CAAC,aAAa,CAAC,CAAC;IAAA,CACdK,IAAI,CAACC,OAAO,IAAI;MACb,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAG,CAACC,GAAG,IAAI;QACrC,MAAMC,MAAM,GAAGD,GAAG,CAAC,sBAAsB,CAAC,CACrCE,KAAK,CAAC,GAAG,CAAC,CACVH,GAAG,CAACI,KAAK,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BC,OAAO,CAAC,CAAC,CAAC,CAAC;;QAEhB,IAAIJ,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE;UACzF,OAAO,IAAI,CAAC,CAAC;QACjB;QAEA,OAAO;UACHK,SAAS,EAAE,IAAIC,IAAI,CAACP,GAAG,CAACM,SAAS,CAAC;UAClCE,GAAG,EAAE,CAACR,GAAG,CAACQ,GAAG,IAAI,CAAC;UAAE;UACpBP;QACJ,CAAC;MACL,CAAC,CAAC,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;;MAE5Bf,OAAO,CAACG,aAAa,CAAC;IAC1B,CAAC,CAAC,CACDa,KAAK,CAACC,KAAK,IAAI;MACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOlB,IAAI,CAAC,CAAC;AACjB,CAAC;AAACD,EAAA,CA/BWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}