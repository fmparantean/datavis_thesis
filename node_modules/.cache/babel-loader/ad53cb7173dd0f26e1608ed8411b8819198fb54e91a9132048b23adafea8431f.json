{"ast":null,"code":"import{useEffect,useState}from'react';import{csv}from'd3';export const useData=()=>{const[data,setData]=useState([]);useEffect(()=>{csv('/dataku.csv')// Load from public directory\n.then(rawData=>{const processedData=rawData.map(row=>{const date=new Date(row.Timestamp);const dayOrder=date.getUTCDay();// Gets day as number (0 = Sunday)\nconst gender=row.Gender===\"1.0\"?\"Male\":\"Female\";// Convert \"1.0\" to \"Male\" and \"2.0\" to \"Female\"\nreturn{Timestamp:date,HRV:+row.HRV||0,coords:row['Location Coordinates'].split(',').map(coord=>+coord.trim()).reverse(),DayOrder:dayOrder,Participant:row.Participant,Gender:gender,ModeButton_xs:row.ModeButton_xs};});setData(processedData);}).catch(error=>{console.error(\"Error loading data:\",error);});},[]);return data;// Return processed data\n};","map":{"version":3,"names":["useEffect","useState","csv","useData","data","setData","then","rawData","processedData","map","row","date","Date","Timestamp","dayOrder","getUTCDay","gender","Gender","HRV","coords","split","coord","trim","reverse","DayOrder","Participant","ModeButton_xs","catch","error","console"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/useData.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { csv } from 'd3';\n\nexport const useData = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        csv('/dataku.csv') // Load from public directory\n            .then(rawData => {\n                const processedData = rawData.map(row => {\n                    const date = new Date(row.Timestamp);\n                    const dayOrder = date.getUTCDay(); // Gets day as number (0 = Sunday)\n                    const gender = row.Gender === \"1.0\" ? \"Male\" : \"Female\"; // Convert \"1.0\" to \"Male\" and \"2.0\" to \"Female\"\n\n                    return {\n                        Timestamp: date,\n                        HRV: +row.HRV || 0,\n                        coords: row['Location Coordinates']\n                            .split(',')\n                            .map(coord => +coord.trim())\n                            .reverse(), \n                        DayOrder: dayOrder, \n                        Participant: row.Participant,\n                        Gender: gender,\n                        ModeButton_xs: row.ModeButton_xs, \n                    };\n                });\n\n                setData(processedData);\n            })\n            .catch(error => {\n                console.error(\"Error loading data:\", error);\n            });\n    }, []);\n\n    return data; // Return processed data\n};"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,GAAG,KAAQ,IAAI,CAExB,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACzB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGJ,QAAQ,CAAC,EAAE,CAAC,CAEpCD,SAAS,CAAC,IAAM,CACZE,GAAG,CAAC,aAAa,CAAE;AAAA,CACdI,IAAI,CAACC,OAAO,EAAI,CACb,KAAM,CAAAC,aAAa,CAAGD,OAAO,CAACE,GAAG,CAACC,GAAG,EAAI,CACrC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,GAAG,CAACG,SAAS,CAAC,CACpC,KAAM,CAAAC,QAAQ,CAAGH,IAAI,CAACI,SAAS,CAAC,CAAC,CAAE;AACnC,KAAM,CAAAC,MAAM,CAAGN,GAAG,CAACO,MAAM,GAAK,KAAK,CAAG,MAAM,CAAG,QAAQ,CAAE;AAEzD,MAAO,CACHJ,SAAS,CAAEF,IAAI,CACfO,GAAG,CAAE,CAACR,GAAG,CAACQ,GAAG,EAAI,CAAC,CAClBC,MAAM,CAAET,GAAG,CAAC,sBAAsB,CAAC,CAC9BU,KAAK,CAAC,GAAG,CAAC,CACVX,GAAG,CAACY,KAAK,EAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BC,OAAO,CAAC,CAAC,CACdC,QAAQ,CAAEV,QAAQ,CAClBW,WAAW,CAAEf,GAAG,CAACe,WAAW,CAC5BR,MAAM,CAAED,MAAM,CACdU,aAAa,CAAEhB,GAAG,CAACgB,aACvB,CAAC,CACL,CAAC,CAAC,CAEFrB,OAAO,CAACG,aAAa,CAAC,CAC1B,CAAC,CAAC,CACDmB,KAAK,CAACC,KAAK,EAAI,CACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC/C,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAxB,IAAI,CAAE;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}