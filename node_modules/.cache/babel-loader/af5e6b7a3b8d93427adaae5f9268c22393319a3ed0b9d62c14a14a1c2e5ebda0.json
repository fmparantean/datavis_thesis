{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 750;\nconst dateHistogramSize = 0.25;\nconst xValue = d => d.Timestamp; // Correct x-value function\n\nconst App = () => {\n  _s();\n  const worldAtlas = useWorldAtlas();\n  const data = useData(); // Use the JSON data\n\n  console.log(\"Data being loaded:\", data); // Debugging the current data being loaded\n\n  const [brushExtent, setBrushExtent] = useState(null);\n  if (!worldAtlas || !data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: width / 2 // Center the text\n        ,\n        y: height / 2 // Position it vertically in the center\n        ,\n        textAnchor: \"middle\" // Center alignment\n        ,\n        fontSize: \"14\" // Set to a smaller font size\n        ,\n        fill: \"black\" // Color of the loading text\n        ,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) // Wrapping it in SVG for proper rendering\n    ;\n  }\n  const filteredData = brushExtent ? data.filter(d => {\n    const date = xValue(d);\n    return date >= brushExtent[0] && date <= brushExtent[1];\n  }) : data;\n  console.log(\"Filtered Data:\", filteredData); // Log filtered data for verification\n\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: width / 2 // Center the title\n      ,\n      y: 40 // Position it near the top\n      ,\n      textAnchor: \"middle\" // Center the text\n      ,\n      className: \"title\" // Apply title class\n      ,\n      children: \"THE HRV DISTRIBUTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, 80)`,\n      children: /*#__PURE__*/_jsxDEV(BubbleMap, {\n        data: filteredData,\n        worldAtlas: worldAtlas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(0, ${height - dateHistogramSize * height})`,\n      children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n        data: data // Pass the data for the histogram\n        ,\n        width: width,\n        height: dateHistogramSize * height,\n        setBrushExtent: setBrushExtent,\n        xValue: xValue // Pass xValue function\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qNrp+cqz1K4ohBQ5elzPglsfMNY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useWorldAtlas","useData","BubbleMap","DateHistogram","jsxDEV","_jsxDEV","width","height","dateHistogramSize","xValue","d","Timestamp","App","_s","worldAtlas","data","console","log","brushExtent","setBrushExtent","length","children","x","y","textAnchor","fontSize","fill","fileName","_jsxFileName","lineNumber","columnNumber","filteredData","filter","date","className","transform","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { BubbleMap } from './BubbleMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\n\nconst width = 900;\nconst height = 750;\nconst dateHistogramSize = 0.25;\nconst xValue = d => d.Timestamp; // Correct x-value function\n\nconst App = () => {\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); // Use the JSON data\n\n    console.log(\"Data being loaded:\", data); // Debugging the current data being loaded\n\n    const [brushExtent, setBrushExtent] = useState(null);\n\n    if (!worldAtlas || !data || data.length === 0) {\n        return (\n          <svg width={width} height={height}>\n            <text\n              x={width / 2} // Center the text\n              y={height / 2} // Position it vertically in the center\n              textAnchor=\"middle\" // Center alignment\n              fontSize=\"14\" // Set to a smaller font size\n              fill=\"black\" // Color of the loading text\n            >\n              Loading...\n            </text>\n          </svg> // Wrapping it in SVG for proper rendering\n        ); \n    }\n\n    const filteredData = brushExtent\n        ? data.filter(d => {\n            const date = xValue(d);\n            return date >= brushExtent[0] && date <= brushExtent[1];\n        })\n        : data;\n\n    console.log(\"Filtered Data:\", filteredData); // Log filtered data for verification\n\n    return (\n        <svg width={width} height={height}>\n            <text\n                x={width / 2} // Center the title\n                y={40} // Position it near the top\n                textAnchor=\"middle\" // Center the text\n                className=\"title\" // Apply title class\n            >\n                THE HRV DISTRIBUTION\n            </text>\n            \n            <g transform={`translate(0, 80)`}>\n                <BubbleMap data={filteredData} worldAtlas={worldAtlas} />\n            </g>\n            <g transform={`translate(0, ${height - dateHistogramSize * height})`}>\n                <DateHistogram\n                    data={data} // Pass the data for the histogram\n                    width={width}\n                    height={dateHistogramSize * height}\n                    setBrushExtent={setBrushExtent}\n                    xValue={xValue} // Pass xValue function\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}