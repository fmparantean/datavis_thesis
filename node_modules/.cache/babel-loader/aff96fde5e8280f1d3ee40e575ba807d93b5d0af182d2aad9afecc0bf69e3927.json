{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js\";\nimport React from 'react';\nimport { scaleSqrt, max } from 'd3';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { hexbin } from 'd3-hexbin'; // Import hexbin\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sizeValue = d => d.HRV;\nexport const BubbleMap = ({\n  data,\n  worldAtlas\n}) => {\n  // Create a hexbin generator\n  const hexbinGenerator = hexbin().size([900, 600]) // Set size to match your SVG\n  .radius(20); // Adjust the radius based on your needs\n\n  // Generate hexagons from the data points\n  const bins = hexbinGenerator(data.map(d => projection(d.coords)));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Marks, {\n      worldAtlas: worldAtlas,\n      bins: bins // Pass the hexbin data\n      ,\n      sizeValue: sizeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Markscity, {\n      worldAtlas: worldAtlas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = BubbleMap;\nvar _c;\n$RefreshReg$(_c, \"BubbleMap\");","map":{"version":3,"names":["React","scaleSqrt","max","Marks","Markscity","hexbin","jsxDEV","_jsxDEV","Fragment","_Fragment","sizeValue","d","HRV","BubbleMap","data","worldAtlas","hexbinGenerator","size","radius","bins","map","projection","coords","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/index.js"],"sourcesContent":["import React from 'react';\nimport { scaleSqrt, max } from 'd3';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { hexbin } from 'd3-hexbin'; // Import hexbin\n\nconst sizeValue = d => d.HRV;\n\nexport const BubbleMap = ({ data, worldAtlas }) => {\n    // Create a hexbin generator\n    const hexbinGenerator = hexbin()\n        .size([900, 600]) // Set size to match your SVG\n        .radius(20); // Adjust the radius based on your needs\n\n    // Generate hexagons from the data points\n    const bins = hexbinGenerator(data.map(d => projection(d.coords)));\n\n    return (\n        <>\n            <Marks\n                worldAtlas={worldAtlas}\n                bins={bins}  // Pass the hexbin data\n                sizeValue={sizeValue}\n            />\n            <Markscity\n                worldAtlas={worldAtlas}\n            />\n        </>\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,QAAQ,IAAI;AACnC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,MAAM,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,SAAS,GAAGC,CAAC,IAAIA,CAAC,CAACC,GAAG;AAE5B,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EAC/C;EACA,MAAMC,eAAe,GAAGX,MAAM,CAAC,CAAC,CAC3BY,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;EAAA,CACjBC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEjB;EACA,MAAMC,IAAI,GAAGH,eAAe,CAACF,IAAI,CAACM,GAAG,CAACT,CAAC,IAAIU,UAAU,CAACV,CAAC,CAACW,MAAM,CAAC,CAAC,CAAC;EAEjE,oBACIf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA,CAACJ,KAAK;MACFY,UAAU,EAAEA,UAAW;MACvBI,IAAI,EAAEA,IAAK,CAAE;MAAA;MACbT,SAAS,EAAEA;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFpB,OAAA,CAACH,SAAS;MACNW,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAACC,EAAA,GArBWf,SAAS;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}