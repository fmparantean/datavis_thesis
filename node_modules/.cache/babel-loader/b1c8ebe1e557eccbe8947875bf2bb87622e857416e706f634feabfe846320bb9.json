{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual/src/DateHistogram/Marks.js\";\n// Marks.js\nimport { line, curveCardinal } from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  binnedData,\n  xScale,\n  yScale,\n  tooltipFormat,\n  innerHeight\n}) => {\n  if (binnedData.length === 0) return null;\n\n  // Create the line generator\n  const lineGenerator = line().x(d => xScale(d.x0 + (d.x1 - d.x0) / 2)) // Midpoint calculation\n  .y(d => yScale(d.y)) // y value\n  .curve(curveCardinal); // Smoother curve\n\n  const pathData = lineGenerator(binnedData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      className: \"line\",\n      d: pathData,\n      fill: \"none\",\n      stroke: \"steelblue\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), binnedData.map((d, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: xScale(d.x0 + (d.x1 - d.x0) / 2),\n      cy: yScale(d.y),\n      r: 4,\n      fill: \"red\",\n      stroke: \"black\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["line","curveCardinal","jsxDEV","_jsxDEV","Fragment","_Fragment","Marks","binnedData","xScale","yScale","tooltipFormat","innerHeight","length","lineGenerator","x","d","x0","x1","y","curve","pathData","children","className","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","map","index","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual/src/DateHistogram/Marks.js"],"sourcesContent":["// Marks.js\nimport { line, curveCardinal } from 'd3';\n\nexport const Marks = ({\n  binnedData,\n  xScale,\n  yScale,\n  tooltipFormat,\n  innerHeight\n}) => {\n  if (binnedData.length === 0) return null;\n\n  // Create the line generator\n  const lineGenerator = line()\n      .x(d => xScale(d.x0 + (d.x1 - d.x0) / 2)) // Midpoint calculation\n      .y(d => yScale(d.y)) // y value\n      .curve(curveCardinal); // Smoother curve\n\n  const pathData = lineGenerator(binnedData);\n\n  return (\n    <>\n      {/* Draw the line */}\n      <path\n        className=\"line\"\n        d={pathData}\n        fill=\"none\"\n        stroke=\"steelblue\"\n        strokeWidth=\"2\"\n      />\n      \n      {/* Draw circles for each data point */}\n      {binnedData.map((d, index) => (\n        <circle\n          key={index}\n          cx={xScale(d.x0 + (d.x1 - d.x0) / 2)}\n          cy={yScale(d.y)}\n          r={4}\n          fill=\"red\"\n          stroke=\"black\"\n        />\n      ))}\n    </>\n  );\n};"],"mappings":";AAAA;AACA,SAASA,IAAI,EAAEC,aAAa,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,KAAK,GAAGA,CAAC;EACpBC,UAAU;EACVC,MAAM;EACNC,MAAM;EACNC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ,IAAIJ,UAAU,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;;EAExC;EACA,MAAMC,aAAa,GAAGb,IAAI,CAAC,CAAC,CACvBc,CAAC,CAACC,CAAC,IAAIP,MAAM,CAACO,CAAC,CAACC,EAAE,GAAG,CAACD,CAAC,CAACE,EAAE,GAAGF,CAAC,CAACC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAAA,CACzCE,CAAC,CAACH,CAAC,IAAIN,MAAM,CAACM,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;EAAA,CACpBC,KAAK,CAAClB,aAAa,CAAC,CAAC,CAAC;;EAE3B,MAAMmB,QAAQ,GAAGP,aAAa,CAACN,UAAU,CAAC;EAE1C,oBACEJ,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBAEElB,OAAA;MACEmB,SAAS,EAAC,MAAM;MAChBP,CAAC,EAAEK,QAAS;MACZG,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,WAAW;MAClBC,WAAW,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,EAGDtB,UAAU,CAACuB,GAAG,CAAC,CAACf,CAAC,EAAEgB,KAAK,kBACvB5B,OAAA;MAEE6B,EAAE,EAAExB,MAAM,CAACO,CAAC,CAACC,EAAE,GAAG,CAACD,CAAC,CAACE,EAAE,GAAGF,CAAC,CAACC,EAAE,IAAI,CAAC,CAAE;MACrCiB,EAAE,EAAExB,MAAM,CAACM,CAAC,CAACG,CAAC,CAAE;MAChBgB,CAAC,EAAE,CAAE;MACLX,IAAI,EAAC,KAAK;MACVC,MAAM,EAAC;IAAO,GALTO,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CACF,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACM,EAAA,GAzCW7B,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}