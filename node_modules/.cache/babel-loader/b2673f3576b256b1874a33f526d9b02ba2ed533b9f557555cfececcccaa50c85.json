{"ast":null,"code":"import{scaleLinear,scaleBand,max,brushX,select,min}from'd3';import{useRef,useEffect}from'react';import{AxisBottom}from'./AxisBottom';import{AxisLeft}from'./AxisLeft';import{Marks}from'./Marks';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const margin={top:20,right:10,bottom:50,left:90};export const DateHistogram=_ref=>{let{data,width,height,setBrushExtent,yValueField}=_ref;const innerHeight=height-margin.top-margin.bottom;const innerWidth=width-margin.left-margin.right;const xScale=scaleBand().domain([\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]).range([0,innerWidth]).padding(0.1);// Define a function to get the Y value\nconst yValue=d=>d[yValueField];// Filter out data with invalid Y values (null or equal to 0.00)\nconst filteredData=data.filter(d=>d[yValueField]!=null&&d[yValueField]!==0);const yScale=scaleLinear().domain([min(filteredData,yValue),max(filteredData,yValue)])// Ensure max returns a number\n.range([innerHeight,0]).nice();const brushRef=useRef();const initialBrushSet=useRef(false);// Track if the initial brush has been set\nuseEffect(()=>{const brush=brushX().extent([[0,0],[innerWidth,innerHeight]]);brush(select(brushRef.current));brush.on('brush end',event=>{const selection=event.selection;if(!selection)return;// Get the selected days based on the current brush position\nconst selectedDays=xScale.domain().filter(day=>{const dayPosition=xScale(day);return dayPosition>=selection[0]&&dayPosition<=selection[1];});setBrushExtent(selectedDays);});// Set the initial brush position only once\nif(!initialBrushSet.current){const initialSelection=[0,innerWidth/2];// Selecting the first half\nbrush.move(select(brushRef.current),initialSelection);// Automatically select data points based on the initial brush extent\nconst initialSelectedDays=xScale.domain().filter(day=>{const dayPosition=xScale(day);return dayPosition>=initialSelection[0]&&dayPosition<=initialSelection[1];});setBrushExtent(initialSelectedDays);initialBrushSet.current=true;// Mark that the initial brush has been set\n}},[height,innerHeight,innerWidth,setBrushExtent,xScale]);// Include necessary dependencies\nconst getYAxisLabel=field=>{switch(field){case'HR_mad_filtered':return'HR Mad Score';case'HRV':return'HRV Score';case'stress_xs':return'Stress Score';case'satisfaction_journey_xs':return'Satisfaction Score';default:return'Score';}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"rect\",{width:width,height:height,fill:\"white\"}),/*#__PURE__*/_jsxs(\"g\",{transform:`translate(${margin.left},${margin.top})`,children:[/*#__PURE__*/_jsx(AxisBottom,{xScale:xScale,innerHeight:innerHeight+10,tickFormat:d=>d}),/*#__PURE__*/_jsx(AxisLeft,{yScale:yScale,innerWidth:innerWidth}),/*#__PURE__*/_jsx(Marks,{data:filteredData// Use filtered data here\n,xScale:xScale,yScale:yScale,xValue:d=>d.DayOrder,yValue:yValue,circleRadius:2.5}),/*#__PURE__*/_jsx(\"g\",{ref:brushRef}),/*#__PURE__*/_jsx(\"text\",{className:\"axis-label\",textAnchor:\"middle\",transform:`translate(${innerWidth/2}, ${innerHeight+44})`,children:\"Days of the Week\"}),/*#__PURE__*/_jsx(\"text\",{className:\"axis-label\",textAnchor:\"middle\",transform:`translate(-30, ${innerHeight/2}) rotate(-90)`,children:getYAxisLabel(yValueField)})]})]});};","map":{"version":3,"names":["scaleLinear","scaleBand","max","brushX","select","min","useRef","useEffect","AxisBottom","AxisLeft","Marks","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","margin","top","right","bottom","left","DateHistogram","_ref","data","width","height","setBrushExtent","yValueField","innerHeight","innerWidth","xScale","domain","range","padding","yValue","d","filteredData","filter","yScale","nice","brushRef","initialBrushSet","brush","extent","current","on","event","selection","selectedDays","day","dayPosition","initialSelection","move","initialSelectedDays","getYAxisLabel","field","children","fill","transform","tickFormat","xValue","DayOrder","circleRadius","ref","className","textAnchor"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/DateHistogram/index.js"],"sourcesContent":["import {\n    scaleLinear,\n    scaleBand,\n    max,\n    brushX,\n    select,\n    min\n} from 'd3';\nimport { useRef, useEffect } from 'react';\nimport { AxisBottom } from './AxisBottom';\nimport { AxisLeft } from './AxisLeft';\nimport { Marks } from './Marks';\n\nconst margin = { top: 20, right: 10, bottom: 50, left: 90 };\n\nexport const DateHistogram = ({\n    data,\n    width,\n    height,\n    setBrushExtent,\n    yValueField\n}) => {\n    const innerHeight = height - margin.top - margin.bottom;\n    const innerWidth = width - margin.left - margin.right;\n\n    const xScale = scaleBand()\n        .domain([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"])\n        .range([0, innerWidth])\n        .padding(0.1);\n\n    // Define a function to get the Y value\n    const yValue = d => d[yValueField];\n\n    // Filter out data with invalid Y values (null or equal to 0.00)\n    const filteredData = data.filter(d => d[yValueField] != null && d[yValueField] !== 0);\n\n    const yScale = scaleLinear()\n        .domain([min(filteredData, yValue), max(filteredData, yValue)]) // Ensure max returns a number\n        .range([innerHeight, 0])\n        .nice();\n\n    const brushRef = useRef();\n    const initialBrushSet = useRef(false); // Track if the initial brush has been set\n\n    useEffect(() => {\n        const brush = brushX().extent([[0, 0], [innerWidth, innerHeight]]);\n        brush(select(brushRef.current));\n\n        brush.on('brush end', (event) => {\n            const selection = event.selection;\n            if (!selection) return;\n\n            // Get the selected days based on the current brush position\n            const selectedDays = xScale.domain().filter(day => {\n                const dayPosition = xScale(day);\n                return dayPosition >= selection[0] && dayPosition <= selection[1];\n            });\n\n            setBrushExtent(selectedDays);\n        });\n\n        // Set the initial brush position only once\n        if (!initialBrushSet.current) {\n            const initialSelection = [0, innerWidth / 2]; // Selecting the first half\n            brush.move(select(brushRef.current), initialSelection);\n\n            // Automatically select data points based on the initial brush extent\n            const initialSelectedDays = xScale.domain().filter(day => {\n                const dayPosition = xScale(day);\n                return dayPosition >= initialSelection[0] && dayPosition <= initialSelection[1];\n            });\n            setBrushExtent(initialSelectedDays);\n\n            initialBrushSet.current = true; // Mark that the initial brush has been set\n        }\n    }, [height, innerHeight, innerWidth, setBrushExtent, xScale]); // Include necessary dependencies\n\n    const getYAxisLabel = (field) => {\n        switch (field) {\n            case 'HR_mad_filtered':\n                return 'HR Mad Score';\n            case 'HRV':\n                return 'HRV Score';\n            case 'stress_xs':\n                return 'Stress Score';\n            case 'satisfaction_journey_xs':\n                return 'Satisfaction Score';\n            default:\n                return 'Score';\n        }\n    };\n\n    return (\n        <>\n            <rect width={width} height={height} fill=\"white\" />\n            <g transform={`translate(${margin.left},${margin.top})`}>\n                <AxisBottom\n                    xScale={xScale}\n                    innerHeight={innerHeight + 10}\n                    tickFormat={d => d}\n                />\n                <AxisLeft\n                    yScale={yScale}\n                    innerWidth={innerWidth}\n                />\n                <Marks\n                    data={filteredData} // Use filtered data here\n                    xScale={xScale}\n                    yScale={yScale}\n                    xValue={d => d.DayOrder}  \n                    yValue={yValue}\n                    circleRadius={2.5}\n                />\n                <g ref={brushRef} />\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(${innerWidth / 2}, ${innerHeight + 44})`} \n                >\n                    Days of the Week\n                </text>\n                <text\n                    className=\"axis-label\"\n                    textAnchor=\"middle\"\n                    transform={`translate(-30, ${innerHeight / 2}) rotate(-90)`} \n                >\n                    {getYAxisLabel(yValueField)}\n                </text>\n            </g>\n        </>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}