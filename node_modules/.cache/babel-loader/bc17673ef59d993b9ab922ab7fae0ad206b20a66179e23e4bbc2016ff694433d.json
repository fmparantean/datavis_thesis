{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Markscity.js\";\nimport { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoNaturalEarth1().center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n.scale(150000) // Adjust scale for zoom level; increase for more detail\n.translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\nconst braunschweigCoords = [10.527004, 52.210297];\nexport const Markscity = ({\n  worldAtlas: {\n    land,\n    interiors\n  },\n  data,\n  sizeScale,\n  sizeValue\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"mark\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"sphere\",\n    d: path({\n      type: 'Sphere'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"graticules\",\n    d: path(graticule())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this), land.features.map(feature => /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"land\",\n    d: path(feature)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"interiors\",\n    d: path(interiors)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), data.map(d => {\n    const [x, y] = projection(d.coords);\n    return /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: x,\n      cy: y,\n      r: 50,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this);\n  })]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c = Markscity;\nvar _c;\n$RefreshReg$(_c, \"Markscity\");","map":{"version":3,"names":["geoNaturalEarth1","geoPath","geoGraticule","jsxDEV","_jsxDEV","projection","center","scale","translate","path","graticule","braunschweigCoords","Markscity","worldAtlas","land","interiors","data","sizeScale","sizeValue","className","children","d","type","fileName","_jsxFileName","lineNumber","columnNumber","features","map","feature","x","y","coords","cx","cy","r","stroke","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Markscity.js"],"sourcesContent":["import { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\n\nconst projection = geoNaturalEarth1()\n  .center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n  .scale(150000) // Adjust scale for zoom level; increase for more detail\n  .translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nconst braunschweigCoords = [10.527004, 52.210297];\n\nexport const Markscity = ({\n  worldAtlas: { land, interiors },\n  data,\n  sizeScale,\n  sizeValue\n}) => (\n  <g className=\"mark\">\n    <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n    <path className=\"graticules\" d={path(graticule())} />\n    {land.features.map(feature => (\n      <path className=\"land\" d={path(feature)} />\n    ))}\n    <path className=\"interiors\" d={path(interiors)} />\n    {data.map(d => {\n      const [x, y] = projection(d.coords);\n      return <circle \n                cx={x} \n                cy={y} \n                r={50}\n                stroke='black'\n                />;\n    })}\n  </g>\n  \n);"],"mappings":";AAAA,SAASA,gBAAgB,EAAEC,OAAO,EAAEC,YAAY,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,CAAC,CAClCM,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAAA,CAC/BC,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAMC,IAAI,GAAGR,OAAO,CAACI,UAAU,CAAC;AAChC,MAAMK,SAAS,GAAGR,YAAY,CAAC,CAAC;AAEhC,MAAMS,kBAAkB,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAC;EACxBC,UAAU,EAAE;IAAEC,IAAI;IAAEC;EAAU,CAAC;EAC/BC,IAAI;EACJC,SAAS;EACTC;AACF,CAAC,kBACCd,OAAA;EAAGe,SAAS,EAAC,MAAM;EAAAC,QAAA,gBACjBhB,OAAA;IAAMe,SAAS,EAAC,QAAQ;IAACE,CAAC,EAAEZ,IAAI,CAAC;MAAEa,IAAI,EAAE;IAAS,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACxDtB,OAAA;IAAMe,SAAS,EAAC,YAAY;IAACE,CAAC,EAAEZ,IAAI,CAACC,SAAS,CAAC,CAAC;EAAE;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACpDZ,IAAI,CAACa,QAAQ,CAACC,GAAG,CAACC,OAAO,iBACxBzB,OAAA;IAAMe,SAAS,EAAC,MAAM;IAACE,CAAC,EAAEZ,IAAI,CAACoB,OAAO;EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC3C,CAAC,eACFtB,OAAA;IAAMe,SAAS,EAAC,WAAW;IAACE,CAAC,EAAEZ,IAAI,CAACM,SAAS;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACjDV,IAAI,CAACY,GAAG,CAACP,CAAC,IAAI;IACb,MAAM,CAACS,CAAC,EAAEC,CAAC,CAAC,GAAG1B,UAAU,CAACgB,CAAC,CAACW,MAAM,CAAC;IACnC,oBAAO5B,OAAA;MACG6B,EAAE,EAAEH,CAAE;MACNI,EAAE,EAAEH,CAAE;MACNI,CAAC,EAAE,EAAG;MACNC,MAAM,EAAC;IAAO;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EACd,CAAC,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CAEJ;AAACW,EAAA,GAxBWzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}