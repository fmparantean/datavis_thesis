{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/DateHistogram/Marks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  circleRadius\n}) => {\n  if (!data || data.length === 0) {\n    console.warn(\"No data available for rendering!\");\n    return null; // Prevent rendering if data is empty\n  }\n\n  // console.log(\"Data in Marks:\", data.map(d => ({ DayOrder: d.DayOrder, HRV: yValue(d) }))); // Check values\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marksline\",\n    children: data.map((d, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: xScale([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][xValue(d)]) // Modified to use xValue for DayOrder\n      ,\n      cy: yScale(yValue(d)),\n      r: circleRadius,\n      fill: \"red\",\n      stroke: \"black\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["Marks","data","xScale","yScale","xValue","yValue","circleRadius","length","console","warn","_jsxDEV","className","children","map","d","index","cx","cy","r","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/DateHistogram/Marks.js"],"sourcesContent":["export const Marks = ({\n    data,\n    xScale,\n    yScale,\n    xValue,\n    yValue,\n    circleRadius\n}) => {\n    if (!data || data.length === 0) {\n        console.warn(\"No data available for rendering!\");\n        return null; // Prevent rendering if data is empty\n    }\n\n    // console.log(\"Data in Marks:\", data.map(d => ({ DayOrder: d.DayOrder, HRV: yValue(d) }))); // Check values\n\n    return (\n        <g className=\"marksline\">\n            {data.map((d, index) => (\n                <circle\n                    key={index}\n                    cx={xScale([\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][xValue(d)])} // Modified to use xValue for DayOrder\n                    cy={yScale(yValue(d))}\n                    r={circleRadius}\n                    fill=\"red\"\n                    stroke=\"black\"\n                />\n            ))}\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAO,MAAMA,KAAK,GAAGA,CAAC;EAClBC,IAAI;EACJC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC;AACJ,CAAC,KAAK;EACF,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;IAC5BC,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;IAChD,OAAO,IAAI,CAAC,CAAC;EACjB;;EAEA;;EAEA,oBACIC,OAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACnBX,IAAI,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACfL,OAAA;MAEIM,EAAE,EAAEd,MAAM,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAACE,MAAM,CAACU,CAAC,CAAC,CAAC,CAAE,CAAC;MAAA;MACvGG,EAAE,EAAEd,MAAM,CAACE,MAAM,CAACS,CAAC,CAAC,CAAE;MACtBI,CAAC,EAAEZ,YAAa;MAChBa,IAAI,EAAC,KAAK;MACVC,MAAM,EAAC;IAAO,GALTL,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMb,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACC,EAAA,GA7BWzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}