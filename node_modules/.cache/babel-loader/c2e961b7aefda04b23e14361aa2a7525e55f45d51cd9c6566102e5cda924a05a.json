{"ast":null,"code":"import React,{useState}from'react';// Import useState for state management\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Instructions=_ref=>{let{setCurrentPage}=_ref;const[isQGISChecked,setIsQGISChecked]=useState(false);// State for QGIS checkbox\nconst[isD3Checked,setIsD3Checked]=useState(false);// State for D3 checkbox\nconst[errorMessage,setErrorMessage]=useState('');// State for error message\nconst handleQGISRedirect=()=>{// Check if QGIS checkbox is checked\nif(!isQGISChecked){setErrorMessage('You must confirm that you have finished with the D3-React map before going to the questionnaire.');// Show error message if not checked\n}else{// Redirect to the questionnaire URL\nwindow.open(\"https://forms.gle/8BJUm4goDgqYuvCw7\",\"_blank\");}};const handleFinish=()=>{// Check if D3 checkbox is checked\nif(!isD3Checked){setErrorMessage('You must confirm that you have submitted the D3-React questionnaire before finishing this experiment.');// Show error message if not checked\n}else{setErrorMessage('');// Clear error message if checked\nsetCurrentPage('final');// Go to final page\n}};return/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How to Operate\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Again, if you see the these texts are covering the map, please ZOOM OUT (ctrl/commad -) your browser .\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The data on the hexbin map is based on the highlighted area that is marked on the histogram.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Move the brush extension (blue square) on the histogram to display and change the data in the hexbin map. You can slide it left or right, resize the brush by clicking and dragging on the edge, in or out.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"On the filters, you can choose your preferred data to display on the histogram and hexbin map. You can also choose the bin size of hexagonal shapes on the hexbin map.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Point your mouse at a specific hexagonal shape on the map to find out its mean value and how many data points are contained within.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"You do not have limited time to explore this map. Enjoy before you go to the D3-React questionnaire and finish this experiment.\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{margin:'10px',marginTop:'50px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isQGISChecked,onChange:()=>{setIsQGISChecked(!isQGISChecked);setErrorMessage('');// Clear error message when checkbox changes\n}}),/*#__PURE__*/_jsx(\"label\",{style:{marginLeft:'5px'},children:\"I have finished with the D3-React map and I'm ready to fill in the questionnaire.\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleQGISRedirect// Function to redirect to the questionnaire\n,className:\"d3-que\",style:{marginLeft:'0px',padding:'10px 20px'}// Button styling\n,children:\"Go to D3-React Questionnaire\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isD3Checked,onChange:()=>{setIsD3Checked(!isD3Checked);setErrorMessage('');// Clear error message on change\n}}),/*#__PURE__*/_jsx(\"label\",{style:{marginLeft:'5px',marginTop:'20px'},children:\"I have submitted the D3-React questionnaire in the Google Form.\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFinish// Calls the updated handleFinish function\n,className:\"backd3\",style:{marginLeft:'20px',padding:'10px 20px'}// Button styling\n,children:\"Finish\"}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',marginTop:'10px'},children:errorMessage})]})]});};export default Instructions;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Instructions","_ref","setCurrentPage","isQGISChecked","setIsQGISChecked","isD3Checked","setIsD3Checked","errorMessage","setErrorMessage","handleQGISRedirect","window","open","handleFinish","className","children","style","margin","marginTop","type","checked","onChange","marginLeft","onClick","padding","color"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/Instructions.js"],"sourcesContent":["import React, { useState } from 'react'; // Import useState for state management\n\nconst Instructions = ({ setCurrentPage }) => {\n    const [isQGISChecked, setIsQGISChecked] = useState(false); // State for QGIS checkbox\n    const [isD3Checked, setIsD3Checked] = useState(false); // State for D3 checkbox\n    const [errorMessage, setErrorMessage] = useState(''); // State for error message\n\n    const handleQGISRedirect = () => {\n        // Check if QGIS checkbox is checked\n        if (!isQGISChecked) {\n            setErrorMessage('You must confirm that you have finished with the D3-React map before going to the questionnaire.'); // Show error message if not checked\n        } else {\n            // Redirect to the questionnaire URL\n            window.open(\"https://forms.gle/8BJUm4goDgqYuvCw7\", \"_blank\");\n        }\n    };\n\n    const handleFinish = () => {\n        // Check if D3 checkbox is checked\n        if (!isD3Checked) {\n            setErrorMessage('You must confirm that you have submitted the D3-React questionnaire before finishing this experiment.'); // Show error message if not checked\n        } else {\n            setErrorMessage(''); // Clear error message if checked\n            setCurrentPage('final'); // Go to final page\n        }\n    };\n\n    return (\n        <div className=\"instructions\">\n            <h3>How to Operate</h3>\n            <ul>\n                <li>Again, if you see the these texts are covering the map, please ZOOM OUT (ctrl/commad -) your browser .</li>\n                <li>The data on the hexbin map is based on the highlighted area that is marked on the histogram.</li>\n                <li>Move the brush extension (blue square) on the histogram to display and change the data in the hexbin map. You can slide it left or right, resize the brush by clicking and dragging on the edge, in or out.</li>\n                <li>On the filters, you can choose your preferred data to display on the histogram and hexbin map. You can also choose the bin size of hexagonal shapes on the hexbin map.</li>\n                <li>Point your mouse at a specific hexagonal shape on the map to find out its mean value and how many data points are contained within.</li>\n                <li>You do not have limited time to explore this map. Enjoy before you go to the D3-React questionnaire and finish this experiment.</li>\n            </ul>\n\n            {/* Checkboxes and Buttons */}\n            <div style={{ margin: '10px', marginTop: '50px' }}>\n                {/* Checkbox for Go to D3-React Questionnaire */}\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        checked={isQGISChecked}\n                        onChange={() => {\n                            setIsQGISChecked(!isQGISChecked);\n                            setErrorMessage(''); // Clear error message when checkbox changes\n                        }}\n                    />\n                    <label style={{ marginLeft: '5px' }}>\n                        I have finished with the D3-React map and I'm ready to fill in the questionnaire.\n                    </label>\n                </div>\n\n                <button\n                    onClick={handleQGISRedirect} // Function to redirect to the questionnaire\n                    className=\"d3-que\"\n                    style={{ marginLeft: '0px', padding: '10px 20px' }} // Button styling\n                >\n                    Go to D3-React Questionnaire\n                </button>\n\n                {/* Checkbox for Finish button */}\n                <div>\n                    <input\n                        type=\"checkbox\"\n                        checked={isD3Checked}\n                        onChange={() => {\n                            setIsD3Checked(!isD3Checked);\n                            setErrorMessage(''); // Clear error message on change\n                        }}\n                    />\n                    <label style={{ marginLeft: '5px', marginTop: '20px' }}>\n                        I have submitted the D3-React questionnaire in the Google Form.\n                    </label>\n                </div>\n\n                <button\n                    onClick={handleFinish} // Calls the updated handleFinish function\n                    className=\"backd3\"\n                    style={{ marginLeft: '20px', padding: '10px 20px' }} // Button styling\n                >\n                    Finish\n                </button>\n\n                {/* Display Error Message */}\n                {errorMessage && (\n                    <div style={{ color: 'red', marginTop: '10px' }}>\n                        {errorMessage}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Instructions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}