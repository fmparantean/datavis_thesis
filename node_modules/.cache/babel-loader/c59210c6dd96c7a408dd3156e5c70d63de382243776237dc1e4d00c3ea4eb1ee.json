{"ast":null,"code":"import React,{useEffect}from'react';import*as d3 from'd3';import{jsx as _jsx}from\"react/jsx-runtime\";const ColorLegend=_ref=>{let{colorScale}=_ref;useEffect(()=>{const svg=d3.select('#color-legend').attr(\"width\",70)// Adjust width for vertical layout\n.attr(\"height\",300);// Increase height\nconst legendWidth=20;// Width for the gradient\nconst legendHeight=100;// Height for the gradient\nsvg.selectAll(\"*\").remove();// Clear previous content\n// Add gradient\nconst gradient=svg.append(\"defs\").append(\"linearGradient\").attr(\"id\",\"gradient\").attr(\"x1\",\"0%\").attr(\"y1\",\"0%\").attr(\"x2\",\"0%\")// Vertical gradient\n.attr(\"y2\",\"100%\");// Get min and max values from the color scale domain\nconst domain=colorScale.domain();const minValue=domain[0];const maxValue=domain[domain.length-1];// Create gradient stops based on the full domain\nconst numStops=5;// Define how many stops you want\nfor(let i=0;i<=numStops;i++){const value=minValue+i/numStops*(maxValue-minValue);// Calculate value for this stop\ngradient.append(\"stop\").attr(\"offset\",`${i/numStops*100}%`).attr(\"stop-color\",colorScale(value));// Color from scale\n}// Draw gradient rectangle\nsvg.append(\"rect\").attr(\"class\",\"gradient-rect\")// Class for gradient rectangle\n.attr(\"x\",0).attr(\"y\",20)// Positioning from the top\n.attr(\"width\",legendWidth).attr(\"height\",legendHeight).style(\"fill\",\"url(#gradient)\");// Add tick labels\nconst ticks=colorScale.ticks(numStops);// Adjust number of ticks\nticks.forEach((tick,index)=>{svg.append(\"text\").attr(\"class\",\"legend-tick\")// Class for tick labels\n.attr(\"x\",legendWidth+5)// Position to the right of the gradient\n.attr(\"y\",index/(ticks.length-1)*legendHeight+20)// Vertically aligned with the stops\n.attr(\"text-anchor\",\"start\")// Align to start\n.text(tick.toFixed(2));// Format HRV value\n});},[colorScale]);return/*#__PURE__*/_jsx(\"svg\",{id:\"color-legend\"});// Placeholder for the legend\n};export default ColorLegend;","map":{"version":3,"names":["React","useEffect","d3","jsx","_jsx","ColorLegend","_ref","colorScale","svg","select","attr","legendWidth","legendHeight","selectAll","remove","gradient","append","domain","minValue","maxValue","length","numStops","i","value","style","ticks","forEach","tick","index","text","toFixed","id"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/ColorLegend.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ColorLegend = ({ colorScale }) => {\n    useEffect(() => {\n        const svg = d3.select('#color-legend')\n            .attr(\"width\", 70)  // Adjust width for vertical layout\n            .attr(\"height\", 300); // Increase height\n\n        const legendWidth = 20; // Width for the gradient\n        const legendHeight = 100; // Height for the gradient\n        svg.selectAll(\"*\").remove(); // Clear previous content\n\n        // Add gradient\n        const gradient = svg.append(\"defs\")\n            .append(\"linearGradient\")\n            .attr(\"id\", \"gradient\")\n            .attr(\"x1\", \"0%\")\n            .attr(\"y1\", \"0%\")\n            .attr(\"x2\", \"0%\") // Vertical gradient\n            .attr(\"y2\", \"100%\");\n\n        // Get min and max values from the color scale domain\n        const domain = colorScale.domain();\n        const minValue = domain[0];\n        const maxValue = domain[domain.length - 1];\n\n        // Create gradient stops based on the full domain\n        const numStops = 5; // Define how many stops you want\n        for (let i = 0; i <= numStops; i++) {\n            const value = minValue + (i / numStops) * (maxValue - minValue); // Calculate value for this stop\n            \n            gradient.append(\"stop\")\n                .attr(\"offset\", `${(i / numStops) * 100}%`)\n                .attr(\"stop-color\", colorScale(value)); // Color from scale\n        }\n\n        // Draw gradient rectangle\n        svg.append(\"rect\")\n            .attr(\"class\", \"gradient-rect\") // Class for gradient rectangle\n            .attr(\"x\", 0)\n            .attr(\"y\", 20) // Positioning from the top\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight)\n            .style(\"fill\", \"url(#gradient)\");\n\n        // Add tick labels\n        const ticks = colorScale.ticks(numStops); // Adjust number of ticks\n        ticks.forEach((tick, index) => {\n            svg.append(\"text\")\n                .attr(\"class\", \"legend-tick\") // Class for tick labels\n                .attr(\"x\", legendWidth + 5) // Position to the right of the gradient\n                .attr(\"y\", (index / (ticks.length - 1)) * legendHeight + 20) // Vertically aligned with the stops\n                .attr(\"text-anchor\", \"start\") // Align to start\n                .text(tick.toFixed(2)); // Format HRV value\n        });\n\n    }, [colorScale]);\n\n    return <svg id=\"color-legend\"></svg>; // Placeholder for the legend\n};\n\nexport default ColorLegend;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}