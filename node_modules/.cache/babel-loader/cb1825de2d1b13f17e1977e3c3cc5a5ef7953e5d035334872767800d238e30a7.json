{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      const color = d3.scaleLinear().domain([0, d3.max(bins, d => d.length)]) // Scale based on max bin length\n      .range([\"lightblue\", \"darkblue\"]); // Color range\n\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          setTooltip({\n            display: 'block',\n            x: e.clientX,\n            y: e.clientY,\n            content: `Count: ${bin.length}`\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3Hexbin().hexagon(30) // Create hexagon shape\n          ,\n          transform: `translate(${bin.x}, ${bin.y})` // Position using centroid\n          ,\n          fill: color(bin.length) // Fill based on count\n          ,\n          stroke: \"black\",\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"t3loIxifP20EYnmyqFVGLDJPILQ=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","hexbin","d3Hexbin","d3","jsxDEV","_jsxDEV","Marks","bins","_s","tooltip","setTooltip","className","children","map","bin","i","color","scaleLinear","domain","max","d","length","range","onMouseEnter","e","display","x","clientX","y","clientY","content","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\n\nexport const Marks = ({ bins }) => {\n    const [tooltip, setTooltip] = useState({});\n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                const color = d3.scaleLinear()\n                    .domain([0, d3.max(bins, d => d.length)]) // Scale based on max bin length\n                    .range([\"lightblue\", \"darkblue\"]); // Color range\n\n                return (\n                    <g key={i} \n                       onMouseEnter={(e) => {\n                           setTooltip({ display: 'block', x: e.clientX, y: e.clientY, content: `Count: ${bin.length}` });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                        <path\n                            d={d3Hexbin().hexagon(30)} // Create hexagon shape\n                            transform={`translate(${bin.x}, ${bin.y})`} // Position using centroid\n                            fill={color(bin.length)} // Fill based on count\n                            stroke=\"black\"\n                            strokeWidth={1}\n                        />\n                    </g>\n                );\n            })}\n            {/* Tooltip */}\n            <text x={tooltip.x} y={tooltip.y} style={{ display: tooltip.display, pointerEvents: 'none' }} fill=\"black\" fontSize=\"12\" textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,IAAIC,QAAQ,QAAQ,WAAW;AAC9C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,oBACIK,OAAA;IAAGM,SAAS,EAAC,OAAO;IAAAC,QAAA,GACfL,IAAI,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAClB,MAAMC,KAAK,GAAGb,EAAE,CAACc,WAAW,CAAC,CAAC,CACzBC,MAAM,CAAC,CAAC,CAAC,EAAEf,EAAE,CAACgB,GAAG,CAACZ,IAAI,EAAEa,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAAA,CACzCC,KAAK,CAAC,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;;MAEvC,oBACIjB,OAAA;QACGkB,YAAY,EAAGC,CAAC,IAAK;UACjBd,UAAU,CAAC;YAAEe,OAAO,EAAE,OAAO;YAAEC,CAAC,EAAEF,CAAC,CAACG,OAAO;YAAEC,CAAC,EAAEJ,CAAC,CAACK,OAAO;YAAEC,OAAO,EAAE,UAAUhB,GAAG,CAACO,MAAM;UAAG,CAAC,CAAC;QACjG,CAAE;QACFU,YAAY,EAAEA,CAAA,KAAM;UAChBrB,UAAU,CAAC;YAAEe,OAAO,EAAE;UAAO,CAAC,CAAC;QACnC,CAAE;QAAAb,QAAA,eACDP,OAAA;UACIe,CAAC,EAAElB,QAAQ,CAAC,CAAC,CAAC8B,OAAO,CAAC,EAAE,CAAE,CAAC;UAAA;UAC3BC,SAAS,EAAE,aAAanB,GAAG,CAACY,CAAC,KAAKZ,GAAG,CAACc,CAAC,GAAI,CAAC;UAAA;UAC5CM,IAAI,EAAElB,KAAK,CAACF,GAAG,CAACO,MAAM,CAAE,CAAC;UAAA;UACzBc,MAAM,EAAC,OAAO;UACdC,WAAW,EAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC,GAbEzB,CAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcN,CAAC;IAEZ,CAAC,CAAC,eAEFnC,OAAA;MAAMqB,CAAC,EAAEjB,OAAO,CAACiB,CAAE;MAACE,CAAC,EAAEnB,OAAO,CAACmB,CAAE;MAACa,KAAK,EAAE;QAAEhB,OAAO,EAAEhB,OAAO,CAACgB,OAAO;QAAEiB,aAAa,EAAE;MAAO,CAAE;MAACR,IAAI,EAAC,OAAO;MAACS,QAAQ,EAAC,IAAI;MAACC,UAAU,EAAC,QAAQ;MAAAhC,QAAA,EACvIH,OAAO,CAACqB;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEZ,CAAC;AAAChC,EAAA,CAlCWF,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}