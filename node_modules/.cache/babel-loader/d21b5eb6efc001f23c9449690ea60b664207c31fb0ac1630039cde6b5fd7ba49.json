{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  bins\n}) => {\n  _s();\n  const [tooltip, setTooltip] = useState({\n    display: 'none'\n  });\n\n  // Define the color scale\n  const colorScale = d3.scaleLinear().domain([0, 10, 20, 50, d3.max(bins, d => d.length)]) // Set your thresholds\n  .range(['white', 'lightblue', 'blue', 'darkblue']); // Set your color range\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: [bins.map((bin, i) => {\n      // Use the color scale to get the fill color based on bin length\n      const fillColor = colorScale(bin.length);\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        onMouseEnter: e => {\n          setTooltip({\n            display: 'block',\n            x: e.clientX,\n            y: e.clientY,\n            content: `Count: ${bin.length}`\n          });\n        },\n        onMouseLeave: () => {\n          setTooltip({\n            display: 'none'\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: d3Hexbin().hexagon(15) // Adjust the hexagon size\n          ,\n          transform: `translate(${bin.x}, ${bin.y})` // Position using centroid\n          ,\n          fill: fillColor // Apply the dynamic color\n          ,\n          stroke: \"black\" // Stroke color\n          ,\n          strokeWidth: 1 // Stroke width\n          ,\n          opacity: 0.7 // Adjust opacity if desired\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: tooltip.x,\n      y: tooltip.y,\n      style: {\n        display: tooltip.display,\n        pointerEvents: 'none'\n      },\n      fill: \"black\",\n      fontSize: \"12\",\n      textAnchor: \"middle\",\n      children: tooltip.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Marks, \"cFcvUXz/VuJYq8f1l2ttuLcSJIo=\");\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["React","useState","hexbin","d3Hexbin","d3","jsxDEV","_jsxDEV","Marks","bins","_s","tooltip","setTooltip","display","colorScale","scaleLinear","domain","max","d","length","range","className","children","map","bin","i","fillColor","onMouseEnter","e","x","clientX","y","clientY","content","onMouseLeave","hexagon","transform","fill","stroke","strokeWidth","opacity","fileName","_jsxFileName","lineNumber","columnNumber","style","pointerEvents","fontSize","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 3/src/BubbleMap/Marks.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { hexbin as d3Hexbin } from 'd3-hexbin';\nimport * as d3 from 'd3';\n\nexport const Marks = ({ bins }) => {\n    const [tooltip, setTooltip] = useState({ display: 'none' });\n\n    // Define the color scale\n    const colorScale = d3.scaleLinear()\n        .domain([0, 10, 20, 50, d3.max(bins, d => d.length)]) // Set your thresholds\n        .range(['white', 'lightblue', 'blue', 'darkblue']); // Set your color range\n\n    return (\n        <g className=\"marks\">\n            {bins.map((bin, i) => {\n                // Use the color scale to get the fill color based on bin length\n                const fillColor = colorScale(bin.length);\n\n                return (\n                    <g key={i} \n                       onMouseEnter={(e) => {\n                           setTooltip({\n                               display: 'block',\n                               x: e.clientX,\n                               y: e.clientY,\n                               content: `Count: ${bin.length}`,\n                           });\n                       }}\n                       onMouseLeave={() => {\n                           setTooltip({ display: 'none' });\n                       }}>\n                    <path\n                        d={d3Hexbin().hexagon(15)} // Adjust the hexagon size\n                        transform={`translate(${bin.x}, ${bin.y})`} // Position using centroid\n                        fill={fillColor} // Apply the dynamic color\n                        stroke=\"black\" // Stroke color\n                        strokeWidth={1} // Stroke width\n                        opacity={0.7} // Adjust opacity if desired\n                    />\n                    </g>\n                );\n            })}\n            {/* Tooltip */}\n            <text \n                x={tooltip.x} \n                y={tooltip.y} \n                style={{ display: tooltip.display, pointerEvents: 'none' }} \n                fill=\"black\" \n                fontSize=\"12\" \n                textAnchor=\"middle\">\n                {tooltip.content}\n            </text>\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,IAAIC,QAAQ,QAAQ,WAAW;AAC9C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE;EAAO,CAAC,CAAC;;EAE3D;EACA,MAAMC,UAAU,GAAGT,EAAE,CAACU,WAAW,CAAC,CAAC,CAC9BC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAEX,EAAE,CAACY,GAAG,CAACR,IAAI,EAAES,CAAC,IAAIA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAAA,CACrDC,KAAK,CAAC,CAAC,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;;EAExD,oBACIb,OAAA;IAAGc,SAAS,EAAC,OAAO;IAAAC,QAAA,GACfb,IAAI,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAClB;MACA,MAAMC,SAAS,GAAGZ,UAAU,CAACU,GAAG,CAACL,MAAM,CAAC;MAExC,oBACIZ,OAAA;QACGoB,YAAY,EAAGC,CAAC,IAAK;UACjBhB,UAAU,CAAC;YACPC,OAAO,EAAE,OAAO;YAChBgB,CAAC,EAAED,CAAC,CAACE,OAAO;YACZC,CAAC,EAAEH,CAAC,CAACI,OAAO;YACZC,OAAO,EAAE,UAAUT,GAAG,CAACL,MAAM;UACjC,CAAC,CAAC;QACN,CAAE;QACFe,YAAY,EAAEA,CAAA,KAAM;UAChBtB,UAAU,CAAC;YAAEC,OAAO,EAAE;UAAO,CAAC,CAAC;QACnC,CAAE;QAAAS,QAAA,eACLf,OAAA;UACIW,CAAC,EAAEd,QAAQ,CAAC,CAAC,CAAC+B,OAAO,CAAC,EAAE,CAAE,CAAC;UAAA;UAC3BC,SAAS,EAAE,aAAaZ,GAAG,CAACK,CAAC,KAAKL,GAAG,CAACO,CAAC,GAAI,CAAC;UAAA;UAC5CM,IAAI,EAAEX,SAAU,CAAC;UAAA;UACjBY,MAAM,EAAC,OAAO,CAAC;UAAA;UACfC,WAAW,EAAE,CAAE,CAAC;UAAA;UAChBC,OAAO,EAAE,GAAI,CAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC,GAnBMnB,CAAC;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBN,CAAC;IAEZ,CAAC,CAAC,eAEFrC,OAAA;MACIsB,CAAC,EAAElB,OAAO,CAACkB,CAAE;MACbE,CAAC,EAAEpB,OAAO,CAACoB,CAAE;MACbc,KAAK,EAAE;QAAEhC,OAAO,EAAEF,OAAO,CAACE,OAAO;QAAEiC,aAAa,EAAE;MAAO,CAAE;MAC3DT,IAAI,EAAC,OAAO;MACZU,QAAQ,EAAC,IAAI;MACbC,UAAU,EAAC,QAAQ;MAAA1B,QAAA,EAClBX,OAAO,CAACsB;IAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEZ,CAAC;AAAClC,EAAA,CAlDWF,KAAK;AAAAyC,EAAA,GAALzC,KAAK;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}