{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Marks.js\";\nimport { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoNaturalEarth1().center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n.scale(150000) // Adjust scale for zoom level\n.translate([450, 300]); // Adjust based on your SVG dimensions\n\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\nexport const Marks = ({\n  worldAtlas: {\n    land,\n    interiors\n  },\n  data,\n  sizeScale,\n  sizeValue\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"marks\",\n  children: [/*#__PURE__*/_jsxDEV(\"image\", {\n    href: \"/Users/fmparantean/Desktop/brmap.png\" // Adjust the path as necessary\n    ,\n    x: \"0\",\n    y: \"0\",\n    width: \"900\" // Size matching your SVG width\n    ,\n    height: \"600\" // Size matching your SVG height\n    ,\n    style: {\n      opacity: 0.5\n    } // Adjust opacity if needed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"sphere\",\n    d: path({\n      type: 'Sphere'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"graticules\",\n    d: path(graticule())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), land.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"land\",\n    d: path(feature)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"interiors\",\n    d: path(interiors)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this), data.map((d, index) => {\n    const [x, y] = projection(d.coords); // Ensure coordinates are correct\n    return /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: x,\n      cy: y,\n      r: sizeScale(sizeValue(d)),\n      stroke: \"black\",\n      fill: \"steelblue\" // Fill color for the circles\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  })]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["geoNaturalEarth1","geoPath","geoGraticule","jsxDEV","_jsxDEV","projection","center","scale","translate","path","graticule","Marks","worldAtlas","land","interiors","data","sizeScale","sizeValue","className","children","href","x","y","width","height","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","d","type","features","map","feature","index","coords","cx","cy","r","stroke","fill","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Marks.js"],"sourcesContent":["import { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\n\nconst projection = geoNaturalEarth1()\n  .center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n  .scale(150000) // Adjust scale for zoom level\n  .translate([450, 300]); // Adjust based on your SVG dimensions\n\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nexport const Marks = ({\n  worldAtlas: { land, interiors },\n  data,\n  sizeScale,\n  sizeValue\n}) => (\n  <g className=\"marks\">\n    {/* Add background image */}\n    <image \n      href=\"/Users/fmparantean/Desktop/brmap.png\" // Adjust the path as necessary\n      x=\"0\" \n      y=\"0\" \n      width=\"900\" // Size matching your SVG width\n      height=\"600\" // Size matching your SVG height\n      style={{ opacity: 0.5 }} // Adjust opacity if needed\n    />\n    \n    {/* D3 Graphics */}\n    <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n    <path className=\"graticules\" d={path(graticule())} />\n    {land.features.map((feature, index) => (\n      <path key={index} className=\"land\" d={path(feature)} />\n    ))}\n    <path className=\"interiors\" d={path(interiors)} />\n    {data.map((d, index) => {\n      const [x, y] = projection(d.coords); // Ensure coordinates are correct\n      return (\n        <circle \n          key={index}\n          cx={x} \n          cy={y} \n          r={sizeScale(sizeValue(d))}\n          stroke=\"black\" \n          fill=\"steelblue\" // Fill color for the circles\n        />\n      );\n    })}\n  </g>\n);"],"mappings":";AAAA,SAASA,gBAAgB,EAAEC,OAAO,EAAEC,YAAY,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,CAAC,CAClCM,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAAA,CAC/BC,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE1B,MAAMC,IAAI,GAAGR,OAAO,CAACI,UAAU,CAAC;AAChC,MAAMK,SAAS,GAAGR,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMS,KAAK,GAAGA,CAAC;EACpBC,UAAU,EAAE;IAAEC,IAAI;IAAEC;EAAU,CAAC;EAC/BC,IAAI;EACJC,SAAS;EACTC;AACF,CAAC,kBACCb,OAAA;EAAGc,SAAS,EAAC,OAAO;EAAAC,QAAA,gBAElBf,OAAA;IACEgB,IAAI,EAAC,sCAAsC,CAAC;IAAA;IAC5CC,CAAC,EAAC,GAAG;IACLC,CAAC,EAAC,GAAG;IACLC,KAAK,EAAC,KAAK,CAAC;IAAA;IACZC,MAAM,EAAC,KAAK,CAAC;IAAA;IACbC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAI,CAAE,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC,eAGF1B,OAAA;IAAMc,SAAS,EAAC,QAAQ;IAACa,CAAC,EAAEtB,IAAI,CAAC;MAAEuB,IAAI,EAAE;IAAS,CAAC;EAAE;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACxD1B,OAAA;IAAMc,SAAS,EAAC,YAAY;IAACa,CAAC,EAAEtB,IAAI,CAACC,SAAS,CAAC,CAAC;EAAE;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACpDjB,IAAI,CAACoB,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChChC,OAAA;IAAkBc,SAAS,EAAC,MAAM;IAACa,CAAC,EAAEtB,IAAI,CAAC0B,OAAO;EAAE,GAAzCC,KAAK;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsC,CACvD,CAAC,eACF1B,OAAA;IAAMc,SAAS,EAAC,WAAW;IAACa,CAAC,EAAEtB,IAAI,CAACK,SAAS;EAAE;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACjDf,IAAI,CAACmB,GAAG,CAAC,CAACH,CAAC,EAAEK,KAAK,KAAK;IACtB,MAAM,CAACf,CAAC,EAAEC,CAAC,CAAC,GAAGjB,UAAU,CAAC0B,CAAC,CAACM,MAAM,CAAC,CAAC,CAAC;IACrC,oBACEjC,OAAA;MAEEkC,EAAE,EAAEjB,CAAE;MACNkB,EAAE,EAAEjB,CAAE;MACNkB,CAAC,EAAExB,SAAS,CAACC,SAAS,CAACc,CAAC,CAAC,CAAE;MAC3BU,MAAM,EAAC,OAAO;MACdC,IAAI,EAAC,WAAW,CAAC;IAAA,GALZN,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMX,CAAC;EAEN,CAAC,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACJ;AAACa,EAAA,GAtCWhC,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}