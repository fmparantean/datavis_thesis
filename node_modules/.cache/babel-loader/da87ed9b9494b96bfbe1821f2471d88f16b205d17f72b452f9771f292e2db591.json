{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 5/src/HexbinMap/Markscity.js\";\nimport { geoNaturalEarth1 } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Width = 900;\nconst Height = 750;\nconst projection = geoNaturalEarth1().center([10.537004, 52.210297]).scale(160000).translate([Width / 2, Height / 2]);\nconst locations = [{\n  name: \"DLR\",\n  coords: [10.5608, 52.3145]\n}, {\n  name: \"Braunschweig Rathaus\",\n  coords: [10.5263, 52.2643]\n}, {\n  name: \"Braunschweig Hbf\",\n  coords: [10.5396, 52.2520]\n}, {\n  name: \"Wolfenb端ttel Banhoff\",\n  coords: [10.5320, 52.1592]\n}, {\n  name: \"Wolfenb端ttel Schloss\",\n  coords: [10.5316, 52.1627]\n}];\nexport const Markscity = () => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"markscity\",\n  children: locations.map((location, index) => {\n    const [x, y] = projection(location.coords); // Project the coordinates\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: x,\n        cy: y,\n        r: 4,\n        fill: \"black\" // Set fill color to black\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        className: \"braunschweig\",\n        textAnchor: \"left\" // Center the text\n        ,\n        x: x + 6,\n        y: y + 2 // Position text above the circle\n        ,\n        children: location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 3\n}, this);\n_c = Markscity;\nvar _c;\n$RefreshReg$(_c, \"Markscity\");","map":{"version":3,"names":["geoNaturalEarth1","jsxDEV","_jsxDEV","Width","Height","projection","center","scale","translate","locations","name","coords","Markscity","className","children","map","location","index","x","y","cx","cy","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/HexbinMap/Markscity.js"],"sourcesContent":["import { geoNaturalEarth1 } from 'd3';\n\n\n  const Width = 900;\n  const Height = 750;\n\n  const projection = geoNaturalEarth1()\n      .center([10.537004, 52.210297])\n      .scale(160000)\n      .translate([Width / 2, Height / 2]);\n\nconst locations = [\n  { name: \"DLR\", coords: [10.5608, 52.3145] },\n  { name: \"Braunschweig Rathaus\", coords: [10.5263, 52.2643] },\n  { name: \"Braunschweig Hbf\", coords: [10.5396, 52.2520] },\n  { name: \"Wolfenb端ttel Banhoff\", coords: [10.5320, 52.1592] },\n  { name: \"Wolfenb端ttel Schloss\", coords: [10.5316, 52.1627] },\n];\n\nexport const Markscity = () => (\n  <g className=\"markscity\">\n    {locations.map((location, index) => {\n      const [x, y] = projection(location.coords); // Project the coordinates\n      return (\n        <g key={index}> {/* Use index for unique keys */}\n          <circle \n            cx={x} \n            cy={y} \n            r={4}\n            fill=\"black\" // Set fill color to black\n          />\n          <text\n            className=\"braunschweig\"\n            textAnchor=\"left\" // Center the text\n            x={x + 6} \n            y={y +2 } // Position text above the circle\n          >\n            {location.name}\n          </text>\n        </g>\n      );\n    })}\n  </g>\n);"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,KAAK,GAAG,GAAG;AACjB,MAAMC,MAAM,GAAG,GAAG;AAElB,MAAMC,UAAU,GAAGL,gBAAgB,CAAC,CAAC,CAChCM,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAC9BC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAACL,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC,CAAC;AAEzC,MAAMK,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,KAAK;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;AAAE,CAAC,EAC3C;EAAED,IAAI,EAAE,sBAAsB;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;AAAE,CAAC,EAC5D;EAAED,IAAI,EAAE,kBAAkB;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;AAAE,CAAC,EACxD;EAAED,IAAI,EAAE,sBAAsB;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;AAAE,CAAC,EAC5D;EAAED,IAAI,EAAE,sBAAsB;EAAEC,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO;AAAE,CAAC,CAC7D;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,kBACvBV,OAAA;EAAGW,SAAS,EAAC,WAAW;EAAAC,QAAA,EACrBL,SAAS,CAACM,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;IAClC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAGd,UAAU,CAACW,QAAQ,CAACL,MAAM,CAAC,CAAC,CAAC;IAC5C,oBACET,OAAA;MAAAY,QAAA,GAAe,GAAC,eACdZ,OAAA;QACEkB,EAAE,EAAEF,CAAE;QACNG,EAAE,EAAEF,CAAE;QACNG,CAAC,EAAE,CAAE;QACLC,IAAI,EAAC,OAAO,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACFzB,OAAA;QACEW,SAAS,EAAC,cAAc;QACxBe,UAAU,EAAC,MAAM,CAAC;QAAA;QAClBV,CAAC,EAAEA,CAAC,GAAG,CAAE;QACTC,CAAC,EAAEA,CAAC,GAAE,CAAG,CAAC;QAAA;QAAAL,QAAA,EAETE,QAAQ,CAACN;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA,GAdDV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CAAC;EAER,CAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACJ;AAACE,EAAA,GAxBWjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}