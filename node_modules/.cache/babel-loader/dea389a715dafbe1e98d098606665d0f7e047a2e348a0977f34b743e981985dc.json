{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/Marks.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Marks = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  circleRadius,\n  brushExtent\n}) => {\n  if (!data || data.length === 0) {\n    console.warn(\"No data available for rendering!\");\n    return null; // Prevent rendering if data is empty\n  }\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marksline\",\n    children: data.map((d, index) => {\n      // Optionally style based on the brush extent\n      const isSelected = brushExtent ? brushExtent.includes(orderedDays[xValue(d)]) : true;\n      return /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: xScale(orderedDays[xValue(d)]) // Keep it mapped to DayOrder\n        ,\n        cy: yScale(yValue(d)),\n        r: circleRadius,\n        fill: isSelected ? \"red\" : \"lightgrey\" // Change color based on selection\n        ,\n        stroke: \"black\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["Marks","data","xScale","yScale","xValue","yValue","circleRadius","brushExtent","length","console","warn","_jsxDEV","className","children","map","d","index","isSelected","includes","orderedDays","cx","cy","r","fill","stroke","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 5/src/DateHistogram/Marks.js"],"sourcesContent":["export const Marks = ({\n    data,\n    xScale,\n    yScale,\n    xValue,\n    yValue,\n    circleRadius,\n    brushExtent\n}) => {\n    if (!data || data.length === 0) {\n        console.warn(\"No data available for rendering!\");\n        return null; // Prevent rendering if data is empty\n    }\n\n    return (\n        <g className=\"marksline\">\n            {data.map((d, index) => {\n                // Optionally style based on the brush extent\n                const isSelected = brushExtent ? brushExtent.includes(orderedDays[xValue(d)]) : true; \n                \n                return (\n                    <circle\n                        key={index}\n                        cx={xScale(orderedDays[xValue(d)])} // Keep it mapped to DayOrder\n                        cy={yScale(yValue(d))}\n                        r={circleRadius}\n                        fill={isSelected ? \"red\" : \"lightgrey\"} // Change color based on selection\n                        stroke=\"black\"\n                    />\n                );\n            })}\n        </g>\n    );\n};"],"mappings":";;AAAA,OAAO,MAAMA,KAAK,GAAGA,CAAC;EAClBC,IAAI;EACJC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC,MAAM;EACNC,YAAY;EACZC;AACJ,CAAC,KAAK;EACF,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE;IAC5BC,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;IAChD,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,oBACIC,OAAA;IAAGC,SAAS,EAAC,WAAW;IAAAC,QAAA,EACnBZ,IAAI,CAACa,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MACpB;MACA,MAAMC,UAAU,GAAGV,WAAW,GAAGA,WAAW,CAACW,QAAQ,CAACC,WAAW,CAACf,MAAM,CAACW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;MAEpF,oBACIJ,OAAA;QAEIS,EAAE,EAAElB,MAAM,CAACiB,WAAW,CAACf,MAAM,CAACW,CAAC,CAAC,CAAC,CAAE,CAAC;QAAA;QACpCM,EAAE,EAAElB,MAAM,CAACE,MAAM,CAACU,CAAC,CAAC,CAAE;QACtBO,CAAC,EAAEhB,YAAa;QAChBiB,IAAI,EAAEN,UAAU,GAAG,KAAK,GAAG,WAAY,CAAC;QAAA;QACxCO,MAAM,EAAC;MAAO,GALTR,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACC,EAAA,GAjCW7B,KAAK;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}