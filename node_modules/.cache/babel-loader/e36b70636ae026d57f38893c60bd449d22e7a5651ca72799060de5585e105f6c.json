{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Welcome from './Welcome';\nimport QGIS from './QGIS';\nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js';\nimport * as d3 from 'd3';\nimport Filters from './Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('declaration'); // Start with declaration\n\n  // Calls must be unconditional\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  const [participant, setParticipant] = useState(\"All\");\n  const [gender, setGender] = useState(\"Both\");\n  const [modeButton, setModeButton] = useState(\"Both\");\n  const [yValueField, setYValueField] = useState(\"HRV\");\n  const [hexbinSize, setHexbinSize] = useState(5);\n\n  // Handle transitions\n  const handleD3React = () => setCurrentPage('mainapp'); // Go to main app\n  const handleQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n  const handleBackToWelcome = () => setCurrentPage('welcome'); // Go back to welcome screen\n  const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to welcome screen after declaration\n\n  // Render the current page based on state\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'declaration':\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this);\n      case 'mainapp':\n        return renderMainApp();\n      case 'qgis':\n        return /*#__PURE__*/_jsxDEV(QGIS, {\n          onBack: handleBackToWelcome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Welcome, {\n          onD3React: handleD3React,\n          onQGIS: handleQGIS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  // Main app rendering logic\n  const renderMainApp = () => {\n    if (!worldAtlas || !data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: height / 2,\n          textAnchor: \"middle\",\n          fontSize: \"14\",\n          fill: \"black\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n\n    // Get unique participants dynamically and sort them\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant))).sort((a, b) => a - b);\n\n    // Filter Data based on selected criteria\n    const filteredData = data.filter(d => {\n      const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n      const genderFilter = gender === \"Both\" || d.Gender === gender;\n      const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n      return participantFilter && genderFilter && modeButtonFilter;\n    });\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0]).range(['yellow', 'orange', 'red']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            participant: participant,\n            setParticipant: setParticipant,\n            gender: gender,\n            setGender: setGender,\n            modeButton: modeButton,\n            setModeButton: setModeButton,\n            yValueField: yValueField,\n            setYValueField: setYValueField,\n            uniqueParticipants: uniqueParticipants,\n            hexbinSize: hexbinSize,\n            setHexbinSize: setHexbinSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"bus.png\",\n            alt: \"bus Logo\",\n            style: {\n              width: '100px',\n              height: 'auto',\n              marginTop: '210px',\n              marginLeft: '35px',\n              alignSelf: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: width,\n          height: height,\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            x: width / 2,\n            y: 45,\n            textAnchor: \"middle\",\n            className: \"title\",\n            children: \"Travel Experience with Different Transportation Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n            id: \"map-image\",\n            href: \"datamap.png\",\n            x: 21,\n            y: 72,\n            height: height,\n            width: width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(0,30)`,\n            children: /*#__PURE__*/_jsxDEV(Hexbinmap, {\n              data: brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : [],\n              worldAtlas: worldAtlas,\n              yValueField: yValueField,\n              hexbinSize: hexbinSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(0, 700)`,\n            children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n              data: filteredData,\n              width: width,\n              height: dateHistogramSize * height,\n              setBrushExtent: setBrushExtent,\n              xValue: d => d.DayOrder,\n              yValueField: yValueField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(820, 550)`,\n            children: /*#__PURE__*/_jsxDEV(ColorLegend, {\n              colorScale: colorScale,\n              yValueField: yValueField,\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        style: {\n          flex: '0 0 300px',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to Operate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"1. Slide the brush extension on the histogram to show the data. You can resize the brush by clicking and dragging on the edge, left or right, to block the data you want to display on the hexbin map.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"2. On the filters, you can choose your preferred data to display on the histogram and hexbin map. You can also choose the size of hexagonal shapes on the hexbin map.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"aAX4ix9I75moTUcFya6VMfG4LsY=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","jsxDEV","_jsxDEV","width","height","dateHistogramSize","orderedDays","App","_s","currentPage","setCurrentPage","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","handleD3React","handleQGIS","handleBackToWelcome","handleStartDeclaration","renderPage","onStart","fileName","_jsxFileName","lineNumber","columnNumber","renderMainApp","onBack","onD3React","onQGIS","length","children","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","justifyContent","flex","className","src","alt","marginTop","marginLeft","alignSelf","id","href","transform","includes","DayOrder","xValue","padding","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; // Import the Declaration component\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration'); // Start with declaration\n\n    // Calls must be unconditional\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n\n    // Handle transitions\n    const handleD3React = () => setCurrentPage('mainapp'); // Go to main app\n    const handleQGIS = () => setCurrentPage('qgis'); // Go to QGIS page\n    const handleBackToWelcome = () => setCurrentPage('welcome'); // Go back to welcome screen\n    const handleStartDeclaration = () => setCurrentPage('welcome'); // Go to welcome screen after declaration\n\n    // Render the current page based on state\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'mainapp':\n                return renderMainApp();\n            case 'qgis':\n                return <QGIS onBack={handleBackToWelcome} />;\n            default:\n                return <Welcome onD3React={handleD3React} onQGIS={handleQGIS} />;\n        }\n    };\n\n    // Main app rendering logic\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        // Get unique participants dynamically and sort them\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        // Filter Data based on selected criteria\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                <div style={{ flex: 1 }}>\n                    <div className=\"filters\">\n                        <Filters \n                            participant={participant} \n                            setParticipant={setParticipant} \n                            gender={gender} \n                            setGender={setGender} \n                            modeButton={modeButton} \n                            setModeButton={setModeButton}\n                            yValueField={yValueField}\n                            setYValueField={setYValueField}\n                            uniqueParticipants={uniqueParticipants} \n                            hexbinSize={hexbinSize}\n                            setHexbinSize={setHexbinSize}\n                        />\n                        <img \n                            src=\"bus.png\" \n                            alt=\"bus Logo\" \n                            style={{ width: '100px', height: 'auto', marginTop: '210px', marginLeft: '35px', alignSelf: 'center' }} \n                        />\n                    </div>\n\n                    <svg width={width} height={height}>\n                        <text x={width / 2} y={45} textAnchor=\"middle\" className=\"title\">\n                            Travel Experience with Different Transportation Mode\n                        </text>\n                        <image \n                            id='map-image'\n                            href=\"datamap.png\" \n                            x={21}\n                            y={72} \n                            height={height} \n                            width={width} \n                        />\n\n                        <g transform={`translate(0,30)`}>\n                            <Hexbinmap \n                                data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                                worldAtlas={worldAtlas} \n                                yValueField={yValueField} \n                                hexbinSize={hexbinSize} \n                            />\n                        </g>\n                        <g transform={`translate(0, 700)`}>\n                            <DateHistogram\n                                data={filteredData} \n                                width={width}\n                                height={dateHistogramSize * height}\n                                setBrushExtent={setBrushExtent}\n                                xValue={d => d.DayOrder} \n                                yValueField={yValueField} \n                            />\n                        </g>\n                        <g transform={`translate(820, 550)`}>\n                            <ColorLegend \n                                colorScale={colorScale} \n                                yValueField={yValueField} \n                                data={filteredData}  \n                            /> \n                        </g>\n                    </svg>\n                </div>\n\n                {/* Instructions Section on the Right */}\n                <div className=\"instructions\" style={{ flex: '0 0 300px', padding: '20px' }}>\n                    <h3>How to Operate</h3>\n                    <p>1. Slide the brush extension on the histogram to show the data. You can resize the brush \n                    by clicking and dragging on the edge, left or right, to block the data you want to display on the hexbin map.</p>\n                    <p>2. On the filters, you can choose your preferred data to display on the histogram and hexbin map. \n                    You can also choose the size of hexagonal shapes on the hexbin map.</p>\n                </div>\n            </div>\n        );\n    };\n\n    return <div>{renderPage()}</div>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}