{"ast":null,"code":"import { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\nconst projection = geoNaturalEarth1().center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n.scale(150000) // Adjust scale for zoom level; increase for more detail\n.translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\n// export const Marks = ({\n//   worldAtlas: { land, interiors },\n//   data,\n//   sizeScale,\n//   sizeValue\n// }) => (\n//   <g className=\"marks\">\n//     {/* <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n//     <path className=\"graticules\" d={path(graticule())} /> */}\n//     {/* {land.features.map(feature => (\n//       <path className=\"land\" d={path(feature)} />\n//     ))}\n//     <path className=\"interiors\" d={path(interiors)} /> */}\n//     {data.map(d => {\n//       const [x, y] = projection(d.coords);\n//       return <circle             \n//                 cx={x} \n//                 cy={y} \n//                 r={sizeScale(sizeValue(d))}\n//                 stroke=\"black\" \n//                 />\n//                 ;\n//     })}\n//   </g>\n\n// );","map":{"version":3,"names":["geoNaturalEarth1","geoPath","geoGraticule","projection","center","scale","translate","path","graticule"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Marks.js"],"sourcesContent":["import { geoNaturalEarth1, geoPath, geoGraticule } from 'd3';\n\nconst projection = geoNaturalEarth1()\n  .center([10.527004, 52.210297]) // Center over Braunschweig, Germany\n  .scale(150000) // Adjust scale for zoom level; increase for more detail\n  .translate([450, 300]); // Adjust based on your SVG dimensions; // Original projection\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\n// export const Marks = ({\n//   worldAtlas: { land, interiors },\n//   data,\n//   sizeScale,\n//   sizeValue\n// }) => (\n//   <g className=\"marks\">\n//     {/* <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n//     <path className=\"graticules\" d={path(graticule())} /> */}\n//     {/* {land.features.map(feature => (\n//       <path className=\"land\" d={path(feature)} />\n//     ))}\n//     <path className=\"interiors\" d={path(interiors)} /> */}\n//     {data.map(d => {\n//       const [x, y] = projection(d.coords);\n//       return <circle             \n//                 cx={x} \n//                 cy={y} \n//                 r={sizeScale(sizeValue(d))}\n//                 stroke=\"black\" \n//                 />\n//                 ;\n//     })}\n//   </g>\n  \n// );"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,OAAO,EAAEC,YAAY,QAAQ,IAAI;AAE5D,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,CAAC,CAClCI,MAAM,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAAA,CAC/BC,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAMC,IAAI,GAAGN,OAAO,CAACE,UAAU,CAAC;AAChC,MAAMK,SAAS,GAAGN,YAAY,CAAC,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}