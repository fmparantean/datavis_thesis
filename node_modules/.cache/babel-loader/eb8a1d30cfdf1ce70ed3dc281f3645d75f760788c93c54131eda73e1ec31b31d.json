{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Marks.js\";\n// Marks.js\nimport { geoMercator, geoPath, geoGraticule } from 'd3'; // Use geoMercator for OSM\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projection = geoMercator().center([10.5268, 52.2665]) // Center over Braunschweig, Germany\n.scale(100000) // Adjust scale for zoom level\n.translate([450, 300]); // Adjust for your SVG dimensions\n\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\nexport const Marks = ({\n  worldAtlas: {\n    land,\n    interiors\n  },\n  data,\n  sizeScale,\n  sizeValue\n}) => /*#__PURE__*/_jsxDEV(\"g\", {\n  className: \"marks\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"sphere\",\n    d: path({\n      type: 'Sphere'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"graticules\",\n    d: path(graticule())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this), land.features.map((feature, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"land\",\n    d: path(feature)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n    className: \"interiors\",\n    d: path(interiors)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this), data.map((d, index) => {\n    const [longitude, latitude] = d.coords; // Ensure longitude, latitude order for projection\n    const [x, y] = projection([longitude, latitude]); // Project the coordinates\n    return /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: x,\n      cy: y,\n      r: sizeScale(sizeValue(d))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 20\n    }, this);\n  })]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 5\n}, this);\n_c = Marks;\nvar _c;\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"names":["geoMercator","geoPath","geoGraticule","jsxDEV","_jsxDEV","projection","center","scale","translate","path","graticule","Marks","worldAtlas","land","interiors","data","sizeScale","sizeValue","className","children","d","type","fileName","_jsxFileName","lineNumber","columnNumber","features","map","feature","index","longitude","latitude","coords","x","y","cx","cy","r","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Desktop/mixvisual 2/src/BubbleMap/Marks.js"],"sourcesContent":["// Marks.js\nimport { geoMercator, geoPath, geoGraticule } from 'd3'; // Use geoMercator for OSM\n\nconst projection = geoMercator()\n    .center([10.5268, 52.2665]) // Center over Braunschweig, Germany\n    .scale(100000) // Adjust scale for zoom level\n    .translate([450, 300]); // Adjust for your SVG dimensions\n\nconst path = geoPath(projection);\nconst graticule = geoGraticule();\n\nexport const Marks = ({\n    worldAtlas: { land, interiors },\n    data,\n    sizeScale,\n    sizeValue\n}) => (\n    <g className=\"marks\">\n        <path className=\"sphere\" d={path({ type: 'Sphere' })} />\n        <path className=\"graticules\" d={path(graticule())} />\n        {land.features.map((feature, index) => (\n            <path key={index} className=\"land\" d={path(feature)} />\n        ))}\n        <path className=\"interiors\" d={path(interiors)} />\n        {data.map((d, index) => {\n            const [longitude, latitude] = d.coords; // Ensure longitude, latitude order for projection\n            const [x, y] = projection([longitude, latitude]); // Project the coordinates\n            return <circle key={index} cx={x} cy={y} r={sizeScale(sizeValue(d))} />;\n        })}\n    </g>\n);"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,OAAO,EAAEC,YAAY,QAAQ,IAAI,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGL,WAAW,CAAC,CAAC,CAC3BM,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;AAAA,CAC3BC,KAAK,CAAC,MAAM,CAAC,CAAC;AAAA,CACdC,SAAS,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE5B,MAAMC,IAAI,GAAGR,OAAO,CAACI,UAAU,CAAC;AAChC,MAAMK,SAAS,GAAGR,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMS,KAAK,GAAGA,CAAC;EAClBC,UAAU,EAAE;IAAEC,IAAI;IAAEC;EAAU,CAAC;EAC/BC,IAAI;EACJC,SAAS;EACTC;AACJ,CAAC,kBACGb,OAAA;EAAGc,SAAS,EAAC,OAAO;EAAAC,QAAA,gBAChBf,OAAA;IAAMc,SAAS,EAAC,QAAQ;IAACE,CAAC,EAAEX,IAAI,CAAC;MAAEY,IAAI,EAAE;IAAS,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACxDrB,OAAA;IAAMc,SAAS,EAAC,YAAY;IAACE,CAAC,EAAEX,IAAI,CAACC,SAAS,CAAC,CAAC;EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACpDZ,IAAI,CAACa,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BzB,OAAA;IAAkBc,SAAS,EAAC,MAAM;IAACE,CAAC,EAAEX,IAAI,CAACmB,OAAO;EAAE,GAAzCC,KAAK;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAsC,CACzD,CAAC,eACFrB,OAAA;IAAMc,SAAS,EAAC,WAAW;IAACE,CAAC,EAAEX,IAAI,CAACK,SAAS;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,EACjDV,IAAI,CAACY,GAAG,CAAC,CAACP,CAAC,EAAES,KAAK,KAAK;IACpB,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGX,CAAC,CAACY,MAAM,CAAC,CAAC;IACxC,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,GAAG7B,UAAU,CAAC,CAACyB,SAAS,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClD,oBAAO3B,OAAA;MAAoB+B,EAAE,EAAEF,CAAE;MAACG,EAAE,EAAEF,CAAE;MAACG,CAAC,EAAErB,SAAS,CAACC,SAAS,CAACG,CAAC,CAAC;IAAE,GAAhDS,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CAAC;EAC3E,CAAC,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACN;AAACa,EAAA,GAnBW3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}