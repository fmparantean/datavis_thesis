{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Welcome from './Welcome';\nimport QGIS from './QGIS';\nimport Declaration from './Declaration';\nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js';\nimport * as d3 from 'd3';\nimport Filters from './Filters';\nimport Instructions from './Instructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nconst App = () => {\n  _s();\n  const [currentPage, setCurrentPage] = useState('declaration');\n  const [isChecked, setIsChecked] = useState(false);\n  const worldAtlas = useWorldAtlas();\n  const data = useData();\n  const [brushExtent, setBrushExtent] = useState(null);\n  const [participant, setParticipant] = useState(\"All\");\n  const [gender, setGender] = useState(\"Both\");\n  const [modeButton, setModeButton] = useState(\"Both\");\n  const [yValueField, setYValueField] = useState(\"HRV\");\n  const [hexbinSize, setHexbinSize] = useState(5);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleStartDeclaration = () => setCurrentPage('welcome');\n  const handleGoToQGIS = () => setCurrentPage('qgis');\n  const handleBackToD3React = () => setCurrentPage('mainapp');\n  const handleFinish = () => {\n    if (!isChecked) {\n      setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finishing this experiment.');\n    } else {\n      setErrorMessage('');\n      setCurrentPage('final');\n    }\n  };\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'declaration':\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n      case 'welcome':\n        return /*#__PURE__*/_jsxDEV(Welcome, {\n          onQGIS: handleGoToQGIS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n      case 'qgis':\n        return /*#__PURE__*/_jsxDEV(QGIS, {\n          onBack: handleBackToD3React\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n      case 'mainapp':\n        return renderMainApp();\n      case 'final':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-message\",\n          children: [\"Thank you for completing the experiment process!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), \"Best Regards,\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Febryeric M. Parantean\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Declaration, {\n          onStart: handleStartDeclaration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  const renderMainApp = () => {\n    if (!worldAtlas || !data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: width,\n        height: height,\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          x: width / 2,\n          y: height / 2,\n          textAnchor: \"middle\",\n          fontSize: \"14\",\n          fill: \"black\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n    const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant))).sort((a, b) => a - b);\n    const filteredData = data.filter(d => {\n      const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n      const genderFilter = gender === \"Both\" || d.Gender === gender;\n      const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n      return participantFilter && genderFilter && modeButtonFilter;\n    });\n    const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null);\n    const colorScale = scaleLinear().domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0]).range(['yellow', 'orange', 'red']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        style: {\n          flex: '0 0 250px',\n          padding: '20px',\n          backgroundColor: '#f0f0f0',\n          boxSizing: 'border-box'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          participant: participant,\n          setParticipant: setParticipant,\n          gender: gender,\n          setGender: setGender,\n          modeButton: modeButton,\n          setModeButton: setModeButton,\n          yValueField: yValueField,\n          setYValueField: setYValueField,\n          uniqueParticipants: uniqueParticipants,\n          hexbinSize: hexbinSize,\n          setHexbinSize: setHexbinSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"bus.png\",\n          alt: \"bus Logo\",\n          style: {\n            width: '100px',\n            height: 'auto',\n            marginTop: '210px',\n            marginLeft: '35px',\n            alignSelf: 'center'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: width,\n          height: height,\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            x: width / 2,\n            y: 45,\n            textAnchor: \"middle\",\n            className: \"title\",\n            children: \"Travel Experience with Different Transportation Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n            id: \"map-image\",\n            href: \"datamap.png\",\n            x: 21,\n            y: 72,\n            height: height,\n            width: width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(0,30)`,\n            children: /*#__PURE__*/_jsxDEV(Hexbinmap, {\n              data: brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : [],\n              worldAtlas: worldAtlas,\n              yValueField: yValueField,\n              hexbinSize: hexbinSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(0, 700)`,\n            children: /*#__PURE__*/_jsxDEV(DateHistogram, {\n              data: filteredData,\n              width: width,\n              height: dateHistogramSize * height,\n              setBrushExtent: setBrushExtent,\n              xValue: d => d.DayOrder,\n              yValueField: yValueField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            transform: `translate(820, 550)`,\n            children: /*#__PURE__*/_jsxDEV(ColorLegend, {\n              colorScale: colorScale,\n              yValueField: yValueField,\n              data: filteredData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '90px',\n            marginTop: '750px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isChecked,\n            onChange: () => {\n              setIsChecked(!isChecked);\n              setErrorMessage(''); // Clear error message on change\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginLeft: '5px'\n            },\n            children: \"I have finished and submitted the D3-React questionnaire in the Google Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red',\n              marginTop: '10px'\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://forms.gle/cBYJTJ2r9qEpcU8W8\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"d3-que\",\n                style: {\n                  marginLeft: '70px',\n                  padding: '10px 20px'\n                },\n                children: \"Go to D3-React Questionnaire\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleFinish,\n              className: \"backd3\",\n              style: {\n                marginLeft: '30px',\n                padding: '10px 20px'\n              },\n              children: \"Finish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 250px',\n          padding: '90px',\n          backgroundColor: '#f0f0f0',\n          boxSizing: 'border-box'\n        },\n        children: /*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 12\n  }, this);\n};\n_s(App, \"GLgf+v+UmUSjAsu8Gwo30hU/kQE=\", false, function () {\n  return [useWorldAtlas, useData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Welcome","QGIS","Declaration","useWorldAtlas","useData","Hexbinmap","DateHistogram","scaleLinear","ColorLegend","d3","Filters","Instructions","jsxDEV","_jsxDEV","width","height","dateHistogramSize","orderedDays","App","_s","currentPage","setCurrentPage","isChecked","setIsChecked","worldAtlas","data","brushExtent","setBrushExtent","participant","setParticipant","gender","setGender","modeButton","setModeButton","yValueField","setYValueField","hexbinSize","setHexbinSize","errorMessage","setErrorMessage","handleStartDeclaration","handleGoToQGIS","handleBackToD3React","handleFinish","renderPage","onStart","fileName","_jsxFileName","lineNumber","columnNumber","onQGIS","onBack","renderMainApp","className","children","length","x","y","textAnchor","fontSize","fill","uniqueParticipants","Array","from","Set","map","d","Participant","sort","a","b","filteredData","filter","participantFilter","toString","genderFilter","Gender","modeButtonFilter","ModeButton_xs","hrvValues","h","colorScale","domain","min","mean","max","range","style","display","flex","padding","backgroundColor","boxSizing","src","alt","marginTop","marginLeft","alignSelf","flexGrow","position","id","href","transform","includes","DayOrder","xValue","margin","type","checked","onChange","color","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Welcome from './Welcome'; \nimport QGIS from './QGIS'; \nimport Declaration from './Declaration'; \nimport { useWorldAtlas } from './useWorldAtlas';\nimport './App.css';\nimport { useData } from './useData';\nimport { Hexbinmap } from './HexbinMap/index.js';\nimport { DateHistogram } from './DateHistogram/index.js';\nimport { scaleLinear } from 'd3';\nimport ColorLegend from './HexbinMap/ColorLegend.js'; \nimport * as d3 from 'd3';\nimport Filters from './Filters'; \nimport Instructions from './Instructions'; \n\nconst width = 900;\nconst height = 1000;\nconst dateHistogramSize = 0.24;\nconst orderedDays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]; \n\nconst App = () => {\n    const [currentPage, setCurrentPage] = useState('declaration');\n    const [isChecked, setIsChecked] = useState(false);\n    const worldAtlas = useWorldAtlas();\n    const data = useData(); \n    const [brushExtent, setBrushExtent] = useState(null);\n    const [participant, setParticipant] = useState(\"All\");\n    const [gender, setGender] = useState(\"Both\");\n    const [modeButton, setModeButton] = useState(\"Both\");\n    const [yValueField, setYValueField] = useState(\"HRV\");\n    const [hexbinSize, setHexbinSize] = useState(5);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleStartDeclaration = () => setCurrentPage('welcome');\n    const handleGoToQGIS = () => setCurrentPage('qgis');\n    const handleBackToD3React = () => setCurrentPage('mainapp');\n    const handleFinish = () => {\n        if (!isChecked) {\n            setErrorMessage('You must confirm that you have finished the D3-React questionnaire before finishing this experiment.');\n        } else {\n            setErrorMessage('');\n            setCurrentPage('final');\n        }\n    };\n\n    const renderPage = () => {\n        switch (currentPage) {\n            case 'declaration':\n                return <Declaration onStart={handleStartDeclaration} />;\n            case 'welcome':\n                return <Welcome onQGIS={handleGoToQGIS} />;\n            case 'qgis':\n                return <QGIS onBack={handleBackToD3React} />;\n            case 'mainapp':\n                return renderMainApp();\n            case 'final':\n                return (\n                    <div className=\"final-message\">\n                        Thank you for completing the experiment process!\n                        <br />\n                        <br />\n                        Best Regards,\n                        <div>Febryeric M. Parantean</div>\n                    </div>\n                );\n            default:\n                return <Declaration onStart={handleStartDeclaration} />;\n        }\n    };\n\n    const renderMainApp = () => {\n        if (!worldAtlas || !data || data.length === 0) {\n            return (\n                <svg width={width} height={height}>\n                    <text x={width / 2} y={height / 2} textAnchor=\"middle\" fontSize=\"14\" fill=\"black\">\n                        Loading...\n                    </text>\n                </svg>\n            ); \n        }\n\n        const uniqueParticipants = Array.from(new Set(data.map(d => d.Participant)))\n            .sort((a, b) => a - b); \n\n        const filteredData = data.filter(d => {\n            const participantFilter = participant === \"All\" || d.Participant.toString() === participant;\n            const genderFilter = gender === \"Both\" || d.Gender === gender; \n            const modeButtonFilter = modeButton === \"Both\" || d.ModeButton_xs === modeButton;\n            return participantFilter && genderFilter && modeButtonFilter;\n        });\n\n        const hrvValues = filteredData.map(d => d[yValueField]).filter(h => h != null); \n        const colorScale = scaleLinear()\n            .domain([d3.min(hrvValues) || 0, d3.mean(hrvValues) || 0, d3.max(hrvValues) || 0])\n            .range(['yellow', 'orange', 'red']); \n\n        return (\n            <div style={{ display: 'flex', width: '100vh' }}>\n                {/* Filters Section */}\n                <div className=\"filters\" style={{ flex: '0 0 250px', padding: '20px', backgroundColor: '#f0f0f0', boxSizing: 'border-box' }}>\n                    <Filters \n                        participant={participant} \n                        setParticipant={setParticipant} \n                        gender={gender} \n                        setGender={setGender} \n                        modeButton={modeButton} \n                        setModeButton={setModeButton}\n                        yValueField={yValueField}\n                        setYValueField={setYValueField}\n                        uniqueParticipants={uniqueParticipants} \n                        hexbinSize={hexbinSize}\n                        setHexbinSize={setHexbinSize}\n                    />\n                    <img \n                        src=\"bus.png\" \n                        alt=\"bus Logo\" \n                        style={{ width: '100px', height: 'auto', marginTop: '210px', marginLeft: '35px', alignSelf: 'center' }} \n                    />\n                </div>\n\n                {/* Main Content Area */}\n                <div style={{ flexGrow: 1, position: 'relative' }}>\n                    <svg width={width} height={height}>\n                        <text x={width / 2} y={45} textAnchor=\"middle\" className=\"title\">\n                            Travel Experience with Different Transportation Mode\n                        </text>\n                        <image \n                            id='map-image'\n                            href=\"datamap.png\" \n                            x={21}\n                            y={72} \n                            height={height} \n                            width={width} \n                        />\n                        <g transform={`translate(0,30)`}>\n                            <Hexbinmap \n                                data={brushExtent ? filteredData.filter(d => brushExtent.includes(orderedDays[d.DayOrder])) : []}\n                                worldAtlas={worldAtlas} \n                                yValueField={yValueField} \n                                hexbinSize={hexbinSize} \n                            />\n                        </g>\n                        <g transform={`translate(0, 700)`}>\n                            <DateHistogram\n                                data={filteredData} \n                                width={width}\n                                height={dateHistogramSize * height}\n                                setBrushExtent={setBrushExtent}\n                                xValue={d => d.DayOrder} \n                                yValueField={yValueField} \n                            />\n                        </g>\n                        <g transform={`translate(820, 550)`}>\n                            <ColorLegend \n                                colorScale={colorScale} \n                                yValueField={yValueField} \n                                data={filteredData}  \n                            /> \n                        </g>\n                    </svg>\n\n                    {/* Confirmation Checkbox and Buttons */}\n                    <div style={{ margin: '90px', marginTop:'750px' }}>\n                        <input\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={() => {\n                                setIsChecked(!isChecked);\n                                setErrorMessage(''); // Clear error message on change\n                            }}\n                        />\n                        <label style={{ marginLeft: '5px' }}>\n                            I have finished and submitted the D3-React questionnaire in the Google Form\n                        </label>\n                        {errorMessage && (\n                            <div style={{ color: 'red', marginTop: '10px' }}>\n                                {errorMessage}\n                            </div>\n                        )}\n\n                        <div style={{ marginTop: '10px' }}>\n                            <a href=\"https://forms.gle/cBYJTJ2r9qEpcU8W8\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <button className=\"d3-que\" style={{ marginLeft: '70px', padding: '10px 20px' }}>\n                                    Go to D3-React Questionnaire\n                                </button>\n                            </a>\n                            <button\n                                onClick={handleFinish}\n                                className=\"backd3\"\n                                style={{ marginLeft: '30px', padding: '10px 20px' }} \n                            >\n                                Finish\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Instructions Section on the Right */}\n                <div style={{ flex: '0 0 250px', padding: '90px', backgroundColor: '#f0f0f0', boxSizing: 'border-box' }}>\n                    <Instructions />\n                </div>\n            </div>\n        );\n    };\n\n    return <div>{renderPage()}</div>;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}