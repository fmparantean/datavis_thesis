{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/ColorLegend.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorLegend = ({\n  colorScale\n}) => {\n  _s();\n  useEffect(() => {\n    const svg = d3.select('#color-legend').attr(\"width\", 70) // Adjust width for vertical layout\n    .attr(\"height\", 300); // Increase height\n\n    const legendWidth = 20; // Width for the gradient\n    const legendHeight = 100; // Height for the gradient\n    svg.selectAll(\"*\").remove(); // Clear previous content\n\n    // Add gradient\n    const gradient = svg.append(\"defs\").append(\"linearGradient\").attr(\"id\", \"gradient\").attr(\"x1\", \"0%\").attr(\"y1\", \"0%\").attr(\"x2\", \"0%\") // Vertical gradient\n    .attr(\"y2\", \"100%\");\n\n    // Get min and max values from the color scale domain\n    const domain = colorScale.domain();\n    const minValue = domain[0];\n    const maxValue = domain[domain.length - 1];\n\n    // Create gradient stops based on the full domain\n    const numStops = 5; // Define how many stops you want\n    for (let i = 0; i <= numStops; i++) {\n      const value = minValue + i / numStops * (maxValue - minValue); // Calculate value for this stop\n\n      gradient.append(\"stop\").attr(\"offset\", `${i / numStops * 100}%`).attr(\"stop-color\", colorScale(value)); // Color from scale\n    }\n\n    // Draw gradient rectangle\n    svg.append(\"rect\").attr(\"class\", \"gradient-rect\") // Class for gradient rectangle\n    .attr(\"x\", 0).attr(\"y\", 20) // Positioning from the top\n    .attr(\"width\", legendWidth).attr(\"height\", legendHeight).style(\"fill\", \"url(#gradient)\");\n\n    // Add tick labels\n    const ticks = colorScale.ticks(numStops); // Adjust number of ticks\n    ticks.forEach((tick, index) => {\n      svg.append(\"text\").attr(\"class\", \"legend-tick\") // Class for tick labels\n      .attr(\"x\", legendWidth + 5) // Position to the right of the gradient\n      .attr(\"y\", index / (ticks.length - 1) * legendHeight + 20) // Vertically aligned with the stops\n      .attr(\"text-anchor\", \"start\") // Align to start\n      .text(tick.toFixed(2)); // Format HRV value\n    });\n  }, [colorScale]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    id: \"color-legend\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this); // Placeholder for the legend\n};\n_s(ColorLegend, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ColorLegend;\nexport default ColorLegend;\nvar _c;\n$RefreshReg$(_c, \"ColorLegend\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","ColorLegend","colorScale","_s","svg","select","attr","legendWidth","legendHeight","selectAll","remove","gradient","append","domain","minValue","maxValue","length","numStops","i","value","style","ticks","forEach","tick","index","text","toFixed","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/dataviz_project/src/HexbinMap/ColorLegend.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst ColorLegend = ({ colorScale }) => {\n    useEffect(() => {\n        const svg = d3.select('#color-legend')\n            .attr(\"width\", 70)  // Adjust width for vertical layout\n            .attr(\"height\", 300); // Increase height\n\n        const legendWidth = 20; // Width for the gradient\n        const legendHeight = 100; // Height for the gradient\n        svg.selectAll(\"*\").remove(); // Clear previous content\n\n        // Add gradient\n        const gradient = svg.append(\"defs\")\n            .append(\"linearGradient\")\n            .attr(\"id\", \"gradient\")\n            .attr(\"x1\", \"0%\")\n            .attr(\"y1\", \"0%\")\n            .attr(\"x2\", \"0%\") // Vertical gradient\n            .attr(\"y2\", \"100%\");\n\n        // Get min and max values from the color scale domain\n        const domain = colorScale.domain();\n        const minValue = domain[0];\n        const maxValue = domain[domain.length - 1];\n\n        // Create gradient stops based on the full domain\n        const numStops = 5; // Define how many stops you want\n        for (let i = 0; i <= numStops; i++) {\n            const value = minValue + (i / numStops) * (maxValue - minValue); // Calculate value for this stop\n            \n            gradient.append(\"stop\")\n                .attr(\"offset\", `${(i / numStops) * 100}%`)\n                .attr(\"stop-color\", colorScale(value)); // Color from scale\n        }\n\n        // Draw gradient rectangle\n        svg.append(\"rect\")\n            .attr(\"class\", \"gradient-rect\") // Class for gradient rectangle\n            .attr(\"x\", 0)\n            .attr(\"y\", 20) // Positioning from the top\n            .attr(\"width\", legendWidth)\n            .attr(\"height\", legendHeight)\n            .style(\"fill\", \"url(#gradient)\");\n\n        // Add tick labels\n        const ticks = colorScale.ticks(numStops); // Adjust number of ticks\n        ticks.forEach((tick, index) => {\n            svg.append(\"text\")\n                .attr(\"class\", \"legend-tick\") // Class for tick labels\n                .attr(\"x\", legendWidth + 5) // Position to the right of the gradient\n                .attr(\"y\", (index / (ticks.length - 1)) * legendHeight + 20) // Vertically aligned with the stops\n                .attr(\"text-anchor\", \"start\") // Align to start\n                .text(tick.toFixed(2)); // Format HRV value\n        });\n\n    }, [colorScale]);\n\n    return <svg id=\"color-legend\"></svg>; // Placeholder for the legend\n};\n\nexport default ColorLegend;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}