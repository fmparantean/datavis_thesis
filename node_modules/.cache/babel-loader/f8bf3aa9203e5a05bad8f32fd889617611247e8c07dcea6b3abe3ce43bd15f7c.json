{"ast":null,"code":"var _jsxFileName = \"/Users/fmparantean/Documents/datavis_thesis/src/HexbinMap/index.js\";\nimport React from 'react';\nimport { hexbin } from 'd3-hexbin';\nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { geoMercator } from 'd3-geo';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Hexbinmap = ({\n  data,\n  worldAtlas,\n  yValueField,\n  hexbinSize\n}) => {\n  const svgHeight = 900;\n  const svgWidth = 900;\n  const projection = geoMercator().center([10.537, 52.210]).scale(125000).translate([svgWidth / 2, svgHeight / 2]);\n  const hexbinGenerator = hexbin().extent([[0, 0], [svgWidth, svgHeight]]).radius(hexbinSize);\n  const projectedData = data.map(d => {\n    const coords = projection(d.coords);\n    return {\n      ...d,\n      x: coords[0],\n      y: coords[1]\n    };\n  });\n  const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: svgWidth,\n      height: svgHeight,\n      children: [/*#__PURE__*/_jsxDEV(Marks, {\n        bins: bins,\n        data: projectedData,\n        yValueField: yValueField,\n        hexbinSize: hexbinSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Markscity, {\n        data: projectedData,\n        projection: projection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Hexbinmap;\nvar _c;\n$RefreshReg$(_c, \"Hexbinmap\");","map":{"version":3,"names":["React","hexbin","Marks","Markscity","geoMercator","jsxDEV","_jsxDEV","Fragment","_Fragment","Hexbinmap","data","worldAtlas","yValueField","hexbinSize","svgHeight","svgWidth","projection","center","scale","translate","hexbinGenerator","extent","radius","projectedData","map","d","coords","x","y","bins","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fmparantean/Documents/datavis_thesis/src/HexbinMap/index.js"],"sourcesContent":["import React from 'react';\nimport { hexbin } from 'd3-hexbin'; \nimport { Marks } from './Marks';\nimport { Markscity } from './Markscity';\nimport { geoMercator } from 'd3-geo';\n\nexport const Hexbinmap = ({ data, worldAtlas, yValueField, hexbinSize }) => {\n    const svgHeight = 900;\n    const svgWidth = 900;\n\n    const projection = geoMercator()\n        .center([10.537, 52.210])\n        .scale(125000)\n        .translate([svgWidth / 2, svgHeight / 2]);\n\n    const hexbinGenerator = hexbin()\n        .extent([[0, 0], [svgWidth, svgHeight]])\n        .radius(hexbinSize); \n\n    const projectedData = data.map(d => {\n        const coords = projection(d.coords); \n        return { ...d, x: coords[0], y: coords[1] };\n    });\n\n    const bins = hexbinGenerator(projectedData.map(d => [d.x, d.y]));\n\n    return (\n        <>\n            <svg width={svgWidth} height={svgHeight}>\n                <Marks bins={bins} data={projectedData} yValueField={yValueField} hexbinSize={hexbinSize} /> \n                <Markscity data={projectedData} projection={projection} /> \n            </svg>\n        </>\n    );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,OAAO,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EACxE,MAAMC,SAAS,GAAG,GAAG;EACrB,MAAMC,QAAQ,GAAG,GAAG;EAEpB,MAAMC,UAAU,GAAGZ,WAAW,CAAC,CAAC,CAC3Ba,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CACxBC,KAAK,CAAC,MAAM,CAAC,CACbC,SAAS,CAAC,CAACJ,QAAQ,GAAG,CAAC,EAAED,SAAS,GAAG,CAAC,CAAC,CAAC;EAE7C,MAAMM,eAAe,GAAGnB,MAAM,CAAC,CAAC,CAC3BoB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAACN,QAAQ,EAAED,SAAS,CAAC,CAAC,CAAC,CACvCQ,MAAM,CAACT,UAAU,CAAC;EAEvB,MAAMU,aAAa,GAAGb,IAAI,CAACc,GAAG,CAACC,CAAC,IAAI;IAChC,MAAMC,MAAM,GAAGV,UAAU,CAACS,CAAC,CAACC,MAAM,CAAC;IACnC,OAAO;MAAE,GAAGD,CAAC;MAAEE,CAAC,EAAED,MAAM,CAAC,CAAC,CAAC;MAAEE,CAAC,EAAEF,MAAM,CAAC,CAAC;IAAE,CAAC;EAC/C,CAAC,CAAC;EAEF,MAAMG,IAAI,GAAGT,eAAe,CAACG,aAAa,CAACC,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAACE,CAAC,EAAEF,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;EAEhE,oBACItB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACIxB,OAAA;MAAKyB,KAAK,EAAEhB,QAAS;MAACiB,MAAM,EAAElB,SAAU;MAAAgB,QAAA,gBACpCxB,OAAA,CAACJ,KAAK;QAAC2B,IAAI,EAAEA,IAAK;QAACnB,IAAI,EAAEa,aAAc;QAACX,WAAW,EAAEA,WAAY;QAACC,UAAU,EAAEA;MAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5F9B,OAAA,CAACH,SAAS;QAACO,IAAI,EAAEa,aAAc;QAACP,UAAU,EAAEA;MAAW;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC,gBACR,CAAC;AAEX,CAAC;AAACC,EAAA,GA5BW5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}